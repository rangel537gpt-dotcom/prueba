/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.caja;

import caja.bo.ContadorBO;
import caja.bo.DocumentoPagoBO;
import caja.bo.EventoBO;
import caja.bo.PersonaBO;
import caja.frm.administracion.frmAsignarConceptoEvento_Dialog;
import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.EventoConceptoPago;
import caja.mapeo.entidades.Participante;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author user
 */
public class frmAsignarPartcipanteEvento_Dialog extends javax.swing.JDialog {

    private Object frm;
    private Object frm02;
    private EventoConceptoPago eventoConceptoPago;
    private Cliente cliente;

    /**
     * Creates new form frmAsignarPartcipanteEvento_Dialog
     */
    public frmAsignarPartcipanteEvento_Dialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        TableColumn columna = tBusqueda.getColumn("NRO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna = tBusqueda.getColumn("OBJ");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tBusqueda.getColumn("NRO DOC");
        columna.setPreferredWidth(100);
        columna.setMinWidth(100);
        columna.setMaxWidth(100);
        columna = tDetalle.getColumn("NRO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna = tDetalle.getColumn("OBJ");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tDetalle.getColumn("NRO DOC");
        columna.setPreferredWidth(100);
        columna.setMinWidth(100);
        columna.setMaxWidth(100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tDetalle = new javax.swing.JTable();
        cbFiltro = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tBusqueda = new javax.swing.JTable();
        cbTipoFiltro = new javax.swing.JComboBox<>();
        txtFiltro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OBJ", "NRO", "NRO DOC", "NOMBRE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tDetalle);

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COLEGIADO", "PERSONA" }));
        cbFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFiltroActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar_mini1.png"))); // NOI18N
        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/Guardar2.png"))); // NOI18N
        jButton3.setText("ACEPTAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OBJ", "NRO", "NRO DOC", "NOMBRE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tBusquedaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tBusqueda);

        cbTipoFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CODIGO", "NOMBRES" }));

        jLabel1.setText("PARTICIPANTES:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTipoFiltro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(cbTipoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void cargarDatos(EventoConceptoPago ec, Object f, Object f2, Cliente c) {
        this.frm = f;
        this.frm02 = f2;
        this.eventoConceptoPago = ec;
        this.cliente = c;
        if (this.cliente.getTipoCliente().equals("P")) {
            cbFiltro.setSelectedItem("PERSONA");
            cbTipoFiltro.setSelectedItem("DNI");
            txtFiltro.setText(this.cliente.getPnroDocumento());
            this.jButton1ActionPerformed(null);
        }
        if (this.cliente.getTipoCliente().equals("C")) {
            cbFiltro.setSelectedItem("CONTADOR");
            cbTipoFiltro.setSelectedItem("CODIGO");
            txtFiltro.setText(this.cliente.getCcodigoCole());
            this.jButton1ActionPerformed(null);
        }
        if (this.cliente.getTipoCliente().equals("P") || this.cliente.getTipoCliente().equals("C")) {
            DefaultTableModel modelo = (DefaultTableModel) tDetalle.getModel();
            int contador = tDetalle.getRowCount();
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tDetalle.setValueAt(c, contador, 0);
            tDetalle.setValueAt(contador + 1, contador, 1);
            tDetalle.setValueAt(c.getPnroDocumento(), contador, 2);
            tDetalle.setValueAt(c.getPapePat() + " " + c.getPapeMat() + " " + c.getPnombre(), contador, 3);
        }

    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (cbFiltro.getSelectedItem().toString().equals("PERSONA")) {
            PersonaBO p = PersonaBO.getInstance();
            List<Cliente> l;
            if (cbTipoFiltro.getSelectedItem().toString().equals("DNI")) {
                l = p.BuscarPersona(txtFiltro.getText(), 1);
            } else {
                l = p.BuscarPersona(txtFiltro.getText(), 4);
            }
            DefaultTableModel modelo = (DefaultTableModel) tBusqueda.getModel();
            modelo = (DefaultTableModel) tBusqueda.getModel();
            modelo.setRowCount(l.size());
            int contador = 0;
            for (Cliente cli : l) {
                modelo.setNumRows(contador);
                modelo.addRow(new Object[contador]);
                tBusqueda.setValueAt(cli, contador, 0);
                tBusqueda.setValueAt(contador + 1, contador, 1);
                tBusqueda.setValueAt(cli.getPnroDocumento(), contador, 2);
                tBusqueda.setValueAt(cli.getPapePat() + " " + cli.getPapeMat() + " " + cli.getPnombre(), contador, 3);
                contador++;
            }
        } else {
            ContadorBO c = ContadorBO.getInstance();
            List<Cliente> l;
            if (cbTipoFiltro.getSelectedItem().toString().equals("CODIGO")) {
                l = c.BuscarContador(txtFiltro.getText(), 2);
            } else {
                l = c.BuscarContador(txtFiltro.getText(), 4);
            }
            DefaultTableModel modelo = (DefaultTableModel) tBusqueda.getModel();
            modelo = (DefaultTableModel) tBusqueda.getModel();
            modelo.setRowCount(l.size());
            int contador = 0;
            for (Cliente cli : l) {
                modelo.setNumRows(contador);
                modelo.addRow(new Object[contador]);
                tBusqueda.setValueAt(cli, contador, 0);
                tBusqueda.setValueAt(contador + 1, contador, 1);
                tBusqueda.setValueAt(cli.getCcodigoCole(), contador, 2);
                tBusqueda.setValueAt(cli.getPapePat() + " " + cli.getPapeMat() + " " + cli.getPnombre(), contador, 3);
                contador++;
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        EventoBO eBO = EventoBO.getInstance();
        List<Participante> l = new ArrayList();
        for (int i = 0; i < tDetalle.getRowCount(); i++) {
            Cliente c = (Cliente) tDetalle.getValueAt(i, 0);
            List<Participante> participantesEncontrados = eBO.obtenerParticipante_SegunEventoCliente(this.eventoConceptoPago.getInversion().getEvento().getId(), c.getIdCliente());
            if (participantesEncontrados.size() > 0) {
                JOptionPane.showMessageDialog(this,
                        "El Cliente " + c.getPapePat() + " " + c.getPapeMat() + " " + c.getPnombre() + " ya esta inscrito como participante",
                        "Advertencia",
                        JOptionPane.WARNING_MESSAGE);
            }
            Participante p = new Participante();
            p.setCliente(c);
            p.setBorrado("1");
            l.add(p);
        }
        ((frmComprobantePagoDetalle) this.frm).agregarParticipantes(this.eventoConceptoPago, l);
        ((frmAsignarConceptoEvento_Dialog) this.frm02).dispose();
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cbFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFiltroActionPerformed
        if (cbFiltro.getSelectedItem().toString().equals("PERSONA")) {
            cbTipoFiltro.removeAllItems();
            cbTipoFiltro.addItem("DNI");
            cbTipoFiltro.addItem("NOMBRES");
        } else {
            cbTipoFiltro.removeAllItems();
            cbTipoFiltro.addItem("CODIGO");
            cbTipoFiltro.addItem("NOMBRES");
        }
    }//GEN-LAST:event_cbFiltroActionPerformed

    private void tBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tBusquedaMouseClicked
        if (evt.getClickCount() == 2) {
            Cliente c = (Cliente) tBusqueda.getValueAt(tBusqueda.getSelectedRow(), 0);
            DefaultTableModel modelo = (DefaultTableModel) tDetalle.getModel();
            int contador = tDetalle.getRowCount();
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tDetalle.setValueAt(c, contador, 0);
            tDetalle.setValueAt(contador + 1, contador, 1);
            tDetalle.setValueAt(c.getPnroDocumento(), contador, 2);
            tDetalle.setValueAt(c.getPapePat() + " " + c.getPapeMat() + " " + c.getPnombre(), contador, 3);
        }
    }//GEN-LAST:event_tBusquedaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAsignarPartcipanteEvento_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAsignarPartcipanteEvento_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAsignarPartcipanteEvento_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAsignarPartcipanteEvento_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmAsignarPartcipanteEvento_Dialog dialog = new frmAsignarPartcipanteEvento_Dialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbFiltro;
    private javax.swing.JComboBox<String> cbTipoFiltro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tBusqueda;
    private javax.swing.JTable tDetalle;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
