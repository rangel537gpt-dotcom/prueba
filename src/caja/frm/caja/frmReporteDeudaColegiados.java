/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.caja;

import caja.bo.AnioMesBO;
import caja.bo.ClienteBO;
import caja.bo.CuotasBO;
import caja.bo.DeudasBO;
//import caja.bo.DocumentoPagoBO;
import caja.bo.FinanciamientoBO;
import caja.bo.PersonaBO;
//import caja.bo.PersonaBO;
import caja.bo.ReincorporacionBO;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.AnioMes;
import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.Deuda;
import caja.mapeo.entidades.FinanciamientoDocumentoPago;
import caja.mapeo.entidades.ReincorporacionDocumentoPago;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author user
 */
public class frmReporteDeudaColegiados extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmReporteDeudaColegiados
     */
    public frmReporteDeudaColegiados() {
        initComponents();
        tListado.setAutoResizeMode(tListado.AUTO_RESIZE_OFF);
        TableColumn columna = tListado.getColumn("NRO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna = tListado.getColumn("SEXO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tListado = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();

        setClosable(true);
        setTitle("REPORTE DEUDA COLEGIADOS");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N

        tListado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NRO", "MATRICULA", "APELLIDOS", "NOMBRES", "SEXO", "TEL. DOMI", "TEL. CELULAR", "TEL. TRABAJO", "E-MAIL", "FEC AFIL", "ES_CERT", "BUZON", "DIR DOM", "DEP DOM", "PRO DOM", "DIS DOM", "DIR TRA", "CEN TRA", "DEP TRA", "PRO TRA", "DIS TRA", "COD COBRA", "ESTADO", "C. ORDINARIA", "MONTO C.ORD", "F. MUTUAL", "F. CLUB", "FINANCIAMIENTO", "MONTO FINANCIAMIENTO", "REINCOR. 2015", "MONTO REINCOR. 2015", "MULTA1", "MULTA2", "REIN 2005", "REIN 2006", "OTRO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tListado);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar5.png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CargarDatos() {
        PersonaBO pBO = PersonaBO.getInstance();
        CuotasBO cuBO = CuotasBO.getInstance();
        ClienteBO cBO = ClienteBO.getInstance();
        List<Cliente> listado = cBO.ObtenerTodosContadores();
        DefaultTableModel modelDetalle = (DefaultTableModel) tListado.getModel();
        modelDetalle.setNumRows(0);
        int contador = 0;
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        for (Cliente c : listado) {
            modelDetalle.setNumRows(contador);
            modelDetalle.addRow(new Object[contador]);
            tListado.setValueAt(contador + 1, contador, 0);
            if (c.getCcodigoCole() != null) {
                tListado.setValueAt(c.getCcodigoCole(), contador, 1);
            }
            if (c.getPapePat() != null) {
                tListado.setValueAt(c.getPapePat() + " " + c.getPapeMat(), contador, 2);
            }
            if (c.getPnombre() != null) {
                tListado.setValueAt(c.getPnombre(), contador, 3);
            }
            if (c.getPsexo() != null) {
                tListado.setValueAt(c.getPsexo(), contador, 4);
            }
            if (c.getPtelefonoDomicilio() != null) {
                tListado.setValueAt(c.getPtelefonoDomicilio(), contador, 5);
            }
            if (c.getPtelefonoCelular() != null) {
                tListado.setValueAt(c.getPtelefonoCelular(), contador, 6);
            }
            if (c.getPtelefonoTrabajo() != null) {
                tListado.setValueAt(c.getPtelefonoTrabajo(), contador, 7);
            }
            if (c.getCemail() != null) {
                tListado.setValueAt(c.getCemail(), contador, 8);
            }
            if (c.getCfechaAfiliacion() != null) {
                tListado.setValueAt(formato.format(c.getCfechaAfiliacion()), contador, 9);
            }
            if (c.getCesCertificado() != null) {
                tListado.setValueAt(c.getCesCertificado(), contador, 10);
            }
            if (c.getCbuzon() != null) {
                tListado.setValueAt(c.getCbuzon(), contador, 11);
            }
            if (c.getPdireccionDomicilio() != null) {
                tListado.setValueAt(c.getPdireccionDomicilio(), contador, 12);
            }
            if (c.getCdepDomicilio() != null) {
                String nombre = pBO.ObtenerNombreDepartamento(c.getCdepDomicilio());
                tListado.setValueAt(nombre, contador, 13);
            }
            if (c.getCproDomicilio() != null) {
                String nombre = pBO.ObtenerNombreProvincia(c.getCproDomicilio());
                tListado.setValueAt(nombre, contador, 14);
            }
            if (c.getCdisDomicilio() != null) {
                String nombre = pBO.ObtenerNombreDistrito(c.getCdisDomicilio());
                tListado.setValueAt(nombre, contador, 15);
            }
            if (c.getPdireccionTrabajo() != null) {
                tListado.setValueAt(c.getPdireccionTrabajo(), contador, 16);
            }
            if (c.getCcentroTrabajo() != null) {
                tListado.setValueAt(c.getCcentroTrabajo(), contador, 17);
            }
            if (c.getCdepTrabajo() != null) {
                String nombre = pBO.ObtenerNombreDepartamento(c.getCdepTrabajo());
                tListado.setValueAt(nombre, contador, 18);
            }
            if (c.getCproTrabajo() != null) {
                String nombre = pBO.ObtenerNombreProvincia(c.getCproTrabajo());
                tListado.setValueAt(nombre, contador, 19);
            }
            if (c.getCdisTrabajo() != null) {
                String nombre = pBO.ObtenerNombreDistrito(c.getCdisTrabajo());
                tListado.setValueAt(nombre, contador, 20);
            }
            if (c.getCobcodigoCobrador() != null) {
                tListado.setValueAt(c.getCobcodigoCobrador(), contador, 21);
            }
            if (c.getEstado() != null) {
                if (c.getEstado().equals("H")) {
                    tListado.setValueAt("HABIL", contador, 22);
                }
                if (c.getEstado().equals("I")) {
                    tListado.setValueAt("INHABIL", contador, 22);
                }
                if (c.getEstado().equals("V")) {
                    tListado.setValueAt("VITALICIO", contador, 22);
                }
                if (c.getEstado().equals("O")) {
                    tListado.setValueAt("HONORARIO", contador, 22);
                }
                if (c.getEstado().equals("F")) {
                    tListado.setValueAt("FALLECIDO", contador, 22);
                }
                if (c.getEstado().equals("L")) {
                    tListado.setValueAt("LICENCIA", contador, 22);
                }
                if (c.getEstado().equals("R")) {
                    tListado.setValueAt("RETIRADO", contador, 22);
                }
            }
            if (c.getEstado().equals("H") || c.getEstado().equals("I") || c.getEstado().equals("V") || c.getEstado().equals("O")) {
                double montoCuota = 0; //id = 2
                double montoFondoMutual = 0; //id = 3
                double montoFondoClub = 0; // id= 4
                if (c.getCfechaAfiliacion() != null) {
                    List listadoCuotas = cuBO.ObtenerCuotasPendientesCliente_30anios(c);
                    if (listadoCuotas != null) {
                        for (Object pobj : listadoCuotas) {
                            Object[] obj = (Object[]) pobj;
//                            if (obj[4] == null) {
//                                monto = monto + (double) obj[5];
//                            }
                            if (obj[4] == null) {
                                if ((Integer) obj[6] == 2) {
                                    montoCuota = montoCuota + (double) obj[5];
                                }
                                if ((Integer) obj[6] == 3) {
                                    montoFondoMutual = montoFondoMutual + (double) obj[5];
                                }
                                if ((Integer) obj[6] == 4) {
                                    montoFondoClub = montoFondoClub + (double) obj[5];
                                }
                            }
                        }
                        if (!listadoCuotas.isEmpty()) {
                            Object[] desde = (Object[]) listadoCuotas.get(0);
                            Object[] hasta = (Object[]) listadoCuotas.get(listadoCuotas.size() - 1);
                            AnioMesBO amBO = AnioMesBO.getInstance();
                            AnioMes amDesde = amBO.ObtenerAnioMesSegunNroOrden((int) desde[0]);
                            AnioMes amHasta = amBO.ObtenerAnioMesSegunNroOrden((int) hasta[0]);
                            tListado.setValueAt(amDesde.getAnio() + " / " + amDesde.getMes() + " - " + amHasta.getAnio() + " / " + amHasta.getMes(), contador, 23);
                        }
                    }
                }
                tListado.setValueAt(montoCuota, contador, 24);
                tListado.setValueAt(montoFondoMutual, contador, 25);
                tListado.setValueAt(montoFondoClub, contador, 26);
                FinanciamientoBO fBO = FinanciamientoBO.getInstance();
                List<FinanciamientoDocumentoPago> listadoFinanciamientos = fBO.ObtenerTodosFinanciamientosPendientes(c.getIdCliente());
                double montoFinanciamiento = 0;
                if (listadoFinanciamientos != null) {
                    for (FinanciamientoDocumentoPago fdp : listadoFinanciamientos) {
                        montoFinanciamiento = montoFinanciamiento + fdp.getMonto();
                    }
                    tListado.setValueAt("Cuotas: " + listadoFinanciamientos.size(), contador, 27);
                    tListado.setValueAt(montoFinanciamiento, contador, 28);
                }
                ReincorporacionBO rBO = ReincorporacionBO.getInstance();
                List<ReincorporacionDocumentoPago> listadoReincorporacion = rBO.ObtenerTodasReincoporacionesPendientes(c.getIdCliente());
                double montoReincorporacion = 0;
                if (listadoReincorporacion != null) {
                    for (ReincorporacionDocumentoPago rdp : listadoReincorporacion) {
                        montoReincorporacion = montoReincorporacion + rdp.getMontoFondo() + rdp.getMontoOtros();
                    }
                    tListado.setValueAt("Cuotas: " + listadoReincorporacion.size(), contador, 29);
                    tListado.setValueAt(montoReincorporacion, contador, 30);
                }
                DeudasBO dBO = DeudasBO.getInstance();
                List<Deuda> listadoDeudas = dBO.ObtenerTodasDeudasPendientes(c.getIdCliente());
                tListado.setValueAt(0.0, contador, 31);
                tListado.setValueAt(0.0, contador, 32);
                tListado.setValueAt(0.0, contador, 33);
                tListado.setValueAt(0.0, contador, 34);
                tListado.setValueAt(0.0, contador, 35);
                if (listadoDeudas != null) {
                    for (Deuda d : listadoDeudas) {
                        if (d.getConceptoPagoDetalle().getIdConceptoPagoDetalle() == 4603) {
                            tListado.setValueAt(d.getMonto(), contador, 31);
                        } else {
                            if (d.getConceptoPagoDetalle().getIdConceptoPagoDetalle() == 4604) {
                                tListado.setValueAt(d.getMonto(), contador, 32);
                            } else {
                                if (d.getConceptoPagoDetalle().getIdConceptoPagoDetalle() == 4225) {
                                    tListado.setValueAt(d.getMonto(), contador, 33);
                                } else {
                                    if (d.getConceptoPagoDetalle().getIdConceptoPagoDetalle() == 4307) {
                                        tListado.setValueAt(d.getMonto(), contador, 34);
                                    } else {
                                        tListado.setValueAt(d.getMonto(), contador, 35);
                                    }
                                }
                            }
                        }
                    }
                }
            }
            contador = contador + 1;
        }
        JOptionPane.showMessageDialog(this,
                "PROCESO TERMINADO",
                "OK",
                JOptionPane.WARNING_MESSAGE);
    }


    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        JDialog dlgProgress = f.obtenerProgressBar();
        SwingWorker<Void, Void> sw = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                CargarDatos();
                return null;
            }

            @Override
            protected void done() {
                dlgProgress.dispose();//close the modal dialog
            }
        };
        sw.execute(); // this will start the processing on a separate thread
        dlgProgress.setVisible(true); //this will block user input as long as the processing task is working

//        frmPrincipal fPrin = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
//        Thread queryThread = new Thread() {
//            public void run() {
//                frmCargando fCargando = new frmCargando();
//                fPrin.AgregarFormulario(fCargando);
//                int x = (fPrin.getWidth() - fCargando.getWidth()) / 2;
//                int y = (fPrin.getHeight() - fCargando.getHeight()) / 2;
//                fCargando.setLocation(x, y);
//                fCargando.setVisible(true);
//                fCargando.toFront();
//                CargarDatos();
//                fCargando.dispose();
//            }
//        };
//        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tListado;
    // End of variables declaration//GEN-END:variables
}
