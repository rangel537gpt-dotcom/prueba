/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.caja;

import caja.bo.AlumnoBO;
import caja.bo.ContadorBO;
import caja.bo.SeguridadBO;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.ClienteCertificado;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import units.DatePicker;

/**
 *
 * @author juan carlos
 */
public class frmReporteAlumnos extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmReporteAlumnos
     */
    public frmReporteAlumnos() {
        initComponents();
        Date ahora = new Date();
        Date ahora1 = new Date();
        SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");
        txtFechaInicio.setText(formateador.format(ahora));
        txtFechaFin.setText(formateador.format(ahora1));

//        String Codigo = "";
//        txtCodigoCurso.setText(Codigo);
//        
//        String fechaInicio = "";
//        txtFechaInicio.setText(fechaInicio);
//        
//        String fechaFin = "";
//        txtFechaInicio.setText(fechaFin);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCodigoCurso = new javax.swing.JTextField();
        btnCurso = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtFechaInicio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFechaFin = new javax.swing.JTextField();
        btnFechaInicio = new javax.swing.JButton();
        btnFechaFin = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Reporte de Alumnos por Curso");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N

        jLabel1.setText("CÃ³digo del Curso:");

        btnCurso.setText("GENERAR REPORTE");
        btnCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCursoActionPerformed(evt);
            }
        });

        jLabel3.setText("Fecha de Inicio:");

        jLabel4.setText("Fecha de Fin:");

        btnFechaInicio.setText("...");
        btnFechaInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFechaInicioActionPerformed(evt);
            }
        });

        btnFechaFin.setText("...");
        btnFechaFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFechaFinActionPerformed(evt);
            }
        });

        btnExportar.setText("EXPORTAR ARCHIVO");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCodigoCurso)
                            .addComponent(txtFechaInicio)
                            .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFechaInicio)
                            .addComponent(btnFechaFin)))
                    .addComponent(btnExportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFechaInicio))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFechaFin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportar)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCursoActionPerformed
        frmPrincipal fPrin = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        Thread queryThread = new Thread() {
            public void run() {
                frmCargando fCargando = new frmCargando();
                fPrin.AgregarFormulario(fCargando);
                int x = (fPrin.getWidth() - fCargando.getWidth()) / 2;
                int y = (fPrin.getHeight() - fCargando.getHeight()) / 2;
                fCargando.setLocation(x, y);
                fCargando.setVisible(true);
                fCargando.toFront();
                ImprimirReporteAlumno();
                fCargando.dispose();
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnCursoActionPerformed

    private void btnFechaFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechaFinActionPerformed
        DatePicker dtp = new DatePicker(this);
        txtFechaFin.setText(dtp.setPickedDate());
    }//GEN-LAST:event_btnFechaFinActionPerformed

    private void btnFechaInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechaInicioActionPerformed
        DatePicker dtp = new DatePicker(this);
        txtFechaInicio.setText(dtp.setPickedDate());
    }//GEN-LAST:event_btnFechaInicioActionPerformed

    private void ExportarDatos() throws ParseException {
        try {
            File carpeta = new File("archivos");
            carpeta.mkdirs();
            carpeta = new File("archivos/ALUMNOS");
            carpeta.mkdirs();
            AlumnoBO aBO = AlumnoBO.getInstance();
            SeguridadBO sBO = SeguridadBO.getINSTANCE();
            ContadorBO cBO = ContadorBO.getInstance();
            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            Date desde = format.parse(txtFechaInicio.getText());
            Date hasta = format.parse(txtFechaFin.getText());
            SimpleDateFormat formateador = new SimpleDateFormat("yyyyMMdd");
            List<Object> lAlumnos = aBO.ObtenerAlumnosExcel(txtCodigoCurso.getText(), formateador.format(desde), formateador.format(hasta));
            //for (Object pobj : listadoPersonalPlanilla) {
            Date fechaSistema = new Date();
            SimpleDateFormat formato = new SimpleDateFormat("yyyy.MM.dd_HH.mm.ss");
            //SimpleDateFormat fFecha = new SimpleDateFormat("yyyy-MM-dd");
            Workbook libro = new HSSFWorkbook();
            String nombreArchivo = "archivos/ALUMNOS/WEB_" + formato.format(fechaSistema) + ".xls";
            FileOutputStream archivo = new FileOutputStream(nombreArchivo);
            Sheet hoja = libro.createSheet("WEB");
            int contador = 0;
            Row fila = hoja.createRow((short) contador);
            Cell celda = fila.createCell((short) 0);
            celda.setCellValue("DNI");
            celda = fila.createCell((short) 1);
            celda.setCellValue("CODIGO");
            celda = fila.createCell((short) 2);
            celda.setCellValue("CERTIFICADO");
            celda = fila.createCell((short) 3);
            celda.setCellValue("APELLIDOS");
            celda = fila.createCell((short) 4);
            celda.setCellValue("NOMBRE");
            celda = fila.createCell((short) 5);
            celda.setCellValue("CURSO");
            celda = fila.createCell((short) 6);
            celda.setCellValue("CODIGO CURSO");
            celda = fila.createCell((short) 7);
            celda.setCellValue("CONTADO/CREDITO");
            celda = fila.createCell((short) 8);
            celda.setCellValue("EMPRESA");
            contador = contador + 1;
            String tipoCliente = "";
            for (Object pobj : lAlumnos) {
                Object[] obj = (Object[]) pobj;

                fila = hoja.createRow((short) contador);

                celda = fila.createCell((short) 0);
                celda.setCellValue((String) obj[0]);
                celda = fila.createCell((short) 1);
                celda.setCellValue((String) obj[1]);
                celda = fila.createCell((short) 2);
                if (obj[8] != null) {
                    tipoCliente = (String) obj[8];
                }
                if (tipoCliente.equals("C")) {
                    if (obj[1] != null) {
                        String codigo = (String) obj[1];
                        ClienteCertificado cc = cBO.ObtenerUltimoCertificadoContador_SegunCodigo(codigo);
                        if (cc != null) {
                            Date ahora = sBO.ObtenerFechaServidor();
                            if (ahora.compareTo(cc.getHasta()) <= 0) {
                                celda.setCellValue("CPCC");
                            } else {
                                celda.setCellValue("CPC");
                            }
                        } else {
                            celda.setCellValue("CPC");
                        }
                    }
                }
                celda = fila.createCell((short) 3);
                celda.setCellValue((String) obj[2]);
                celda = fila.createCell((short) 4);
                celda.setCellValue((String) obj[3]);
                celda = fila.createCell((short) 5);
                celda.setCellValue((String) obj[4]);
                celda = fila.createCell((short) 6);
                celda.setCellValue((String) obj[5]);
                celda = fila.createCell((short) 7);
                celda.setCellValue((String) obj[6]);
                celda = fila.createCell((short) 8);
                celda.setCellValue((String) obj[7]);
                contador++;
            }
            libro.write(archivo);
            archivo.close();
            try {
                File objetofile = new File(nombreArchivo);
                Desktop.getDesktop().open(objetofile);
            } catch (IOException ex) {
                System.out.println(ex);
            }
            JOptionPane.showMessageDialog(this,
                    "SE GENERÃ EL ARCHIVO",
                    "ERROR",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {

            e.printStackTrace();

        }
    }


    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        frmPrincipal fPrin = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        Thread queryThread = new Thread() {
            public void run() {
                frmCargando fCargando = new frmCargando();
                fPrin.AgregarFormulario(fCargando);
                int x = (fPrin.getWidth() - fCargando.getWidth()) / 2;
                int y = (fPrin.getHeight() - fCargando.getHeight()) / 2;
                fCargando.setLocation(x, y);
                fCargando.setVisible(true);
                fCargando.toFront();
                try {
                    ExportarDatos();
                } catch (ParseException ex) {
                    Logger.getLogger(frmReporteAlumnos.class.getName()).log(Level.SEVERE, null, ex);
                }
                fCargando.dispose();
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnExportarActionPerformed

    public void ImprimirReporteAlumno() {
        try {
            String jdbcDriver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
            Class.forName(jdbcDriver);
            SeguridadBO sBO = SeguridadBO.getInstance();
            String url = sBO.getUrlReporte();
            //String url = "jdbc:sqlserver://localhost;databaseName=Caja";
            String user = "sa";
            //String pass = "sajuancarlos";
            String pass = "4dm1n1str4c10nGOB90570";
            Connection con = DriverManager.getConnection(url, user, pass);
            String fullPath = "";
            Map param;
            fullPath = "reportes/Alumnos_Nuevos.jasper";
            //AlumnoBO aluBO = AlumnoBO.getInstance();
            //Cliente cli = cliBO.getCliente();
            param = new HashMap();

            String CodigoDelCurso = "";
            CodigoDelCurso = txtCodigoCurso.getText();

            String FechaInicio = txtFechaInicio.getText();
            String FechaFin = txtFechaFin.getText();

            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            Date date = format.parse(FechaInicio);
            Date date1 = format.parse(FechaFin);
            SimpleDateFormat formateador = new SimpleDateFormat("yyyyMMdd");

            param.put("CodigoCurso", CodigoDelCurso);
            param.put("Fecha_inicio", formateador.format(date));
            param.put("Fecha_fin", formateador.format(date1));
            param.put("REPORT_LOCALE", new Locale("en", "EN"));
            JasperPrint JPrint = JasperFillManager.fillReport(fullPath, param, con);

            JasperViewer.viewReport(JPrint, false);
            //JasperPrintManager.printReport(JPrint, true);
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCurso;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnFechaFin;
    private javax.swing.JButton btnFechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtCodigoCurso;
    private javax.swing.JTextField txtFechaFin;
    private javax.swing.JTextField txtFechaInicio;
    // End of variables declaration//GEN-END:variables
}
