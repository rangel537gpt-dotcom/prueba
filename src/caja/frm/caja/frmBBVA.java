/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.caja;

import caja.bo.AnioMesBO;
import caja.bo.ClienteBO;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.AnioMes;
import caja.mapeo.entidades.Bbva;
import java.awt.Desktop;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
//import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author user
 */
public class frmBBVA extends javax.swing.JInternalFrame {

    private int nroOperacion = 0;

    /**
     * Creates new form frmBBVA
     */
    public frmBBVA() {
        initComponents();
        TableColumn columna = tDetalle.getColumn("NRO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna = tDetalle.getColumn("OBJ");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tDetalle = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton3 = new javax.swing.JButton();

        jMenuItem1.setText("GENERAR TXT");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem4.setText("SUBIR NUEVO ARCHIVO RECEPCIÓN");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem4);

        jMenuItem2.setText("MOSTRAR RECEPCIÓN");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setText("SALIR");
        jPopupMenu1.add(jMenuItem3);

        setClosable(true);
        setTitle("BBVA");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(900, 600));

        tDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OBJ", "NRO", "NRO OPERACIÓN", "DESDE", "HASTA", "FECHA OPERACIÓN", "TIPO", "VERSIÓN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tDetalle.setComponentPopupMenu(jPopupMenu1);
        tDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tDetalleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tDetalle);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar5.png"))); // NOI18N
        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/nuevoOficio.png"))); // NOI18N
        jButton3.setText("NUEVO");
        jButton3.setPreferredSize(new java.awt.Dimension(199, 29));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void GenerarOperacionBbva(int aDesde, int aHasta, int mDesde, int mHasta) {
        Thread queryThread = new Thread() {
            public void run() {
                ClienteBO cBO = ClienteBO.getInstance();
//                String[] Movimientos = {"Carga Parcial", "Carga Total", "Eliminacion de Registros"};
//                String TipoMovimiento = (String) JOptionPane.showInputDialog(null,
//                        "Cual es el tipo de Movimiento?",
//                        "Elegir",
//                        JOptionPane.QUESTION_MESSAGE,
//                        null,
//                        Movimientos,
//                        Movimientos[0]);
//                if (TipoMovimiento.equals("Carga Parcial")) {
//                    TipoMovimiento = "P";
//                } else {
//                    if (TipoMovimiento.equals("Carga Total")) {
//                        TipoMovimiento = "T";
//                    } else {
//                        TipoMovimiento = "E";
//                    }
//                }
                String TipoMovimiento = "T";
                AnioMesBO amBO = AnioMesBO.getInstance();
                AnioMes amDesde = amBO.ObtenerAnioMes(aDesde, mDesde);
                AnioMes amHasta = amBO.ObtenerAnioMes(aHasta, mHasta);
                cBO.GenerarEstructuraDatosCobranzaInstitucional_BBVA(jProgressBar1, TipoMovimiento, amDesde.getNroOrden(), amHasta.getNroOrden(), TipoMovimiento);
            }
        };
        queryThread.start();
    }

    private void GenerarArchivo() {
        if (this.nroOperacion > 0) {
            try {
                File carpeta = new File("archivos");
                carpeta.mkdirs();
                carpeta = new File("archivos/BBVA");
                carpeta.mkdirs();
                BufferedWriter bw = null;
                PrintWriter wr = null;
                File f;
                Date fechaSistema = new Date();
                SimpleDateFormat formato = new SimpleDateFormat("yyyy.MM.dd_HH.mm.ss");
                SimpleDateFormat foo = new SimpleDateFormat("yyyyMMdd");
                String nombreArchivo = "archivos/BBVA/TXT" + formato.format(fechaSistema) + ".txt";
                f = new File(nombreArchivo);
                FileWriter w = new FileWriter(f);
                bw = new BufferedWriter(w);
                wr = new PrintWriter(bw);
                ClienteBO cBO = ClienteBO.getInstance();
                Bbva b = cBO.ObtenerBbva(this.nroOperacion);
                String cabecera = "0120174327026   PEN" + foo.format(b.getFechaOperacion()) + String.format("%03d", b.getVersion()) + "       " + b.getTipoIdentificacion();
                String vacio = this.RellenarEspacionBlanco("", 322);
                cabecera = cabecera + vacio;
                wr.write(cabecera + "\r\n");
                List<Object> listadoBBVA = cBO.ObtenerListado_BBVA(this.nroOperacion);
                Calendar calendario = Calendar.getInstance();
                double montoTotal = 0;
                for (Object pobj : listadoBBVA) {
                    Object[] obj = (Object[]) pobj;
                    String codColegiado = (String) obj[0];
                    String nombre = (String) obj[1];
                    String tipConcepto = (String) obj[2];
                    int anio = (int) obj[3];
                    int mes = (int) obj[4];
                    double monto = (double) obj[5];
                    montoTotal = montoTotal + monto;
//                    System.out.println(codColegiado + "|" + nombre + "|" + tipConcepto + "|" + anio + "|" + mes);
                    if (nombre.length() > 30) {
                        nombre = nombre.substring(0, 30);
                    }
                    nombre = this.RellenarEspacionBlanco(nombre, 30);
                    if (tipConcepto.equals("CUOTA")) {
                        tipConcepto = "CUOTA-" + this.ObtenerMes(mes) + anio;
                    }
                    tipConcepto = this.RellenarEspacionBlanco(tipConcepto, 48);
                    //----------------------------------------------------------
                    monto = Math.round(monto * Math.pow(10, 2)) / Math.pow(10, 2);
                    double precioVenta = monto;
                    int valorEntero = (int) precioVenta;
                    double decimales = precioVenta - (int) precioVenta;
                    decimales = Math.round(decimales * Math.pow(10, 2)) / Math.pow(10, 2);
                    int valorDecimales = (int) (decimales * 100);
                    String d = "";
                    if (valorDecimales == 0) {
                        d = "00";
                    } else {
                        d = String.valueOf(valorDecimales);
                    }
                    //----------------------------------------------------------
                    calendario.set(anio, mes - 1, 1);
                    int ultimoDiaMes = calendario.getActualMaximum(Calendar.DAY_OF_MONTH);
                    calendario.set(anio, mes - 1, ultimoDiaMes);
//                    calendario.getTime();
                    String detalle = "02" + nombre + codColegiado + tipConcepto + foo.format(calendario.getTime()) + "2030123100";
                    detalle = detalle + String.format("%013d", valorEntero) + d + String.format("%013d", valorEntero) + d;
                    String espacios = this.RellenarEspacionBlanco("", 32);
                    String ceros = this.RellenarCeros("", 148);
                    String cerosFinal = this.RellenarCeros("", 51);

//                    String codConcepto = tipConcepto + "-" + String.valueOf(anio) + "-" + String.valueOf(mes);
//                    String fechaEmision = "01/" + String.format("%02d", mes) + "/" + anio;
                    wr.write(detalle + espacios + ceros + "L" + cerosFinal + "\r\n");
                }
                //----------------------------------------------------------
                montoTotal = Math.round(montoTotal * Math.pow(10, 2)) / Math.pow(10, 2);
                double precioVenta = montoTotal;
                int valorEntero = (int) precioVenta;
                double decimales = precioVenta - (int) precioVenta;
                decimales = Math.round(decimales * Math.pow(10, 2)) / Math.pow(10, 2);
                int valorDecimales = (int) (decimales * 100);
//                valorDecimales = 10;
                String d = "";
                if (valorDecimales == 0) {
                    d = "00";
                } else {
                    d = String.valueOf(valorDecimales);
                }
                String cerosFinal = this.RellenarCeros("", 18);
                String espaciosFinal = this.RellenarEspacionBlanco("", 295);
                //----------------------------------------------------------
                wr.write("03" + String.format("%09d", listadoBBVA.size()) + String.format("%016d", valorEntero) + d + String.format("%016d", valorEntero) + d + cerosFinal + espaciosFinal + "\r\n");
                //-------------------------------------            
                wr.close();
                bw.close();
                try {
                    File objetofile = new File(nombreArchivo);
                    Desktop.getDesktop().open(objetofile);
                } catch (IOException ex) {
                    System.out.println(ex);
                }
            } catch (IOException e) {
            };
        } else {
            JOptionPane.showMessageDialog(this, "DEBE PONER UN NRO DE OPERACIÓN", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        f.AbrirFormularioGenerarOperacionBbva(this);
    }//GEN-LAST:event_jButton3ActionPerformed

    private String RellenarEspacionBlanco(String cadena, int cant) {
        int contador = cadena.length();
        while (contador < cant) {
            cadena = cadena + " ";
            contador++;
        }
        return cadena;
    }

    private String RellenarCeros(String cadena, int cant) {
        int contador = 0;
        while (contador < cant) {
            cadena = cadena + "0";
            contador++;
        }
        return cadena;
    }

    private String ObtenerMes(int mes) {
        String m = "";
        if (mes == 1) {
            m = "ENE";
        }
        if (mes == 2) {
            m = "FEB";
        }
        if (mes == 3) {
            m = "MAR";
        }
        if (mes == 4) {
            m = "ABR";
        }
        if (mes == 5) {
            m = "MAY";
        }
        if (mes == 6) {
            m = "JUN";
        }
        if (mes == 7) {
            m = "JUL";
        }
        if (mes == 8) {
            m = "AGO";
        }
        if (mes == 9) {
            m = "SEP";
        }
        if (mes == 10) {
            m = "OCT";
        }
        if (mes == 11) {
            m = "NOV";
        }
        if (mes == 12) {
            m = "DIC";
        }
        return m;
    }

//    private String ObtenerMes() {
//        String m = "";
//        if (cbMes.getSelectedItem().equals("ENERO")) {
//            m = "01";
//        }
//        if (cbMes.getSelectedItem().equals("FEBRERO")) {
//            m = "02";
//        }
//        if (cbMes.getSelectedItem().equals("MARZO")) {
//            m = "03";
//        }
//        if (cbMes.getSelectedItem().equals("ABRIL")) {
//            m = "04";
//        }
//        if (cbMes.getSelectedItem().equals("MAYO")) {
//            m = "05";
//        }
//        if (cbMes.getSelectedItem().equals("JUNIO")) {
//            m = "06";
//        }
//        if (cbMes.getSelectedItem().equals("JULIO")) {
//            m = "07";
//        }
//        if (cbMes.getSelectedItem().equals("AGOSTO")) {
//            m = "08";
//        }
//        if (cbMes.getSelectedItem().equals("SEPTIEMBRE")) {
//            m = "09";
//        }
//        if (cbMes.getSelectedItem().equals("OCTUBRE")) {
//            m = "10";
//        }
//        if (cbMes.getSelectedItem().equals("NOVIEMBRE")) {
//            m = "11";
//        }
//        if (cbMes.getSelectedItem().equals("DICIEMBRE")) {
//            m = "12";
//        }
//        return m;
//    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ClienteBO cBO = ClienteBO.getInstance();
//        int anio = Integer.valueOf(cbAnio.getSelectedItem().toString());
//        int mes = Integer.valueOf(this.ObtenerMes());
//        List<Bbva> listado = cBO.ObtenerBbvaOperaciones(anio, mes);
        List<Bbva> listado = cBO.ObtenerBbvaTodasOperaciones();
        AnioMesBO amBO = AnioMesBO.getInstance();
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
        DefaultTableModel model = (DefaultTableModel) tDetalle.getModel();
        model.setNumRows(0);
        int contador = 0;
        for (Bbva b : listado) {
            AnioMes amDesde = amBO.ObtenerAnioMesSegunNroOrden(b.getNroOrdenDesde());
            AnioMes amHasta = amBO.ObtenerAnioMesSegunNroOrden(b.getNroOrdenHasta());
            model.addRow(new Object[contador]);
            tDetalle.setValueAt(b, contador, 0);
            tDetalle.setValueAt(contador + 1, contador, 1);
            tDetalle.setValueAt(String.format("%03d", b.getNroOperacion()), contador, 2);
            tDetalle.setValueAt(amDesde.getAnio() + "/" + String.format("%02d", amDesde.getMes()), contador, 3);
            tDetalle.setValueAt(amHasta.getAnio() + "/" + String.format("%02d", amHasta.getMes()), contador, 4);
            tDetalle.setValueAt(f.format(b.getFechaOperacion()), contador, 5);
            String tipoCarga = "";
            if (b.getTipoIdentificacion().equals("T")) {
                tipoCarga = "TOTAL";
            } else {
                if (b.getTipoIdentificacion().equals("P")) {
                    tipoCarga = "PARCIAL";
                } else {
                    tipoCarga = "ELIMINACIÓN DE REGISTROS";
                }
            }
            tDetalle.setValueAt(tipoCarga, contador, 6);
            tDetalle.setValueAt(String.format("%03d", b.getVersion()), contador, 7);
            contador = contador + 1;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDetalleMouseClicked

    }//GEN-LAST:event_tDetalleMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
//        if (evt.getClickCount() == 2) {
        int fila = tDetalle.getSelectedRow();
        Bbva b = (Bbva) tDetalle.getValueAt(fila, 0);
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        f.AbrirFormularioBbvaContador(b);
//        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int fila = tDetalle.getSelectedRow();
        Bbva b = (Bbva) tDetalle.getValueAt(fila, 0);
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        f.AbrirFormularioBbvaRetorno(b);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        int fila = tDetalle.getSelectedRow();
        Bbva b = (Bbva) tDetalle.getValueAt(fila, 0);
        ClienteBO cBO = ClienteBO.getInstance();
        Bbva ultimo = cBO.ObtenerUltimoBbvaGenerado();
        if (ultimo != null) {
            if (ultimo.getNroOperacion() != b.getNroOperacion()) {
                JOptionPane.showMessageDialog(this, "SOLAMENTE SE PUEDE SUBIR ARCHIVO PARA LA ÚLTIMA OPERACION GENERADA", "ERROR",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        f.AbrirFormularioBbvaRetorno_SubirArchivo(b);
    }//GEN-LAST:event_jMenuItem4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tDetalle;
    // End of variables declaration//GEN-END:variables
}
