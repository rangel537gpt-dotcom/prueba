/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.caja;

import caja.bo.AlumnoBO;
import caja.bo.DocumentoPagoBO;
import caja.bo.EventoBO;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.ConceptoPagoDetalle;
import caja.mapeo.entidades.Evento;
import caja.mapeo.entidades.EventoConceptoPago;
import caja.mapeo.entidades.Inversion;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author user
 */
public class pAsignarEventoConceptoPago extends javax.swing.JPanel {

    private int tipoCarga = 0;
    private Object frm;
    private Object frm02;
    private Cliente cliente;

    /**
     * Creates new form pAsignarEventoConceptoPago
     */
    public pAsignarEventoConceptoPago() {
        initComponents();
        AlumnoBO aBO = AlumnoBO.getInstance();
        List<Evento> l = aBO.ObtenerTodosEventos_EstadoHabil();
        for (Evento e : l) {
            cbEvento.addItem(e);
        }

        TableColumn columna = tDetalle.getColumn("NRO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna = tDetalle.getColumn("OBJ");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tDetalle.getColumn("MONTO");
        columna.setPreferredWidth(70);
        columna.setMinWidth(70);
        columna.setMaxWidth(70);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbCodigo = new javax.swing.JComboBox<>();
        cbCodigo.getEditor().getEditorComponent().addKeyListener(
            new KeyAdapter(){
                //@Override
                public void keyReleased (KeyEvent e){
                    if (e.getKeyCode() < 37 || e.getKeyCode() > 40 ) {
                        if( e.getKeyCode() !=KeyEvent.VK_ENTER )
                        {
                            BuscarConceptoPagoCodigo();
                        }
                        else
                        {
                            String txt = ((JTextField) cbCodigo.getEditor().getEditorComponent()).getText();
                            if( !txt.isEmpty() ){
                                cbConceptoPago.requestFocus();
                                //ValidarConcepto();
                            }
                        }
                    }
                }} );
                cbEvento = new javax.swing.JComboBox();
                jScrollPane1 = new javax.swing.JScrollPane();
                tDetalle = new javax.swing.JTable();
                txtMontoTotal = new javax.swing.JTextField();
                cbInversion = new javax.swing.JComboBox();
                btnGuardar = new javax.swing.JButton();
                cbConceptoPago = new javax.swing.JComboBox();
                cbConceptoPago.getEditor().getEditorComponent().addKeyListener(
                    new KeyAdapter(){
                        //@Override
                        public void keyReleased (KeyEvent e){
                            if (e.getKeyCode() < 37 || e.getKeyCode() > 40 ) {
                                if( e.getKeyCode() !=KeyEvent.VK_ENTER )
                                {
                                    BuscarConceptoPago();
                                }
                                else
                                {
                                    String txt = ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).getText();
                                    if( !txt.isEmpty() ){
                                        //            ValidarConcepto();
                                    }
                                }
                            }
                        }} );

                        cbCodigo.setEditable(true);
                        cbCodigo.addItemListener(new java.awt.event.ItemListener() {
                            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                cbCodigoItemStateChanged(evt);
                            }
                        });

                        cbEvento.addItemListener(new java.awt.event.ItemListener() {
                            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                cbEventoItemStateChanged(evt);
                            }
                        });
                        cbEvento.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                cbEventoActionPerformed(evt);
                            }
                        });

                        tDetalle.setModel(new javax.swing.table.DefaultTableModel(
                            new Object [][] {

                            },
                            new String [] {
                                "OBJ", "NRO", "EVENTO", "T. PARTICIPANTE", "MODALIDAD", "CONCEPTO", "MONTO"
                            }
                        ) {
                            boolean[] canEdit = new boolean [] {
                                false, false, false, false, false, false, false
                            };

                            public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                            }
                        });
                        tDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
                            public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tDetalleMouseClicked(evt);
                            }
                        });
                        jScrollPane1.setViewportView(tDetalle);

                        cbInversion.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                cbInversionActionPerformed(evt);
                            }
                        });

                        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/Guardar2.png"))); // NOI18N
                        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnGuardarActionPerformed(evt);
                            }
                        });

                        cbConceptoPago.setEditable(true);
                        cbConceptoPago.addItemListener(new java.awt.event.ItemListener() {
                            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                cbConceptoPagoItemStateChanged(evt);
                            }
                        });

                        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                        this.setLayout(layout);
                        layout.setHorizontalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cbEvento, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(cbInversion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cbCodigo, 0, 122, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbConceptoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnGuardar)))
                                .addContainerGap())
                        );
                        layout.setVerticalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbInversion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cbConceptoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(1, 1, 1)))
                                .addGap(5, 5, 5)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
                                .addContainerGap())
                        );
                    }// </editor-fold>//GEN-END:initComponents

    private void cbCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCodigoItemStateChanged
        String codigo = ((JTextField) cbCodigo.getEditor().getEditorComponent()).getText();
        this.ObtenerDatosSegunCodigo(codigo);
    }//GEN-LAST:event_cbCodigoItemStateChanged

    private void cbEventoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbEventoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEventoItemStateChanged

    private void cbEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEventoActionPerformed
        AlumnoBO aBO = AlumnoBO.getInstance();
        List<Inversion> ltp = aBO.ObtenerTodasInversiones_SegunEvento(((Evento) cbEvento.getSelectedItem()).getId());
        //        cbTipoParticipante.removeAllItems();
        //        cbModalidad.removeAllItems();
        cbInversion.removeAllItems();
        for (Inversion i : ltp) {
            //            cbTipoParticipante.addItem(i.getTipoParticipante());
            //            cbModalidad.addItem(i.getModalidadPago());
            cbInversion.addItem(i);
        }
    }//GEN-LAST:event_cbEventoActionPerformed

    private void cbInversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbInversionActionPerformed
        if (cbInversion.getSelectedItem() != null) {
            txtMontoTotal.setText(((Inversion) cbInversion.getSelectedItem()).getMonto().toString());
            EventoBO eBO = EventoBO.getInstance();
            List<EventoConceptoPago> l = eBO.obtenerEventoConceptoPago_SegunIdInversion(((Inversion) cbInversion.getSelectedItem()).getId());
            DefaultTableModel modelDetalle = (DefaultTableModel) tDetalle.getModel();
            modelDetalle.setRowCount(0);
            int contador = 0;
            for (EventoConceptoPago ec : l) {
                modelDetalle.setNumRows(contador);
                modelDetalle.addRow(new Object[contador]);
                tDetalle.setValueAt(ec, contador, 0);
                tDetalle.setValueAt(contador + 1, contador, 1);
                tDetalle.setValueAt(ec.getEvento(), contador, 2);
                tDetalle.setValueAt(ec.getInversion().getTipoParticipante(), contador, 3);
                tDetalle.setValueAt(ec.getInversion().getModalidadPago(), contador, 4);
                tDetalle.setValueAt(ec.getConceptoPagoDetalle(), contador, 5);
                tDetalle.setValueAt(ec.getMonto(), contador, 6);
                contador = contador + 1;
            }
        }
    }//GEN-LAST:event_cbInversionActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (txtMontoTotal.getText().isEmpty()) {
            txtMontoTotal.setText("0.0");
        }
        if (cbEvento.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this,
                    "DEBE ELEGIR UN TIPO DE PARTICIPANTE",
                    "ERROR",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        String nomDetalle = ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).getText();
        DefaultTableModel model = (DefaultTableModel) tDetalle.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 5).toString().equals(nomDetalle)) {
                JOptionPane.showMessageDialog(this,
                        "EL CONCEPTO YA FUE INGRESADO ANTERIORMENTE",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        ConceptoPagoDetalle conceptoDetalle = null;
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<ConceptoPagoDetalle> lconceptoDetalle = dpBO.ObtenerTodosConceptoPago();
        for (ConceptoPagoDetalle cDetalle : lconceptoDetalle) {
            if (cDetalle.getDescripcion().equals(nomDetalle)) {
                conceptoDetalle = cDetalle;
                break;
            }
        }

        if (conceptoDetalle == null) {
            JOptionPane.showMessageDialog(this,
                    "DEBE ELEGIR UN CONCEPTO DE PAGO",
                    "ERROR",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        double total = Double.valueOf(txtMontoTotal.getText());
        if (total == 0) {
            JOptionPane.showMessageDialog(this,
                    "EL MONTO TIENE QUE SER MAYOR QUE CERO",
                    "ERROR",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        EventoConceptoPago ec = new EventoConceptoPago();
        ec.setEvento((Evento) cbEvento.getSelectedItem());
        ec.setInversion((Inversion) cbInversion.getSelectedItem());
        ec.setConceptoPagoDetalle(conceptoDetalle);
        ec.setMonto(total);
        ec.setBorrado("1");
        EventoBO eBO = EventoBO.getInstance();
        eBO.GuardarEventoConcepto(ec);
        DefaultTableModel modelDetalle = (DefaultTableModel) tDetalle.getModel();
        int numFilas = modelDetalle.getRowCount();
        modelDetalle.setNumRows(numFilas);
        modelDetalle.addRow(new Object[numFilas]);
        tDetalle.setValueAt(ec, numFilas, 0);
        tDetalle.setValueAt(numFilas + 1, numFilas, 1);
        tDetalle.setValueAt(ec.getEvento(), numFilas, 2);
        tDetalle.setValueAt(ec.getInversion().getTipoParticipante(), numFilas, 3);
        tDetalle.setValueAt(ec.getInversion().getModalidadPago(), numFilas, 4);
        tDetalle.setValueAt(ec.getConceptoPagoDetalle(), numFilas, 5);
        tDetalle.setValueAt(ec.getMonto(), numFilas, 6);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void ObtenerDatosSegunCodigo(String codigo) {
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<ConceptoPagoDetalle> lConcepto = dpBO.ObtenerTodosConceptoPago();
        for (ConceptoPagoDetalle c : lConcepto) {
            String codigoConcepto = c.getTipoCodigo() + c.getCodigo();
            if (codigo.equals(codigoConcepto)) {
                ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).setText(c.getDescripcion());
                return;
            }
        }
        ((JTextField) cbCodigo.getEditor().getEditorComponent()).setText("");
        ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).setText("");
    }

    private void BuscarConceptoPago() {
        String txt = ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).getText();
        txt = txt.toUpperCase();
        cbConceptoPago.removeAllItems();
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<ConceptoPagoDetalle> lConceptos = dpBO.ObtenerTodosConceptoPago();
        for (ConceptoPagoDetalle concepto : lConceptos) {
            if (concepto.getDescripcion().contains(txt)) {
                cbConceptoPago.addItem(concepto.getDescripcion());
            }
        }
        cbConceptoPago.setSelectedIndex(-1);
        cbConceptoPago.hidePopup();
        cbConceptoPago.showPopup();
        ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).setText(txt);
    }

    private void BuscarConceptoPagoCodigo() {
        String txt = ((JTextField) cbCodigo.getEditor().getEditorComponent()).getText();
        txt = txt.toUpperCase();
        cbCodigo.removeAllItems();
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<ConceptoPagoDetalle> lConceptos = dpBO.ObtenerTodosConceptoPago();
        for (ConceptoPagoDetalle concepto : lConceptos) {
            String codigo = concepto.getTipoCodigo() + concepto.getCodigo();
            if (codigo.contains(txt)) {
                cbCodigo.addItem(codigo);
            }
        }
        cbCodigo.setSelectedIndex(-1);
        cbCodigo.hidePopup();
        cbCodigo.showPopup();
        ((JTextField) cbCodigo.getEditor().getEditorComponent()).setText(txt);
    }

    private void ObtenerDatosConceptoDetalle(String detPago) {
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<ConceptoPagoDetalle> lConceptoPago = dpBO.ObtenerTodosConceptoPago();
        for (ConceptoPagoDetalle cd : lConceptoPago) {
            if (cd.getDescripcion().equals(detPago)) {
                ((JTextField) cbCodigo.getEditor().getEditorComponent()).setText(cd.getTipoCodigo() + cd.getCodigo());
                return;
            }
        }
        ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).setText("");
    }


    private void cbConceptoPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbConceptoPagoItemStateChanged
        String detPago = ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).getText();
        this.ObtenerDatosConceptoDetalle(detPago);
    }//GEN-LAST:event_cbConceptoPagoItemStateChanged

    public void cargarDatos(int tc, Object f, Object f02, Cliente c) {
        this.frm = f;
        this.frm02 = f02;
        this.tipoCarga = tc;
        this.cliente = c;
        if (this.tipoCarga == 2) // AGREGAR AL DOCUMENTO DETALLE
        {
            btnGuardar.setEnabled(false);
            cbCodigo.setEditable(false);
            cbConceptoPago.setEditable(false);
            txtMontoTotal.setEditable(false);
        }
    }


    private void tDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDetalleMouseClicked
        if (evt.getClickCount() == 2) {
            if (this.tipoCarga == 2) // AGREGAR AL DOCUMENTO DETALLE
            {
                EventoConceptoPago ecp = (EventoConceptoPago) tDetalle.getValueAt(tDetalle.getSelectedRow(), 0);
                frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent().getParent();
                f.abrirFormularioAsignarPArticipanteEvento(ecp, this.frm, this.frm02, this.cliente);
            }
        }
    }//GEN-LAST:event_tDetalleMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbCodigo;
    private javax.swing.JComboBox cbConceptoPago;
    private javax.swing.JComboBox cbEvento;
    private javax.swing.JComboBox cbInversion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tDetalle;
    private javax.swing.JTextField txtMontoTotal;
    // End of variables declaration//GEN-END:variables
}
