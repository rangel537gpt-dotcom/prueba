/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.caja;

import caja.bo.DocumentoPagoBO;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.DocumentoPago;
import java.text.SimpleDateFormat;
//import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author user
 */
public class frmSeleccionarComprobante extends javax.swing.JDialog {

    private Object frm;
    private int tipoCarga;

    /**
     * Creates new form frmSeleccionarComprobante
     */
    public frmSeleccionarComprobante(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        TableColumn columna = tComprobantes.getColumn("NRO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna = tComprobantes.getColumn("COMPROBANTEOBJ");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tComprobantes.getColumn("CMP");
        columna.setPreferredWidth(140);
        columna.setMinWidth(140);
        columna.setMaxWidth(140);
        columna = tComprobantes.getColumn("NRO CMP");
        columna.setPreferredWidth(100);
        columna.setMinWidth(100);
        columna.setMaxWidth(100);
        columna = tComprobantes.getColumn("FECHA");
        columna.setPreferredWidth(70);
        columna.setMinWidth(70);
        columna.setMaxWidth(70);
        columna = tComprobantes.getColumn("NRO DOC");
        columna.setPreferredWidth(80);
        columna.setMinWidth(80);
        columna.setMaxWidth(80);
        columna = tComprobantes.getColumn("SALDO");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tComprobantes.getColumn("MONEDA");
        columna.setPreferredWidth(80);
        columna.setMinWidth(80);
        columna.setMaxWidth(80);
        columna = tComprobantes.getColumn("T/C");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tComprobantes.getColumn("MONTO");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbFiltro = new javax.swing.JComboBox();
        txtFiltro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tComprobantes = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SELECCIONAR COMPROBANTE");

        jLabel1.setText("FILTRO:");

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NRO COMPROBANTE", "NRO RUC / DNI", "NOMBRE CLIENTE" }));
        cbFiltro.setEnabled(false);

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        tComprobantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COMPROBANTEOBJ", "NRO", "CMP", "NRO CMP", "FECHA", "NRO DOC", "CLIENTE", "SALDO", "MONEDA", "T/C", "MONTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tComprobantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tComprobantesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tComprobantes);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar_mini1.png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 308, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void CargarDatos(Object f, int tc) {
        this.frm = f;
        this.tipoCarga = tc;
    }

    private void buscar() {
        if (txtFiltro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "DEBE INGRESAR UN DATO PARA LA COMPARACIÃ“N",
                    "ERROR",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        String filtro = "";
        DefaultTableModel modelDetalle = (DefaultTableModel) tComprobantes.getModel();
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
//        List<ComprobantePago> listado = new ArrayList();
        if (cbFiltro.getSelectedItem().toString().equals("NRO COMPROBANTE")) {
            try {
                Integer.valueOf(txtFiltro.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER UN NUMERO DE COMPROBANTE",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            filtro = "dp.nroDocumentoPago = " + Integer.valueOf(txtFiltro.getText());
            //            listado = cpBO.ObtenerComprobante_SegunNroComprobante(Integer.valueOf(txtFiltro.getText()));
        }
        if (cbFiltro.getSelectedItem().toString().equals("NRO RUC / DNI")) {
            if (txtFiltro.getText().length() < 4) {
                JOptionPane.showMessageDialog(this,
                        "EL NRO DE DOCUMENTO DEBE TENER POR LO MENOS 4 CARACTERES",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            filtro = "dp.nroDocumentoPago = " + Integer.valueOf(txtFiltro.getText());
//            listado = cpBO.ObtenerComprobante_SegunNroDocumentoCliente(txtFiltro.getText());
        }
        if (cbFiltro.getSelectedItem().toString().equals("NOMBRE CLIENTE")) {
            if (txtFiltro.getText().length() < 4) {
                JOptionPane.showMessageDialog(this,
                        "EL NOMBRE DEBE TENER POR LO MENOS 4 CARACTERES",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
//            listado = cpBO.ObtenerComprobante_SegunNombreCliente(txtFiltro.getText());

        }
        List<DocumentoPago> l = dpBO.ObtenerComprobantes_SegunFiltro(filtro);
        int contador = 0;
        SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");
        for (DocumentoPago dp : l) {
            modelDetalle.setNumRows(contador);
            modelDetalle.addRow(new Object[contador]);
            tComprobantes.setValueAt(dp, contador, 0);
            tComprobantes.setValueAt(contador + 1, contador, 1);
            tComprobantes.setValueAt(dp.getTipoDocSerie().getTipoDocPago().getNombreDocPago(), contador, 2);
            String nroSerie = "";
            if (dp.getTipoDocSerie().getTipoDocPago().getEsElectronico() != null) {
                if (dp.getTipoDocSerie().getTipoDocPago().getEsElectronico().equals("S")) {
                    nroSerie = dp.getNroSerie();
                } else {
                    nroSerie = dp.getNroSerie();
                }
            } else {
                nroSerie = dp.getNroSerie();
            }
            tComprobantes.setValueAt(nroSerie + " - " + String.format("%06d", dp.getNroDocumentoPago()), contador, 3);
            tComprobantes.setValueAt(formateador.format(dp.getFechaPago()), contador, 4);
            String nroIdentidad = "";
            String nombre = "";
            if (dp.getCliente().getTipoCliente().equals("C")) {
                nroIdentidad = dp.getCliente().getCcodigoCole();
                nombre = dp.getCliente().getPapePat() + " " + dp.getCliente().getPapeMat() + " " + dp.getCliente().getPnombre();
            } else {
                if (dp.getCliente().getTipoCliente().equals("P")) {
                    nroIdentidad = dp.getCliente().getPnroDocumento();
                    nombre = dp.getCliente().getPapePat() + " " + dp.getCliente().getPapeMat() + " " + dp.getCliente().getPnombre();
                } else {
                    if (dp.getCliente().getTipoCliente().equals("S")) {
                        nroIdentidad = dp.getCliente().getSruc();
                        nombre = dp.getCliente().getSnombreSociedad();
                    } else {
                        if (dp.getCliente().getTipoCliente().equals("E")) {
                            nroIdentidad = dp.getCliente().getEruc();
                            nombre = dp.getCliente().getEnombre();
                        } else {
                        }
                    }
                }
            }
            tComprobantes.setValueAt(nroIdentidad, contador, 5);
            tComprobantes.setValueAt(nombre, contador, 6);
//            double saldo = cpBO.ObtenerSaldoComprobante(cp);
//            tComprobantes.setValueAt(saldo, contador, 7);
            if (dp.getMoneda().equals("S")) {
                tComprobantes.setValueAt("SOLES", contador, 8);
            } else {
                tComprobantes.setValueAt("DOLARES", contador, 8);
            }
//            tComprobantes.setValueAt(saldo, contador, 10);
            contador = contador + 1;
        }
    }


    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        final frmPrincipal fPrin = (frmPrincipal) this.getParent();
        Thread queryThread = new Thread() {
            public void run() {
                frmCargando fCargando = new frmCargando();
                fPrin.AgregarFormulario(fCargando);
                int x = (fPrin.getWidth() - fCargando.getWidth()) / 2;
                int y = (fPrin.getHeight() - fCargando.getHeight()) / 2;
                fCargando.setLocation(x, y);
                fCargando.setVisible(true);
                fCargando.toFront();
                buscar();
                fCargando.dispose();
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        int p = txtFiltro.getCaretPosition();
        txtFiltro.setText(txtFiltro.getText().toUpperCase());
        txtFiltro.setCaretPosition(p);
    }//GEN-LAST:event_txtFiltroKeyReleased

    private void tComprobantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tComprobantesMouseClicked
        if (evt.getClickCount() == 2) {
            int fila = tComprobantes.getSelectedRow();
            if (fila >= 0) {
                DocumentoPago dp = (DocumentoPago) tComprobantes.getValueAt(fila, 0);
                if (this.tipoCarga == 1) {  //NOTA
                    if (dp.getTipoDocSerie().getTipoDocPago().getEsElectronico() != null) {
                        if (dp.getTipoDocSerie().getTipoDocPago().getEsElectronico().equals("N")) {
                            JOptionPane.showMessageDialog(this, "POR FAVOR ELEGIR UN COMPROBANTE ELECTRÃ“NICO", "ERROR", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "POR FAVOR ELEGIR UN COMPROBANTE ELECTRÃ“NICO", "ERROR", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    ((frmNotaDetalle) this.frm).AgregarComprobante(dp);
                    this.dispose();
                }
                if (this.tipoCarga == 2) {  //Vale academico cabecera
                    this.dispose();
                    ((frmValeAcademicoDetalle) this.frm).abrirFormularioDocumentoPagoDetalle(dp);

                }
                if (this.tipoCarga == 3) {  //NOTA DE CREDITO ELECTRONICO
                    ((frmValeAcademicoDetalle) this.frm).abrirFormularioDocumentoPagoDetalle_Consumo(dp);
                    this.dispose();
                }
//                if (this.tipoCarga == 4) {  //NOTA DE CREDITO ELECTRONICO
//                    ((frmNotaDetalleElectronico) this.frm).AgregarAplicacionComprobante(cp);
//                    this.dispose();
//                }
//                if (this.tipoCarga == 5) {  //NOTA DE CREDITO ELECTRONICO
//                    ((frmNotaDetalle) this.frm).CambiarAplicacionComprobante(cp);
//                    this.dispose();
//                }
//                if (this.tipoCarga == 6) {  //NOTA DE CREDITO ELECTRONICO
//                    ((frmNotaDetalleElectronico) this.frm).CambiarAplicacionComprobante(cp);
//                    this.dispose();
//                }
            }
        }
    }//GEN-LAST:event_tComprobantesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSeleccionarComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSeleccionarComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSeleccionarComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSeleccionarComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmSeleccionarComprobante dialog = new frmSeleccionarComprobante(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tComprobantes;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
