/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.caja;

//import caja.bo.ClienteBO;
import caja.bo.DocumentoPagoBO;
import caja.bo.PersonaBO;
import caja.bo.SeguridadBO;
//import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.DocumentoPago;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.Cliente;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author juan carlos
 */
public class frmMovimientosPersona extends javax.swing.JInternalFrame {

    private Cliente cliente;

    /**
     * Creates new form frmMovimientosPersona
     */
    public frmMovimientosPersona() {
        initComponents();
        TableColumn columna = tReportePersona.getColumn("NRO");
        columna.setPreferredWidth(10);
        columna = tReportePersona.getColumn("ID");
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setPreferredWidth(0);
        columna = tReportePersona.getColumn("NOMBRE");
        columna.setPreferredWidth(300);
        columna = tReportePersona.getColumn("DNI");
        columna.setPreferredWidth(40);
        txtNombrePersona.setEditable(false);
        txtNumero.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMovimientosPersona = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtNombrePersona = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        cbFiltro = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        pbPersona = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        tReportePersona = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Movimientos de la Persona"));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Movimientos de la Persona");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N

        btnMovimientosPersona.setText("GENERAR REPORTE");
        btnMovimientosPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovimientosPersonaActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre Persona:");

        jLabel3.setText("BÃºsqueda:");

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "POR NOMBRE", "POR DNI" }));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar_mini1.png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tReportePersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NRO", "NOMBRE", "DNI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tReportePersona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tReportePersonaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tReportePersona);

        jLabel4.setText("DNI:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 124, Short.MAX_VALUE))
                            .addComponent(btnMovimientosPersona, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombrePersona)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pbPersona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pbPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombrePersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMovimientosPersona)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarContador() {

        txtNombrePersona.setEditable(false);
        txtNumero.setEditable(false);

        btnMovimientosPersona.setEnabled(false);

        int tipoBusqueda = 0;
        if (cbFiltro.getSelectedItem() == "POR DNI") {
            tipoBusqueda = 1;
        } else if (cbFiltro.getSelectedItem() == "POR NOMBRE") {
            tipoBusqueda = 4;
        }
        PersonaBO doc = PersonaBO.getInstance();
        List<Cliente> l = doc.BuscarPersona(txtBusqueda.getText(), tipoBusqueda);
        DefaultTableModel modelo = (DefaultTableModel) tReportePersona.getModel();
        modelo = (DefaultTableModel) tReportePersona.getModel();
        modelo.setRowCount(l.size());
        int contador = 0;
        for (Cliente docPago : l) {
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tReportePersona.setValueAt(docPago.getIdCliente(), contador, 0);
            tReportePersona.setValueAt(contador + 1, contador, 1);
            tReportePersona.setValueAt(docPago.getPapePat() + " " + docPago.getPapeMat() + " " + docPago.getPnombre(), contador, 2);
            tReportePersona.setValueAt(docPago.getPnroDocumento(), contador, 3);
            contador++;
        }
    }

    public void ImprimirMovimientosPersona() {
        try {
            if (this.cliente != null) {
                String jdbcDriver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
                Class.forName(jdbcDriver);
                SeguridadBO sBO = SeguridadBO.getInstance();
                String url = sBO.getUrlReporte();
                String user = "sa";
                String pass = "4dm1n1str4c10nGOB90570";
                Connection con = DriverManager.getConnection(url, user, pass);
                String fullPath = "";
                Map param;
                fullPath = "reportes/Historial_Persona.jasper";
                param = new HashMap();
                param.put("IDCLIENTE", this.cliente.getIdCliente());
                param.put("DNI", this.cliente.getPnroDocumento());
                param.put("Nombre_persona", txtNombrePersona.getText());
                param.put("REPORT_LOCALE", new Locale("en", "EN"));
                JasperPrint JPrint = JasperFillManager.fillReport(fullPath, param, con);
                JasperViewer.viewReport(JPrint, false);
            }
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }


    private void btnMovimientosPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovimientosPersonaActionPerformed
        frmPrincipal fPrin = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        Thread queryThread = new Thread() {
            public void run() {
                frmCargando fCargando = new frmCargando();
                fPrin.AgregarFormulario(fCargando);
                int x = (fPrin.getWidth() - fCargando.getWidth()) / 2;
                int y = (fPrin.getHeight() - fCargando.getHeight()) / 2;
                fCargando.setLocation(x, y);
                fCargando.setVisible(true);
                fCargando.toFront();
                ImprimirMovimientosPersona();
                fCargando.dispose();
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnMovimientosPersonaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Thread queryThread = new Thread() {
            public void run() {
                pbPersona.setIndeterminate(true);
                pbPersona.setStringPainted(true);
                pbPersona.setString("BUSCANDO PERSONAS, POR FAVOR ESPERE");
                pbPersona.setValue(100);
                pbPersona.repaint();
                buscarContador();
                pbPersona.setString("BUSQUEDA FINALIZADA");
                pbPersona.setStringPainted(false);
                pbPersona.setIndeterminate(false);
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarContador();
        }
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void tReportePersonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tReportePersonaMouseClicked
        if (evt.getClickCount() == 2) {

            int fila = tReportePersona.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tReportePersona.getModel();

            int idCliente = Integer.valueOf(model.getValueAt(fila, 0).toString());
            SeguridadBO sBO = SeguridadBO.getINSTANCE();
            Cliente cli = (Cliente) sBO.CargarObjeto("Cliente", idCliente);
            this.cliente = cli;
            txtNombrePersona.setText(cli.getPapePat() + " " + cli.getPapeMat() + " " + cli.getPnombre());
            txtNumero.setText(cli.getPnroDocumento());
            txtNombrePersona.setEditable(true);
            txtNumero.setEditable(true);
            btnMovimientosPersona.setEnabled(true);
        }
    }//GEN-LAST:event_tReportePersonaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnMovimientosPersona;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pbPersona;
    private javax.swing.JTable tReportePersona;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtNombrePersona;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
