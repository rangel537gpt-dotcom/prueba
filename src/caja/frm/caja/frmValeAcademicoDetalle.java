/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.caja;

import caja.bo.AlumnoBO;
import caja.bo.DocumentoPagoBO;
import caja.bo.EventoBO;
import caja.bo.NotaBO;
import caja.bo.NumeroLetras;
import caja.bo.SeguridadBO;
import caja.bo.TipoNotaBO;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.AsignacionEvento;
import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.ConceptoPagoDetalle;
import caja.mapeo.entidades.DocumentoPago;
import caja.mapeo.entidades.DocumentoPagoDet;
import caja.mapeo.entidades.Evento;
import caja.mapeo.entidades.EventoAsignacionEventoParticipante;
import caja.mapeo.entidades.EventoConceptoPago;
import caja.mapeo.entidades.Inversion;
import caja.mapeo.entidades.Nota;
import caja.mapeo.entidades.NotaDetalle;
import caja.mapeo.entidades.Participante;
import caja.mapeo.entidades.TipoDocPago;
import caja.mapeo.entidades.TipoDocSerie;
import caja.mapeo.entidades.TipoNota;
import caja.mapeo.entidades.ValeAcademico;
import caja.mapeo.entidades.ValeAcademicoConsumo;
import caja.mapeo.entidades.ValeAcademicoConsumoParticipante;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import units.DatePicker;

/**
 *
 * @author user
 */
public class frmValeAcademicoDetalle extends javax.swing.JInternalFrame {

    private ValeAcademico valeAcademico = null;
    private boolean accesoGuardar = false;
    private DocumentoPagoDet documentoPagoDetalle = null;
    private ValeAcademicoConsumo valeAcademicoConsumo = null;
    private int fila = -1;

    /**
     * Creates new form frmNota
     */
    public frmValeAcademicoDetalle() {
        initComponents();
        Date fechaActual = new Date();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        txtFechaInicio.setText(format.format(fechaActual));
        TableColumn columna = tDetalle.getColumn("NRO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna = tDetalle.getColumn("OBJ");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tDetalle.getColumn("ID_INICIAL");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tDetalle.getColumn("EVENTO");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tDetalle.getColumn("PARTICIPANTE");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tDetalle.getColumn("FECHA");
        columna.setPreferredWidth(100);
        columna.setMinWidth(100);
        columna.setMaxWidth(100);
        columna = tDetalle.getColumn("MONTO");
        columna.setPreferredWidth(100);
        columna.setMinWidth(100);
        columna.setMaxWidth(100);
        AlumnoBO aBO = AlumnoBO.getInstance();
        List<Evento> l = aBO.ObtenerTodosEventos_EstadoHabil();
        for (Evento e : l) {
            cbEvento.addItem(e);
        }
        SeguridadBO sBO = SeguridadBO.getInstance();
        if (sBO.getUsuario().getRolUsuario().equals("SA")) {
            accesoGuardar = true;
        } else {
            if (sBO.getUsuario().getRolUsuario().equals("A")) {
                accesoGuardar = true;
            } else {
                if (sBO.getUsuario().getRolUsuario().equals("USUARIO")) {
                    btnAgregarConsumo.setEnabled(false);
                    btnGuardar.setEnabled(false);
                } else {
                    accesoGuardar = false;
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtFechaInicio = new javax.swing.JTextField();
        btnFecha = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtComprobante = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        txtDirección = new javax.swing.JTextField();
        btnSeleccionarComprobante = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNroNota = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtFechaFin = new javax.swing.JTextField();
        btnFecha1 = new javax.swing.JButton();
        txtUsuario = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        pContainer = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnImprimir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        lbTipoMoneda = new javax.swing.JLabel();
        lbMontoTotal = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tDetalle = new javax.swing.JTable();
        btnAgregarConsumo = new javax.swing.JButton();
        pItemDetalle = new javax.swing.JPanel();
        btnGuardarValeAcademicoDescuento = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cbEvento = new javax.swing.JComboBox();
        cbInversion = new javax.swing.JComboBox();
        txtMontoTotal = new javax.swing.JTextField();

        setClosable(true);
        setTitle("VALE ACADÉMICO");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(900, 600));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("FECHA DESDE:");

        txtFechaInicio.setEditable(false);
        txtFechaInicio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaInicio.setForeground(new java.awt.Color(0, 102, 204));

        btnFecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/calendario.png"))); // NOI18N
        btnFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFechaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("COMPROBANTE:");

        txtComprobante.setEditable(false);
        txtComprobante.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtComprobante.setForeground(new java.awt.Color(0, 102, 204));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("CLIENTE:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("DIRECCIÓN:");

        txtCliente.setEditable(false);
        txtCliente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCliente.setForeground(new java.awt.Color(0, 102, 204));

        txtDirección.setEditable(false);
        txtDirección.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDirección.setForeground(new java.awt.Color(0, 102, 204));

        btnSeleccionarComprobante.setText("...");
        btnSeleccionarComprobante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarComprobanteActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("MONTO:");

        txtMonto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMonto.setForeground(new java.awt.Color(0, 102, 204));
        txtMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMontoKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("USUARIO:");

        txtNroNota.setEditable(false);
        txtNroNota.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNroNota.setForeground(new java.awt.Color(0, 102, 204));
        txtNroNota.setText("000000");
        txtNroNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNroNotaKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("NRO:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("FECHA HASTA:");

        txtFechaFin.setEditable(false);
        txtFechaFin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaFin.setForeground(new java.awt.Color(0, 102, 204));

        btnFecha1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/calendario.png"))); // NOI18N
        btnFecha1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecha1ActionPerformed(evt);
            }
        });

        txtUsuario.setEditable(false);
        txtUsuario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtUsuario.setForeground(new java.awt.Color(0, 102, 204));

        pContainer.setLayout(new java.awt.CardLayout());

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/IMPRESORA.png"))); // NOI18N
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/ok_mediano.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lbTipoMoneda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTipoMoneda.setText("SOLES");

        lbMontoTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbMontoTotal.setForeground(new java.awt.Color(0, 102, 204));
        lbMontoTotal.setText("0.00");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("TOTAL:");

        tDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OBJ", "NRO", "EVENTO", "PARTICIPANTE", "FECHA", "CONSUMO", "MONTO", "ID_INICIAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tDetalleMouseClicked(evt);
            }
        });
        tDetalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tDetalleKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tDetalle);

        btnAgregarConsumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/add_mini.png"))); // NOI18N
        btnAgregarConsumo.setText("Agregar Consumo");
        btnAgregarConsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarConsumoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbMontoTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTipoMoneda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                    .addComponent(btnAgregarConsumo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(btnAgregarConsumo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(lbMontoTotal))
                    .addComponent(lbTipoMoneda))
                .addContainerGap())
        );

        pContainer.add(jPanel2, "card2");

        btnGuardarValeAcademicoDescuento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/guardar_mini.png"))); // NOI18N
        btnGuardarValeAcademicoDescuento.setText("Guardar");
        btnGuardarValeAcademicoDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarValeAcademicoDescuentoActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/eliminar_mini.png"))); // NOI18N
        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cbEvento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbEventoItemStateChanged(evt);
            }
        });
        cbEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEventoActionPerformed(evt);
            }
        });

        cbInversion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbInversionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pItemDetalleLayout = new javax.swing.GroupLayout(pItemDetalle);
        pItemDetalle.setLayout(pItemDetalleLayout);
        pItemDetalleLayout.setHorizontalGroup(
            pItemDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pItemDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pItemDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardarValeAcademicoDescuento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                    .addComponent(cbEvento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pItemDetalleLayout.createSequentialGroup()
                        .addComponent(cbInversion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pItemDetalleLayout.setVerticalGroup(
            pItemDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pItemDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pItemDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbInversion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(btnGuardarValeAcademicoDescuento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        pContainer.add(pItemDetalle, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCliente)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(btnFecha1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDirección)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNroNota, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSeleccionarComprobante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
            .addComponent(pContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtNroNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12)
                                .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSeleccionarComprobante)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(txtComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDirección, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnFecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechaActionPerformed
        DatePicker dtp = new DatePicker(this);
        if (!dtp.setPickedDate().isEmpty()) {
            txtFechaInicio.setText(dtp.setPickedDate());
        }
    }//GEN-LAST:event_btnFechaActionPerformed

    public void abrirFormularioDocumentoPagoDetalle(DocumentoPago dp) {
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        f.abrirFormularioSeleccionarComprobanteDetalle(this, 1, dp);
    }

    public void abrirFormularioDocumentoPagoDetalle_Consumo(DocumentoPago dp) {
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        f.abrirFormularioSeleccionarComprobanteDetalle(this, 2, dp);
    }

    public void setearDocumentoPagoDetalle_Cabecera(DocumentoPagoDet dpd) {
        this.valeAcademico.setDocumentoPagoDetalle(dpd);
        this.MostrarPantallaDocumentoPago(dpd);
    }

    public void setearDocumentoPagoDetalle_Detalle(DocumentoPagoDet dpd) {
        SeguridadBO sBO = SeguridadBO.getINSTANCE();
        DocumentoPago documentoPago = (DocumentoPago) sBO.CargarObjeto("DocumentoPago", dpd.getDocumentoPago().getIdDocumentoPago());
        dpd.setDocumentoPago(documentoPago);
        TipoDocSerie dp = (TipoDocSerie) sBO.CargarObjeto("TipoDocSerie", dpd.getDocumentoPago().getTipoDocSerie().getId());
        dpd.getDocumentoPago().setTipoDocSerie(dp);
        TipoDocPago td = (TipoDocPago) sBO.CargarObjeto("TipoDocPago", dp.getTipoDocPago().getIdTipoDocPago());
        dpd.getDocumentoPago().getTipoDocSerie().setTipoDocPago(td);
        this.MostrarPantallaDocumentoPagoDetalle(dpd);
        this.documentoPagoDetalle = dpd;
    }


    private void btnSeleccionarComprobanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarComprobanteActionPerformed
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        f.abrirFormularioSeleccionarComprobante(this, 2);
    }//GEN-LAST:event_btnSeleccionarComprobanteActionPerformed

    private void txtMontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyReleased
        int p = txtMonto.getCaretPosition();
        txtMonto.setText(txtMonto.getText().toUpperCase());
        txtMonto.setCaretPosition(p);
    }//GEN-LAST:event_txtMontoKeyReleased

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            if (txtMonto.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "DEBE INGRESAR UN MONTO", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (this.valeAcademico.getDocumentoPagoDetalle() == null) {
                JOptionPane.showMessageDialog(this,
                        "DEBE ELEGIR UN COMPROBANTE DE PAGO",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            Double monto = Double.valueOf(txtMonto.getText());
            if (monto <= 0) {
                JOptionPane.showMessageDialog(this, "DEBE MONTO DEBE SER MAYOR A CERO", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Double montoLabel = Double.valueOf(lbMontoTotal.getText());
            if (montoLabel > monto) {
                JOptionPane.showMessageDialog(this, "EL CONSUMO EXCEDE EL MONTO DEL VALE", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            SeguridadBO sBO = SeguridadBO.getInstance();
            this.valeAcademico.setFechaInicio(f.parse(txtFechaInicio.getText()));
            this.valeAcademico.setFechaFin(f.parse(txtFechaFin.getText()));
            this.valeAcademico.setMonto(monto);
            DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
            if (this.valeAcademico.getId() == 0) {
                int nro = dpBO.ObtenerUltimoNroValeAcademico();
                this.valeAcademico.setNro(nro);
                this.valeAcademico.setUsuario(sBO.getUsuario());
                boolean guardo = dpBO.guardarObjeto(this.valeAcademico);
                if (!guardo) {
                    JOptionPane.showMessageDialog(this,
                            "NO SE PUDO GUARDAR LOS DATOS",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    JOptionPane.showMessageDialog(this,
                            "SE GUARDÓ LOS DATOS CORRECTAMENTE",
                            "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                boolean guardo = dpBO.ActualizarObjeto(this.valeAcademico);
                if (!guardo) {
                    JOptionPane.showMessageDialog(this,
                            "NO SE PUDO GUARDAR LOS DATOS",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    JOptionPane.showMessageDialog(this,
                            "SE GUARDÓ LOS DATOS CORRECTAMENTE",
                            "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                }
            }

            DefaultTableModel modelDetalle = (DefaultTableModel) tDetalle.getModel();
            int numFilas = modelDetalle.getRowCount();
            for (int i = 0; i < numFilas; i++) {
                ValeAcademicoConsumo ncd = (ValeAcademicoConsumo) modelDetalle.getValueAt(i, 0);
                if (ncd.getId() == 0) {
                    boolean seGuardo = dpBO.guardarObjeto(ncd);
                    if (!seGuardo) {
                        JOptionPane.showMessageDialog(this,
                                "NO SE GUARDO EL DETALLE",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    } else {
                        EventoBO eBO = EventoBO.getInstance();
                        Participante p = new Participante();
                        p.setBorrado("1");
                        if (this.valeAcademico.getDocumentoPagoDetalle().getDocumentoPago().getClienteByIdContadorEmpresa() != null) {
                            p.setCliente(this.valeAcademico.getDocumentoPagoDetalle().getDocumentoPago().getClienteByIdContadorEmpresa());
                        } else {
                            p.setCliente(this.valeAcademico.getDocumentoPagoDetalle().getDocumentoPago().getCliente());
                        }
                        p.setInversion(ncd.getInversion());
                        p.setEvento(ncd.getInversion().getEvento());
                        p.setNota(0);
                        List<Participante> participantesEncontrados = eBO.obtenerParticipante_SegunEventoCliente(ncd.getInversion().getEvento().getId(), p.getCliente().getIdCliente());
                        if (participantesEncontrados.size() > 0) {
                            p = participantesEncontrados.get(0);
                        } else {
                            dpBO.guardarObjeto(p);
                        }
                        ValeAcademicoConsumoParticipante vacp = new ValeAcademicoConsumoParticipante();
                        vacp.setBorrado("1");
                        vacp.setParticipante(p);
                        vacp.setValeAcademicoConsumo(ncd);
                        dpBO.guardarObjeto(vacp);
                        List<AsignacionEvento> l = eBO.obtenerAsignacionEvento_SegunIdEvento(ncd.getInversion().getEvento().getId());
                        for (AsignacionEvento ae : l) {
                            EventoAsignacionEventoParticipante eaep = new EventoAsignacionEventoParticipante();
                            eaep.setBorrado("1");
                            eaep.setNota(0);
                            eaep.setAsignacionEvento(ae);
                            eaep.setEvento(ncd.getInversion().getEvento());
                            eaep.setParticipante(p);
                            dpBO.guardarObjeto(eaep);
                        }
                    }
                } else {
                    dpBO.ActualizarObjeto(ncd);
                    EventoBO eBO = EventoBO.getInstance();
                    List<ValeAcademicoConsumoParticipante> lParticipante = dpBO.obtenerValeAcademicoConsumoDetalleParticipante(ncd.getId());
                    for (ValeAcademicoConsumoParticipante vacp : lParticipante) {
                        vacp.getParticipante().setBorrado("0");
                        dpBO.ActualizarObjeto(vacp.getParticipante());
                        vacp.setBorrado("0");
                        dpBO.ActualizarObjeto(vacp);
                    }
                    List<AsignacionEvento> l = eBO.obtenerAsignacionEvento_SegunIdEvento(ncd.getInversion().getEvento().getId());
                    Participante p = new Participante();
                    p.setBorrado("1");
                    if (this.valeAcademico.getDocumentoPagoDetalle().getDocumentoPago().getClienteByIdContadorEmpresa() != null) {
                        p.setCliente(this.valeAcademico.getDocumentoPagoDetalle().getDocumentoPago().getClienteByIdContadorEmpresa());
                    } else {
                        p.setCliente(this.valeAcademico.getDocumentoPagoDetalle().getDocumentoPago().getCliente());
                    }
                    p.setInversion(ncd.getInversion());
                    p.setEvento(ncd.getInversion().getEvento());
                    p.setNota(0);
                    List<Participante> participantesEncontrados = eBO.obtenerParticipante_SegunEventoCliente(ncd.getInversion().getEvento().getId(), p.getCliente().getIdCliente());
                    if (participantesEncontrados.size() > 0) {
                        p = participantesEncontrados.get(0);
                    } else {
                        dpBO.guardarObjeto(p);
                    }
                    ValeAcademicoConsumoParticipante vacp = new ValeAcademicoConsumoParticipante();
                    vacp.setBorrado("1");
                    vacp.setParticipante(p);
                    vacp.setValeAcademicoConsumo(ncd);
                    dpBO.guardarObjeto(vacp);
                    for (AsignacionEvento ae : l) {
                        EventoAsignacionEventoParticipante eaep = new EventoAsignacionEventoParticipante();
                        eaep.setBorrado("1");
                        eaep.setEvento(ncd.getInversion().getEvento());;
                        eaep.setAsignacionEvento(ae);
                        eaep.setNota(0);
                        dpBO.guardarObjeto(eaep);
                    }
                }
            }
            this.cargarDatos(this.valeAcademico);
        } catch (ParseException ex) {
            Logger.getLogger(frmValeAcademicoDetalle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void borrarParticipantesEvento(int idNota) {
        NotaBO ncBO = NotaBO.getInstance();
        List<Object> l = ncBO.ObtenerIdParticipantes_SegunNotaCredito(idNota);
        for (Object obj : l) {
            int idParticipante = (int) obj;
            ncBO.actualizarBorradoPartipantes(idParticipante, "0");
        }
    }

    private void ObtenerMontoTotal() {
        double montoTotal = 0;
        for (int i = 0; i < tDetalle.getRowCount(); i++) {
            if (tDetalle.getValueAt(i, 6) != null) {
                double monto = Double.valueOf(tDetalle.getValueAt(i, 6).toString());
                montoTotal = montoTotal + monto;
            }
        }
        montoTotal = Math.round(montoTotal * Math.pow(10, 2)) / Math.pow(10, 2);
        lbMontoTotal.setText(String.valueOf(montoTotal));
    }


    private void tDetalleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tDetalleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            int fila = tDetalle.getSelectedRow();
            if (fila >= 0) {
                int opcion = JOptionPane.showConfirmDialog(null, "¿ DESEA ELIMINAR EL ÍTEM ?");
                if (opcion == JOptionPane.YES_OPTION) {
                    DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
                    ValeAcademicoConsumo ncd = (ValeAcademicoConsumo) tDetalle.getValueAt(fila, 0);
                    if (ncd.getId() > 0) {
                        ncd.setBorrado("0");
                        dpBO.ActualizarObjeto(ncd);
                        List<ValeAcademicoConsumoParticipante> lParticipante = dpBO.obtenerValeAcademicoConsumoDetalleParticipante(ncd.getId());
                        for (ValeAcademicoConsumoParticipante vacp : lParticipante) {
                            vacp.getParticipante().setBorrado("0");
                            dpBO.ActualizarObjeto(vacp.getParticipante());
                            vacp.setBorrado("0");
                            dpBO.ActualizarObjeto(vacp);
                        }
                    }
                    DefaultTableModel model = (DefaultTableModel) tDetalle.getModel();
                    model.removeRow(fila);
                    this.ObtenerMontoTotal();
                }
            }
        }
    }//GEN-LAST:event_tDetalleKeyPressed

    public void ModificarDetalle(NotaDetalle ncd) {
        int fila = tDetalle.getSelectedRow();
        if (fila >= 0) {
            double total = ncd.getValorVenta() + ncd.getIgv();
            total = Math.round(total * Math.pow(10, 2)) / Math.pow(10, 2);
            tDetalle.setValueAt(ncd.getCantidad(), fila, 5);
            tDetalle.setValueAt(ncd.getValorVenta(), fila, 6);
            tDetalle.setValueAt(ncd.getIgv(), fila, 7);
            tDetalle.setValueAt(total, fila, 8);
            this.ObtenerMontoTotal();
        }
    }

    private void tDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDetalleMouseClicked
        if (evt.getClickCount() == 2) {
            int fila = tDetalle.getSelectedRow();
            if (fila >= 0) {
                this.fila = fila;
                CardLayout cardLayout = (CardLayout) pContainer.getLayout();
                cardLayout.show(pContainer, "card3");
                ValeAcademicoConsumo vac = (ValeAcademicoConsumo) tDetalle.getValueAt(fila, 0);
                if (vac.getInversion() != null) {
                    for (int i = 0; i < cbEvento.getItemCount(); i++) {
                        Evento e = (Evento) cbEvento.getItemAt(i);
                        if (e.getId() == vac.getInversion().getEvento().getId()) {
                            cbEvento.setSelectedItem(e);
                            for (int j = 0; j < cbInversion.getItemCount(); j++) {
                                Inversion inversion = (Inversion) cbInversion.getItemAt(j);
                                if (inversion.getId() == vac.getInversion().getId()) {
                                    cbInversion.setSelectedItem(inversion);
                                }
                            }
                        }
                    }
                }
                txtMontoTotal.setText(vac.getMonto().toString());
                this.valeAcademicoConsumo = vac;
            }
        }
    }//GEN-LAST:event_tDetalleMouseClicked

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        final frmPrincipal fPrin = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        Thread queryThread = new Thread() {
            public void run() {
                frmCargando fCargando = new frmCargando();
                fPrin.AgregarFormulario(fCargando);
                int x = (fPrin.getWidth() - fCargando.getWidth()) / 2;
                int y = (fPrin.getHeight() - fCargando.getHeight()) / 2;
                fCargando.setLocation(x, y);
                fCargando.setVisible(true);
                fCargando.toFront();
//                ImprimirNotaElectronico();
                fCargando.dispose();
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnImprimirActionPerformed


    private void txtNroNotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroNotaKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNroNotaKeyTyped

    private void btnFecha1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecha1ActionPerformed
        DatePicker dtp = new DatePicker(this);
        if (!dtp.setPickedDate().isEmpty()) {
            txtFechaFin.setText(dtp.setPickedDate());
        }
    }//GEN-LAST:event_btnFecha1ActionPerformed

    private void btnAgregarConsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarConsumoActionPerformed
//                pContainer.
        CardLayout cardLayout = (CardLayout) pContainer.getLayout();
        cardLayout.show(pContainer, "card3");
        this.documentoPagoDetalle = null;
//        txtComprobanteConsumo.setText("");
        txtMontoTotal.setText("0.0");
        this.fila = -1;
    }//GEN-LAST:event_btnAgregarConsumoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        CardLayout cardLayout = (CardLayout) pContainer.getLayout();
        cardLayout.show(pContainer, "card2");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void agregarDetalle(ValeAcademicoConsumo v) {
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        DefaultTableModel modelDetalle = (DefaultTableModel) tDetalle.getModel();
        int numFilas = modelDetalle.getRowCount();
        modelDetalle.setNumRows(numFilas);
        modelDetalle.addRow(new Object[numFilas]);
        tDetalle.setValueAt(v, numFilas, 0);
        tDetalle.setValueAt(numFilas + 1, numFilas, 1);
        tDetalle.setValueAt(f.format(v.getFecha()), numFilas, 4);
        tDetalle.setValueAt(v.getInversion().getEvento() + " - " + v.getInversion(), numFilas, 5);
        Double montoTotal = v.getMonto();
        montoTotal = Math.round(montoTotal * Math.pow(10, 2)) / Math.pow(10, 2);
        tDetalle.setValueAt(montoTotal, numFilas, 6);
        tDetalle.setValueAt(v.getInversion().getId(), numFilas, 7);
    }

    private void modificarDetalle(ValeAcademicoConsumo v) {
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        tDetalle.setValueAt(v, this.fila, 0);
        tDetalle.setValueAt(f.format(v.getFecha()), this.fila, 4);
        tDetalle.setValueAt(v.getInversion().getEvento() + " - " + v.getInversion(), this.fila, 5);
        Double montoTotal = v.getMonto();
        montoTotal = Math.round(montoTotal * Math.pow(10, 2)) / Math.pow(10, 2);
        tDetalle.setValueAt(montoTotal, this.fila, 6);
    }


    private void btnGuardarValeAcademicoDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarValeAcademicoDescuentoActionPerformed
        if (cbInversion.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "POR FAVOR ELEGIR UNA INVERSIÓN", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtMontoTotal.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "POR PONER UN MONTO", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Double monto = Double.valueOf(txtMontoTotal.getText());
        if (monto <= 0) {
            JOptionPane.showMessageDialog(this, "EL MONTO DEBE SER MAYOR A CERO", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        SeguridadBO sBO = SeguridadBO.getINSTANCE();
        Date fechaServer = sBO.ObtenerFechaServidor();
        this.valeAcademico.getFechaInicio();
        this.valeAcademico.getFechaFin();
        if (fechaServer.compareTo(this.valeAcademico.getFechaInicio()) < 0) {
            JOptionPane.showMessageDialog(this, "EL VALE ESTA FUERA DEL RANGO DE VIGENCIA DEL VALE", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (fechaServer.compareTo(this.valeAcademico.getFechaFin()) > 0) {
            JOptionPane.showMessageDialog(this, "EL VALE ESTA FUERA DEL RANGO DE VIGENCIA DEL VALE", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        CardLayout cardLayout = (CardLayout) pContainer.getLayout();
        cardLayout.show(pContainer, "card2");
        Evento evento = (Evento) cbEvento.getSelectedItem();
        Inversion inversion = (Inversion) cbInversion.getSelectedItem();
        inversion.setEvento(evento);
        if (this.fila == -1) {
            ValeAcademicoConsumo v = new ValeAcademicoConsumo();
            v.setBorrado("1");
            v.setMonto(monto);
            v.setUsuario(sBO.getUsuario());
            v.setValeAcademico(this.valeAcademico);
            v.setInversion(inversion);
            v.setFecha(fechaServer);
            this.agregarDetalle(v);
        } else {
            this.valeAcademicoConsumo.setFecha(fechaServer);
            this.valeAcademicoConsumo.setMonto(monto);
            this.valeAcademicoConsumo.setInversion(inversion);
            this.modificarDetalle(this.valeAcademicoConsumo);
        }
        this.ObtenerMontoTotal();
    }//GEN-LAST:event_btnGuardarValeAcademicoDescuentoActionPerformed

    private void cbEventoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbEventoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEventoItemStateChanged

    private void cbEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEventoActionPerformed
        AlumnoBO aBO = AlumnoBO.getInstance();
        List<Inversion> ltp = aBO.ObtenerTodasInversiones_SegunEvento(((Evento) cbEvento.getSelectedItem()).getId());
        //        cbTipoParticipante.removeAllItems();
        //        cbModalidad.removeAllItems();
        cbInversion.removeAllItems();
        for (Inversion i : ltp) {
            //            cbTipoParticipante.addItem(i.getTipoParticipante());
            //            cbModalidad.addItem(i.getModalidadPago());
            cbInversion.addItem(i);
        }
    }//GEN-LAST:event_cbEventoActionPerformed

    private void cbInversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbInversionActionPerformed

    }//GEN-LAST:event_cbInversionActionPerformed

    private void MostrarPantallaDocumentoPago(DocumentoPagoDet dpd) {
        DocumentoPago dp = dpd.getDocumentoPago();
        String nroSerie = dp.getNroSerie();
//        this.notaCredito.setDocumentoPago(dp);
        Double total = dpd.getValorVenta() + dpd.getIgv();
        String comprobante = dp.getTipoDocSerie().getTipoDocPago().getAbreviatura() + " " + nroSerie + " - " + String.format("%06d", dp.getNroDocumentoPago()) + "  -  " + dpd.getConceptoPagoDetalle().getDescripcion() + " : " + total;
        txtComprobante.setText(comprobante);
        String nombreCliente = "";
        String direccionCliente = "";
        if (dp.getCliente().getTipoCliente().equals("C")) {
            nombreCliente = dp.getCliente().getPapePat() + " " + dp.getCliente().getPapeMat() + " " + dp.getCliente().getPnombre();
            direccionCliente = dp.getCliente().getPdireccionDomicilio();
        } else {
            if (dp.getCliente().getTipoCliente().equals("P")) {
                nombreCliente = dp.getCliente().getPapePat() + " " + dp.getCliente().getPapeMat() + " " + dp.getCliente().getPnombre();
                direccionCliente = dp.getCliente().getPdireccionDomicilio();
            } else {
                if (dp.getCliente().getTipoCliente().equals("S")) {
                    nombreCliente = dp.getCliente().getSnombreSociedad();
                    direccionCliente = dp.getCliente().getSdireccion();
                } else {
                    if (dp.getCliente().getTipoCliente().equals("E")) {
                        nombreCliente = dp.getCliente().getEnombre();
                        direccionCliente = dp.getCliente().getEdireccion();
                    }
                }
            }
        }
        txtCliente.setText(nombreCliente);
        String nombreContador = "";
        if (dp.getClienteByIdContadorEmpresa() != null) {
            SeguridadBO sBO = SeguridadBO.getINSTANCE();
            Cliente cl = (Cliente) sBO.CargarObjeto("Cliente", dp.getClienteByIdContadorEmpresa().getIdCliente());
            nombreContador = cl.getCcodigoCole() + " " + cl.getPapePat() + " " + cl.getPapeMat() + " " + cl.getPnombre();
            txtCliente.setText(nombreContador + " - " + nombreCliente);
        }
        txtDirección.setText(direccionCliente);
    }

    private void MostrarPantallaDocumentoPagoDetalle(DocumentoPagoDet dpd) {
        DocumentoPago dp = dpd.getDocumentoPago();
        String nroSerie = dp.getNroSerie();
//        this.notaCredito.setDocumentoPago(dp);
        Double total = dpd.getValorVenta() + dpd.getIgv();
        String comprobante = dp.getTipoDocSerie().getTipoDocPago().getAbreviatura() + " " + nroSerie + " - " + String.format("%06d", dp.getNroDocumentoPago()) + "  -  " + dpd.getConceptoPagoDetalle().getDescripcion() + " : " + total;
//        txtComprobanteConsumo.setText(comprobante);
    }

    public void AgregarComprobante(DocumentoPagoDet dpd) {
        String nroSerie = "";
        DocumentoPago dp = dpd.getDocumentoPago();
        this.valeAcademico.setDocumentoPagoDetalle(dpd);
        String comprobante = dp.getTipoDocSerie().getTipoDocPago().getAbreviatura() + " " + nroSerie + " - " + String.format("%06d", dp.getNroDocumentoPago());
        txtComprobante.setText(comprobante);
        String nombreCliente = "";
        String direccionCliente = "";
        if (dp.getCliente().getTipoCliente().equals("C")) {
            nombreCliente = dp.getCliente().getPapePat() + " " + dp.getCliente().getPapeMat() + " " + dp.getCliente().getPnombre();
            direccionCliente = dp.getCliente().getPdireccionDomicilio();
        } else {
            if (dp.getCliente().getTipoCliente().equals("P")) {
                nombreCliente = dp.getCliente().getPapePat() + " " + dp.getCliente().getPapeMat() + " " + dp.getCliente().getPnombre();
                direccionCliente = dp.getCliente().getPdireccionDomicilio();
            } else {
                if (dp.getCliente().getTipoCliente().equals("S")) {
                    nombreCliente = dp.getCliente().getSnombreSociedad();
                    direccionCliente = dp.getCliente().getSdireccion();
                } else {
                    if (dp.getCliente().getTipoCliente().equals("E")) {
                        nombreCliente = dp.getCliente().getEnombre();
                        direccionCliente = dp.getCliente().getEdireccion();
                    }
                }
            }
        }
        txtCliente.setText(nombreCliente);
        txtDirección.setText(direccionCliente);
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        this.ObtenerMontoTotal();
    }

    public void cargarDatos(ValeAcademico va) {
        this.valeAcademico = va;
        txtNroNota.setText(String.format("%07d", va.getNro()));
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        txtFechaInicio.setText(format.format(va.getFechaInicio()));
        txtFechaFin.setText(format.format(va.getFechaFin()));
        if (this.valeAcademico.getDocumentoPagoDetalle() != null) {
            this.MostrarPantallaDocumentoPago(this.valeAcademico.getDocumentoPagoDetalle());
        }
        if (this.valeAcademico.getUsuario() != null) {
            txtUsuario.setText(this.valeAcademico.getUsuario().getLogin());
        }
        txtMonto.setText(va.getMonto().toString());
//        btnSeleccionarComprobante.setEnabled(false);
        btnImprimir.setEnabled(true);
        DocumentoPagoBO ncBO = DocumentoPagoBO.getInstance();
        List<ValeAcademicoConsumo> ldetalle = ncBO.obtenerValeAcademicoConsumoDetalle(va.getId());
        DefaultTableModel model = (DefaultTableModel) tDetalle.getModel();
        model.setNumRows(0);
        for (ValeAcademicoConsumo ncd : ldetalle) {
            this.agregarDetalle(ncd);
        }
        this.ObtenerMontoTotal();
        if (va.getId() == 0) {
            btnSeleccionarComprobante.setEnabled(true);
        } else {
            btnSeleccionarComprobante.setEnabled(false);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarConsumo;
    private javax.swing.JButton btnFecha;
    private javax.swing.JButton btnFecha1;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarValeAcademicoDescuento;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnSeleccionarComprobante;
    private javax.swing.JComboBox cbEvento;
    private javax.swing.JComboBox cbInversion;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbMontoTotal;
    private javax.swing.JLabel lbTipoMoneda;
    private javax.swing.JPanel pContainer;
    private javax.swing.JPanel pItemDetalle;
    private javax.swing.JTable tDetalle;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtComprobante;
    private javax.swing.JTextField txtDirección;
    private javax.swing.JTextField txtFechaFin;
    private javax.swing.JTextField txtFechaInicio;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtMontoTotal;
    private javax.swing.JTextField txtNroNota;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
