/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.administracion;

import caja.bo.EmpresaBO;
import caja.bo.SeguridadBO;
import caja.bo.soloMayusculas;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.ClienteCertificado;
import caja.mapeo.entidades.ClienteEstudioContable;
import caja.mapeo.entidades.ClienteEstudioContableEspecialidad;
import caja.mapeo.entidades.CurriculumTablaEspecialidades;
import caja.mapeo.entidades.UbigeoDepartamento;
import caja.mapeo.entidades.UbigeoDistrito;
import caja.mapeo.entidades.UbigeoProvincia;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashSet;
//import java.text.ParseException;
//import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Locale;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import units.DatePicker;

/**
 *
 * @author juan carlos
 */
public class frmEmpresa extends javax.swing.JInternalFrame {

    private Cliente cliActual;
    private boolean accesoGuardar = true;
    private List<UbigeoDepartamento> lUbigeoDepartamento;
    private List<UbigeoProvincia> lUbigeoProvincias;
    private List<UbigeoDistrito> lUbigeoDistrito;

    /**
     * Creates new form frmEmpresa
     */
    public frmEmpresa() {
        initComponents();

        TableColumn columna = tEmpresa.getColumn("NRO");
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna.setPreferredWidth(40);
        columna = tEmpresa.getColumn("ID");
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setPreferredWidth(0);
        columna = tEmpresa.getColumn("RUC");
        columna.setPreferredWidth(20);
        columna = tEmpresa.getColumn("NOMBRE");
        columna.setPreferredWidth(100);
        columna = tEmpresa.getColumn("CONDICION");
        columna.setPreferredWidth(30);
        columna = tEmpresa.getColumn("EMAIL");
        columna.setPreferredWidth(200);

        columna = tEspecialidad.getColumn("OBJ");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna = tEspecialidad.getColumn("NRO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);

        txtRUC.setEditable(false);
        txtNroCuenta.setEditable(false);
        txtNombre.setEditable(false);
        txtNombre.setDocument(new soloMayusculas());
        txtCiudad.setEditable(false);
        txtCiudad.setDocument(new soloMayusculas());
        txtCondicion.setEditable(false);
        txtCondicion.setDocument(new soloMayusculas());
        txtEmail.setEditable(false);
        txtTelefonoFijo.setEditable(false);
        txtDireccion.setEditable(false);
        txtDireccion.setDocument(new soloMayusculas());
        txtTelefonoCelular.setEditable(false);
        cbTipoPago.setEnabled(false);
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        chkEsEstudioContable.setEnabled(false);
        SeguridadBO sBO = SeguridadBO.getInstance();
        if (sBO.getUsuario().getRolUsuario().equals("SA")) {
            accesoGuardar = true;
        } else {
            if (sBO.getUsuario().getRolUsuario().equals("A")) {
                accesoGuardar = true;
            } else {
                accesoGuardar = false;
            }
        }

        EmpresaBO eBO = EmpresaBO.getInstance();
        lUbigeoDepartamento = (List<UbigeoDepartamento>) eBO.ObtenerEmpresaUbigeoDepartamento();
        for (UbigeoDepartamento udep : lUbigeoDepartamento) {
            cbDomicilioDepartamento.addItem(udep);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        cbFiltro = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        btnIngresarEmpresa = new javax.swing.JButton();
        pbEmpresa = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        tEmpresa = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtRUC = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtCondicion = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefonoFijo = new javax.swing.JTextField();
        txtCiudad = new javax.swing.JTextField();
        txtNroCuenta = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cbTipoPago = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        txtTelefonoCelular = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbDomicilioDepartamento = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        cbDomicilioProvincia = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        cbDomicilioDistrito = new javax.swing.JComboBox();
        chkEsEstudioContable = new javax.swing.JCheckBox();
        pEstudioContable = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtTitular = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtPaginaWeb = new javax.swing.JTextField();
        txtNroLicencia = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtFechaInicio = new javax.swing.JFormattedTextField();
        btnFecha = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        txtFechaEmpadronamiento = new javax.swing.JFormattedTextField();
        btnFecha1 = new javax.swing.JButton();
        txtNroTrabajadores = new javax.swing.JTextField();
        pEspecialidades = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tEspecialidad = new javax.swing.JTable();
        btnAgregarPariente2 = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Formulario de Empresa");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N

        jLabel1.setText("Búsqueda:");

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "POR RUC", "POR NOMBRE", "POR NROCTA", "POR CONDICION" }));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar_mini1.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnIngresarEmpresa.setText("Ingresar Empresa");
        btnIngresarEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarEmpresaActionPerformed(evt);
            }
        });

        tEmpresa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NRO", "RUC", "NOMBRE", "CONDICION", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tEmpresa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tEmpresaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tEmpresa);

        jLabel2.setText("RUC:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Condición:");

        jLabel5.setText("Dirección:");

        jLabel6.setText("Teléfono Fijo:");

        jLabel7.setText("Ciudad");

        jLabel8.setText("Número Cuenta:");

        jLabel9.setText("Email:");

        txtRUC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRUCKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRUCKeyTyped(evt);
            }
        });

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccionKeyPressed(evt);
            }
        });

        jLabel11.setText("Tipo Pago:");

        cbTipoPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cuenta", "Caja" }));

        jLabel12.setText("Teléfono Celular:");

        jLabel13.setText("Departamento:");

        cbDomicilioDepartamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDomicilioDepartamentoItemStateChanged(evt);
            }
        });
        cbDomicilioDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDomicilioDepartamentoActionPerformed(evt);
            }
        });

        jLabel14.setText("Provincia:");

        cbDomicilioProvincia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDomicilioProvinciaItemStateChanged(evt);
            }
        });

        jLabel15.setText("Distrito:");

        chkEsEstudioContable.setText("Es Estudio Contable");
        chkEsEstudioContable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEsEstudioContableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTelefonoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRUC, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefonoFijo, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbDomicilioDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbDomicilioProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbDomicilioDistrito, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(chkEsEstudioContable, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRUC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtNroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(cbTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtTelefonoFijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtTelefonoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbDomicilioDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(cbDomicilioProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(cbDomicilioDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkEsEstudioContable)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("DATOS EMPRESA", jPanel2);

        jLabel10.setText("TITULAR:");

        jLabel16.setText("PAGINA WEB:");

        jLabel17.setText("NRO. LICENCIA:");

        txtTitular.setEditable(false);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtNroLicencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNroLicenciaKeyPressed(evt);
            }
        });

        jLabel19.setText("# TRABAJADORES:");

        jLabel20.setText("FECHA INICIO:");

        txtFechaInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        btnFecha.setText("...");
        btnFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFechaActionPerformed(evt);
            }
        });

        jLabel21.setText("F. EMPADRONA.");

        txtFechaEmpadronamiento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        btnFecha1.setText("...");
        btnFecha1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecha1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pEstudioContableLayout = new javax.swing.GroupLayout(pEstudioContable);
        pEstudioContable.setLayout(pEstudioContableLayout);
        pEstudioContableLayout.setHorizontalGroup(
            pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEstudioContableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pEstudioContableLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTitular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(pEstudioContableLayout.createSequentialGroup()
                        .addGroup(pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pEstudioContableLayout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFecha))
                            .addGroup(pEstudioContableLayout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaEmpadronamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFecha1))
                            .addGroup(pEstudioContableLayout.createSequentialGroup()
                                .addGroup(pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pEstudioContableLayout.createSequentialGroup()
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPaginaWeb))
                                    .addGroup(pEstudioContableLayout.createSequentialGroup()
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNroLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNroTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 155, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pEstudioContableLayout.setVerticalGroup(
            pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEstudioContableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtTitular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtPaginaWeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNroLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19)
                    .addComponent(txtNroTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(btnFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pEstudioContableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFechaEmpadronamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel21))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("DATOS ESTUDIO CONTABLE", pEstudioContable);

        tEspecialidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OBJ", "NRO", "ESPECIALIDAD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tEspecialidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tEspecialidadMouseClicked(evt);
            }
        });
        tEspecialidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tEspecialidadKeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(tEspecialidad);

        btnAgregarPariente2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/add_mini.png"))); // NOI18N
        btnAgregarPariente2.setText("AGREGAR");
        btnAgregarPariente2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPariente2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pEspecialidadesLayout = new javax.swing.GroupLayout(pEspecialidades);
        pEspecialidades.setLayout(pEspecialidadesLayout);
        pEspecialidadesLayout.setHorizontalGroup(
            pEspecialidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEspecialidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pEspecialidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregarPariente2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pEspecialidadesLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pEspecialidadesLayout.setVerticalGroup(
            pEspecialidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEspecialidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregarPariente2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("ESPECIALIDADES", pEspecialidades);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIngresarEmpresa))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(10, 10, 10)
                .addComponent(pbEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(pbEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar)
                            .addComponent(btnIngresarEmpresa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarEmpresa() {

        txtRUC.setEditable(false);
        txtNroCuenta.setEditable(false);
        txtNombre.setEditable(false);
        txtCiudad.setEditable(false);
        txtCondicion.setEditable(false);
        txtEmail.setEditable(false);
        txtTelefonoFijo.setEditable(false);
        txtDireccion.setEditable(false);
        txtTelefonoCelular.setEditable(false);
        cbTipoPago.setEnabled(false);
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        chkEsEstudioContable.setEnabled(false);

        int tipoBusqueda = 0;
        if (cbFiltro.getSelectedItem() == "POR RUC") {
            tipoBusqueda = 1;
        } else if (cbFiltro.getSelectedItem() == "POR NOMBRE") {
            tipoBusqueda = 2;
        } else if (cbFiltro.getSelectedItem() == "POR NROCTA") {
            tipoBusqueda = 3;
        } else if (cbFiltro.getSelectedItem() == "POR CONDICION") {
            tipoBusqueda = 4;
        }

        EmpresaBO e = EmpresaBO.getInstance();
        List<Cliente> l = e.BuscarEmpresa(txtBusqueda.getText(), tipoBusqueda);
        DefaultTableModel modelo = (DefaultTableModel) tEmpresa.getModel();
        modelo = (DefaultTableModel) tEmpresa.getModel();
        modelo.setRowCount(l.size());
        int contador = 0;
        for (Cliente cli : l) {
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tEmpresa.setValueAt(cli.getIdCliente(), contador, 0);
            tEmpresa.setValueAt(contador + 1, contador, 1);
            tEmpresa.setValueAt(cli.getEruc(), contador, 2);
            tEmpresa.setValueAt(cli.getEnombre(), contador, 3);
            tEmpresa.setValueAt(cli.getEcondicion(), contador, 4);
            tEmpresa.setValueAt(cli.getEemail(), contador, 5);
            contador++;

        }
    }


    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Thread queryThread = new Thread() {
            public void run() {
                pbEmpresa.setIndeterminate(true);
                pbEmpresa.setStringPainted(true);
                pbEmpresa.setString("BUSCANDO POR FAVOR ESPERE");
                pbEmpresa.setValue(1000);
                pbEmpresa.repaint();
                buscarEmpresa();
                pbEmpresa.setString("BUSQUEDA TERMINADA");
                pbEmpresa.setStringPainted(false);
                pbEmpresa.setIndeterminate(false);
            }
        };
        queryThread.start();

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarEmpresa();
        }
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void btnIngresarEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarEmpresaActionPerformed
        this.cliActual = new Cliente();
        txtRUC.setEditable(true);
        cbTipoPago.setEnabled(true);
        txtNroCuenta.setEditable(true);
        txtNombre.setEditable(true);
        txtCiudad.setEditable(true);
        txtCondicion.setEditable(true);
        txtEmail.setEditable(true);
        txtTelefonoFijo.setEditable(true);
        txtDireccion.setEditable(true);
        txtTelefonoCelular.setEditable(true);
        txtRUC.setFocusable(true);
        txtRUC.requestFocus();

        txtRUC.setText("");
        txtNroCuenta.setText("");
        txtNombre.setText("");
        txtCiudad.setText("");
        txtCondicion.setText("");
        txtEmail.setText("");
        txtTelefonoFijo.setText("");
        txtDireccion.setText("");
        txtTelefonoCelular.setText("");
        for (int i = 0; i < cbDomicilioDepartamento.getItemCount(); i++) {
            UbigeoDepartamento u = (UbigeoDepartamento) cbDomicilioDepartamento.getItemAt(i);
            if (u.getCodigoDepartamento().equals("00")) {
                cbDomicilioDepartamento.setSelectedItem(u);
            }
        }
        for (int i = 0; i < cbDomicilioProvincia.getItemCount(); i++) {
            UbigeoProvincia u = (UbigeoProvincia) cbDomicilioProvincia.getItemAt(i);
            if (u.getCodigoProvincia().equals("00")) {
                cbDomicilioProvincia.setSelectedItem(u);
            }
        }
        for (int i = 0; i < cbDomicilioDistrito.getItemCount(); i++) {
            UbigeoDistrito u = (UbigeoDistrito) cbDomicilioDistrito.getItemAt(i);
            if (u.getCodigoDistrito().equals("00")) {
                cbDomicilioDistrito.setSelectedItem(u);
            }
        }
        if (this.accesoGuardar) {
//            btnActualizar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnGuardar.setEnabled(true);
        } else {
//            btnActualizar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnGuardar.setEnabled(false);
        }
    }//GEN-LAST:event_btnIngresarEmpresaActionPerformed

    private void cargarFormularioEstudioContable(Cliente cliente) {
        ArrayList<ClienteEstudioContable> lista = new ArrayList<>(cliente.getClienteEstudioContables());
        ClienteEstudioContable cec = lista.get(0);
//        txtEmail.setText(cec.getEmail());
        txtPaginaWeb.setText(cec.getPaginaWeb());
        txtNroLicencia.setText(String.valueOf(cec.getNroLicenciaFuncionamiento()));
        txtNroTrabajadores.setText(String.valueOf(cec.getNroTrabajadores()));
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        txtFechaInicio.setText(f.format(cec.getFechaInicioActividades()));
        txtFechaEmpadronamiento.setText(f.format(cec.getFechaEmpadronamiento()));
        txtTitular.setText("");
        if (!Objects.isNull(cec.getClienteTitular())) {
            txtTitular.setText(cec.getClienteTitular().getPapePat() + " " + cec.getClienteTitular().getPapeMat() + " " + cec.getClienteTitular().getPnombre());
        }
        EmpresaBO eBO = EmpresaBO.getInstance();
        List<ClienteEstudioContableEspecialidad> ldh = eBO.obtenerEspecialidades(cec.getId());
        DefaultTableModel modelo = (DefaultTableModel) tEspecialidad.getModel();
        modelo.setRowCount(0);
        int contador = 0;
        for (ClienteEstudioContableEspecialidad cc : ldh) {
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tEspecialidad.setValueAt(cc, contador, 0);
            tEspecialidad.setValueAt(contador + 1, contador, 1);
            tEspecialidad.setValueAt(cc.getCurriculumTablaEspecialidades(), contador, 2);
            contador++;
        }
    }

    private void obtenerFormularioEstudioContable(ClienteEstudioContable cec) {
        try {
            cec.setEmail(txtEmail.getText());
            cec.setPaginaWeb(txtPaginaWeb.getText());
            cec.setNroLicenciaFuncionamiento(txtNroLicencia.getText());
            cec.setNroTrabajadores(Integer.valueOf(txtNroTrabajadores.getText()));
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            cec.setFechaInicioActividades(f.parse(txtFechaInicio.getText()));
            cec.setFechaEmpadronamiento(f.parse(txtFechaEmpadronamiento.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(frmEmpresa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    private void tEmpresaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tEmpresaMouseClicked
        if (evt.getClickCount() == 2) {

            btnGuardar.setEnabled(false);
            int fila = tEmpresa.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tEmpresa.getModel();
            Integer idCliente = Integer.valueOf(model.getValueAt(fila, 0).toString());

            EmpresaBO e = EmpresaBO.getInstance();
            //Cliente cli = e.ObtenerEmpresa(ruc);
            SeguridadBO sBO = SeguridadBO.getINSTANCE();
            Cliente cliente = (Cliente) sBO.CargarObjeto("Cliente", idCliente);
            chkEsEstudioContable.setSelected(false);
            this.cliActual = cliente;
            if (!Objects.isNull(this.cliActual)) {
                if (!Objects.isNull(this.cliActual.getEsEstudioContable())) {
                    ClienteEstudioContable cec = e.obtenerEstudioContable(this.cliActual.getIdCliente());
                    if (!Objects.isNull(cec)) {
                        this.cliActual.setClienteEstudioContables(new HashSet(0));
                        this.cliActual.getClienteEstudioContables().add(cec);
                    } else {
                        ClienteEstudioContable cecNuevo = new ClienteEstudioContable();
                        this.cliActual.setClienteEstudioContables(new HashSet(0));
                        this.cliActual.getClienteEstudioContables().add(cecNuevo);
                    }
                    if (this.cliActual.getEsEstudioContable().equals("S")) {
                        chkEsEstudioContable.setSelected(true);
                        this.cargarFormularioEstudioContable(this.cliActual);
                    }
                }
            }

            txtRUC.setText(cliActual.getEruc());
            txtNroCuenta.setText(cliActual.getEnroCta());
            txtNombre.setText(cliActual.getEnombre());
            txtCiudad.setText(cliActual.getEciudad());
            txtCondicion.setText(cliActual.getEcondicion());
            txtEmail.setText(cliActual.getEemail());
            txtTelefonoFijo.setText(cliActual.getEtelefonoFijo());
            txtDireccion.setText(cliActual.getEdireccion());
            txtTelefonoCelular.setText(cliActual.getEtelefonoCelular());

            //txtTelefono.setText(cli.getEtelefono());
            txtRUC.setEditable(true);
            cbTipoPago.setEnabled(true);
            txtNroCuenta.setEditable(true);
            txtNombre.setEditable(true);
            txtCiudad.setEditable(true);
            txtCondicion.setEditable(true);
            txtEmail.setEditable(true);
            txtTelefonoFijo.setEditable(true);
            txtDireccion.setEditable(true);
            txtTelefonoCelular.setEditable(true);
            chkEsEstudioContable.setEnabled(true);
            jTabbedPane1.setEnabledAt(1, false);
            jTabbedPane1.setEnabledAt(2, false);
            jTabbedPane1.setSelectedIndex(0);
            if (!Objects.isNull(this.cliActual.getEsEstudioContable())) {
                if (this.cliActual.getEsEstudioContable().equals("S")) {
                    jTabbedPane1.setEnabledAt(1, true);
                    jTabbedPane1.setEnabledAt(2, true);
                }
            }
            if (this.cliActual.getEdepDomicilio() != null) {
                for (int i = 0; i < cbDomicilioDepartamento.getItemCount(); i++) {
                    UbigeoDepartamento u = (UbigeoDepartamento) cbDomicilioDepartamento.getItemAt(i);
                    if (u.getIdDepartamento() == this.cliActual.getEdepDomicilio()) {
                        cbDomicilioDepartamento.setSelectedItem(u);
                    }
                }
            } else {
                for (int i = 0; i < cbDomicilioDepartamento.getItemCount(); i++) {
                    UbigeoDepartamento u = (UbigeoDepartamento) cbDomicilioDepartamento.getItemAt(i);
                    if (u.getCodigoDepartamento().equals("00")) {
                        cbDomicilioDepartamento.setSelectedItem(u);
                    }
                }
            }
            if (this.cliActual.getEproDomicilio() != null) {
                for (int i = 0; i < cbDomicilioProvincia.getItemCount(); i++) {
                    UbigeoProvincia u = (UbigeoProvincia) cbDomicilioProvincia.getItemAt(i);
                    if (u.getIdProvincia() == this.cliActual.getEproDomicilio()) {
                        cbDomicilioProvincia.setSelectedItem(u);
                    }
                }
            } else {
                for (int i = 0; i < cbDomicilioProvincia.getItemCount(); i++) {
                    UbigeoProvincia u = (UbigeoProvincia) cbDomicilioProvincia.getItemAt(i);
                    if (u.getCodigoProvincia().equals("00")) {
                        cbDomicilioProvincia.setSelectedItem(u);
                    }
                }
            }
            if (this.cliActual.getEdisDomicilio() != null) {
                for (int i = 0; i < cbDomicilioDistrito.getItemCount(); i++) {
                    UbigeoDistrito u = (UbigeoDistrito) cbDomicilioDistrito.getItemAt(i);
                    if (u.getIdDistrito() == this.cliActual.getEdisDomicilio()) {
                        cbDomicilioDistrito.setSelectedItem(u);
                    }
                }
            } else {
                for (int i = 0; i < cbDomicilioDistrito.getItemCount(); i++) {
                    UbigeoDistrito u = (UbigeoDistrito) cbDomicilioDistrito.getItemAt(i);
                    if (u.getCodigoDistrito().equals("00")) {
                        cbDomicilioDistrito.setSelectedItem(u);
                    }
                }
            }
            if (this.accesoGuardar) {
//                btnActualizar.setEnabled(true);
                btnEliminar.setEnabled(true);
                btnGuardar.setEnabled(true);
            } else {
//                btnActualizar.setEnabled(false);
                btnEliminar.setEnabled(false);
                btnGuardar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tEmpresaMouseClicked

    private void cbDomicilioProvinciaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDomicilioProvinciaItemStateChanged
        EmpresaBO pBO = EmpresaBO.getInstance();
        int idProvincia = 0;

        if (cbDomicilioProvincia.getSelectedIndex() > -1) {
            cbDomicilioDistrito.removeAllItems();
            lUbigeoProvincias = (List<UbigeoProvincia>) pBO.ObtenerEmpresaUbigeoProvincia(lUbigeoDepartamento.
                    get(cbDomicilioDepartamento.getSelectedIndex()).getIdDepartamento());
            //distrito
            idProvincia = lUbigeoProvincias.get(cbDomicilioProvincia.getSelectedIndex()).getIdProvincia();

            List<UbigeoDistrito> list = pBO.ObtenerEmpresaUbigeoDistrito(idProvincia);

            for (UbigeoDistrito u : list) {
                cbDomicilioDistrito.addItem(u);

                //cbDepartamentoDomicilio.addItem(udep.getNombreDepartamento());
            }
        }
    }//GEN-LAST:event_cbDomicilioProvinciaItemStateChanged

    private void cbDomicilioDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDomicilioDepartamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDomicilioDepartamentoActionPerformed

    private void cbDomicilioDepartamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDomicilioDepartamentoItemStateChanged
        EmpresaBO pBO = EmpresaBO.getInstance();
        if (cbDomicilioDepartamento.getSelectedIndex() >= -1) {
            cbDomicilioProvincia.removeAllItems();
            final int idDepartamento = lUbigeoDepartamento.get(cbDomicilioDepartamento.getSelectedIndex())
                    .getIdDepartamento();
            List<UbigeoProvincia> list = pBO.ObtenerEmpresaUbigeoProvincia(idDepartamento);
            for (UbigeoProvincia u : list) {
                cbDomicilioProvincia.addItem(u);
            }
        }
    }//GEN-LAST:event_cbDomicilioDepartamentoItemStateChanged

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!txtRUC.getText().isEmpty() && !txtNombre.getText().isEmpty()
                && !txtDireccion.getText().isEmpty()) //                && !txtNroCuenta.getText().isEmpty() && !txtCiudad.getText().isEmpty()
        //                && !txtCondicion.getText().isEmpty() && !txtEmail.getText().isEmpty()
        //                && !txtTelefonoFijo.getText().isEmpty()
        //                && !txtTelefonoCelular.getText().isEmpty())
        {
            if (txtRUC.getText().length() != 11) {
                JOptionPane.showMessageDialog(this, "El ruc debe tener 11 digitos", "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                this.cliActual.setEruc(txtRUC.getText().trim());
                this.cliActual.setEnroCta(txtNroCuenta.getText());
                this.cliActual.setEnombre(txtNombre.getText().toUpperCase());
                this.cliActual.setEciudad(txtCiudad.getText());
                this.cliActual.setEcondicion(txtCondicion.getText());
                this.cliActual.setEemail(txtEmail.getText());
                this.cliActual.setEtelefonoFijo(txtTelefonoFijo.getText());
                this.cliActual.setEtelefonoCelular(txtTelefonoCelular.getText());
                this.cliActual.setEdireccion(txtDireccion.getText().toUpperCase());
                this.cliActual.setEdepDomicilio(((UbigeoDepartamento) cbDomicilioDepartamento.getSelectedItem()).getIdDepartamento());
                this.cliActual.setEproDomicilio(((UbigeoProvincia) cbDomicilioProvincia.getSelectedItem()).getIdProvincia());
                this.cliActual.setEdisDomicilio(((UbigeoDistrito) cbDomicilioDistrito.getSelectedItem()).getIdDistrito());
                this.cliActual.setEsEstudioContable(chkEsEstudioContable.isSelected() ? "S" : "N");
                EmpresaBO em = EmpresaBO.getInstance();
                List<Cliente> l = em.BuscarEmpresa(this.cliActual.getEruc(), 1);
                if (this.cliActual.getIdCliente() == 0) {
                    if (l.size() > 0) {
                        JOptionPane.showMessageDialog(this, "El nro de ruc ya existe", "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    this.cliActual.setTipoCliente("E");
                    em.GuardarEmpresa(this.cliActual, txtRUC.getText());
                } else {
                    Integer contador = 0;
                    for (Cliente c : l) {
                        if (!Objects.equals(c.getIdCliente(), this.cliActual.getIdCliente())) {
                            contador++;
                        }
                    }
                    if (contador > 0) {
                        JOptionPane.showMessageDialog(this, "El nro de ruc ya esta asignado a otra empresa", "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    em.ActualizarEmpresa(cliActual, txtRUC.getText());
                }
                if (this.cliActual.getEsEstudioContable().equals("S")) {
                    ArrayList<ClienteEstudioContable> lista = new ArrayList<>(this.cliActual.getClienteEstudioContables());
                    ClienteEstudioContable cec = lista.get(0);
                    cec.setCliente(this.cliActual);
                    this.obtenerFormularioEstudioContable(cec);
                    if (cec.getId() == 0) {
                        em.guardarObjeto(cec);
                    } else {
                        em.actualizarObjeto(cec);
                    }
                    for (int i = 0; i < tEspecialidad.getRowCount(); i++) {
                        ClienteEstudioContableEspecialidad cc = (ClienteEstudioContableEspecialidad) tEspecialidad.getValueAt(i, 0);
                        cc.setClienteEstudioContable(cec);
                        if (cc.getId() == 0) {
                            em.guardarObjeto(cc);
                        } else {
                            em.actualizarObjeto(cc);
                        }
                    }
                } else {
                    ArrayList<ClienteEstudioContable> lista = new ArrayList<>(this.cliActual.getClienteEstudioContables());
                    if (lista.size() > 0) {
                        ClienteEstudioContable cec = lista.get(0);
                        cec.setDireccion("");
                        cec.setEmail("");
                        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                        cec.setFechaEmpadronamiento(f.parse("1900-01-01"));
                        cec.setFechaInicioActividades(f.parse("1900-01-01"));
                        cec.setNroLicenciaFuncionamiento("");
                        cec.setNroTrabajadores(0);
                        cec.setPaginaWeb("");
                        cec.setCliente(this.cliActual);
                        if (!Objects.isNull(cec)) {
                            if (cec.getId() == 0) {
                                cec.setCliente(this.cliActual);
                                em.guardarObjeto(cec);
                            } else {
                                em.actualizarObjeto(cec);
                            }
                        }
                    }
                }
                cbTipoPago.setEnabled(false);
                txtNroCuenta.setEditable(false);
                txtNombre.setEditable(false);
                txtCiudad.setEditable(false);
                txtCondicion.setEditable(false);
                txtEmail.setEditable(false);
                txtTelefonoFijo.setEditable(false);
                txtDireccion.setEditable(false);
                txtTelefonoCelular.setEditable(false);
                chkEsEstudioContable.setSelected(false);
                jTabbedPane1.setEnabledAt(1, false);
                jTabbedPane1.setEnabledAt(2, false);
                jTabbedPane1.setSelectedIndex(0);

                txtRUC.setText("");
                txtNroCuenta.setText("");
                txtNombre.setText("");
                txtCiudad.setText("");
                txtCondicion.setText("");
                txtEmail.setText("");
                txtTelefonoFijo.setText("");
                txtDireccion.setText("");
                txtTelefonoCelular.setText("");
                txtTitular.setText("");
                txtPaginaWeb.setText("");
                txtNroLicencia.setText("");
                txtNroTrabajadores.setText("0");
                txtFechaInicio.setText("1900-01-01");
                txtFechaEmpadronamiento.setText("1900-01-01");
                JOptionPane.showMessageDialog(this, "Se guardó los datos", "OK",
                        JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(this,
                    "Debe llenar todos los Campos", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtDireccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtDireccion.getText().isEmpty()) {
                btnGuardar.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER LA DIRECCIÓN",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtDireccionKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtNombre.getText().isEmpty()) {
                txtDireccion.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER EL NOMBRE",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtRUCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRUCKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_txtRUCKeyTyped

    private void txtRUCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRUCKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtRUC.getText().isEmpty()) {
                txtNombre.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER EL RUC",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtRUCKeyPressed

    private void txtNroLicenciaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroLicenciaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroLicenciaKeyPressed

    private void btnFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechaActionPerformed
        DatePicker dtp = new DatePicker(this);
        txtFechaInicio.setText(dtp.setPickedDate());
    }//GEN-LAST:event_btnFechaActionPerformed

    private void btnFecha1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecha1ActionPerformed
        DatePicker dtp = new DatePicker(this);
        txtFechaEmpadronamiento.setText(dtp.setPickedDate());
    }//GEN-LAST:event_btnFecha1ActionPerformed

    private void tEspecialidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tEspecialidadMouseClicked
        if (evt.getClickCount() == 2) {
            frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
            int fila = tEspecialidad.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tEspecialidad.getModel();
            ClienteEstudioContableEspecialidad ctd = (ClienteEstudioContableEspecialidad) model.getValueAt(fila, 0);
            if (fila >= 0) {
                f.AbrirFormularioEstudioContableEspecialidad(this, 2, fila, ctd);
            }
        }
    }//GEN-LAST:event_tEspecialidadMouseClicked

    private void tEspecialidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tEspecialidadKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            int opcion = JOptionPane.showConfirmDialog(null, "¿ Desea eliminar la especialidad ?");
            if (opcion == JOptionPane.YES_OPTION) {
                int fila = tEspecialidad.getSelectedRow();
                if (fila >= 0) {
                    DefaultTableModel model = (DefaultTableModel) tEspecialidad.getModel();
                    ClienteEstudioContableEspecialidad cc = (ClienteEstudioContableEspecialidad) model.getValueAt(fila, 0);
                    if (cc.getId() > 0) {
                        EmpresaBO cont = EmpresaBO.getInstance();
                        cc.setBorrado("0");
                        cont.actualizarObjeto(cc);
                    }
                    model.removeRow(fila);
                }
            }
        }
    }//GEN-LAST:event_tEspecialidadKeyPressed

    private void btnAgregarPariente2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPariente2ActionPerformed
        if (!Objects.isNull(this.cliActual.getEsEstudioContable())) {
            if (this.cliActual.getEsEstudioContable().equals("S")) {
                frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
                ClienteEstudioContableEspecialidad cdh = new ClienteEstudioContableEspecialidad();
                ArrayList<ClienteEstudioContable> lista = new ArrayList<>(this.cliActual.getClienteEstudioContables());
                ClienteEstudioContable cec = lista.get(0);
                cdh.setClienteEstudioContable(cec);
                CurriculumTablaEspecialidades cte = new CurriculumTablaEspecialidades();
                cdh.setCurriculumTablaEspecialidades(cte);
                f.AbrirFormularioEstudioContableEspecialidad(this, 1, 0, cdh);
            }
        }
    }//GEN-LAST:event_btnAgregarPariente2ActionPerformed

    public void agregarEspecialidad(ClienteEstudioContableEspecialidad cc) {
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        DefaultTableModel modelo = (DefaultTableModel) tEspecialidad.getModel();
        int contador = tEspecialidad.getRowCount();
        modelo.setNumRows(contador);
        modelo.addRow(new Object[contador]);
        tEspecialidad.setValueAt(cc, contador, 0);
        tEspecialidad.setValueAt(contador + 1, contador, 1);
//        tComitePerito.setValueAt(format.format(cc.getFechaAfiliacion()), contador, 2);
        tEspecialidad.setValueAt(cc.getCurriculumTablaEspecialidades(), contador, 2);
//        tEspecialidad.setValueAt(!Objects.isNull(cc.getHasta()) ? format.format(cc.getHasta()) : "", contador, 3);
//        tEspecialidad.setValueAt(tipo, contador, 4);
    }

    public void actualizarEspecialidad(int fila, ClienteEstudioContableEspecialidad cc) {
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//        tComitePerito.setValueAt(format.format(cc.getFechaAfiliacion()), fila, 2);
        tEspecialidad.setValueAt(cc.getCurriculumTablaEspecialidades(), fila, 2);
//        tEspecialidad.setValueAt(!Objects.isNull(cc.getHasta()) ? format.format(cc.getHasta()) : "", fila, 3);
//        String tipo = "-";
//        if (!Objects.isNull(cc.getTipo())) {
//            if (cc.getTipo().equals("J")) {
//                tipo = "REPEJ";
//            } else {
//                if (cc.getTipo().equals("F")) {
//                    tipo = "REPEF";
//                }
//            }
//        }
//        tEspecialidad.setValueAt(tipo, fila, 4);
    }


    private void chkEsEstudioContableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEsEstudioContableActionPerformed
        ClienteEstudioContable cec = new ClienteEstudioContable();
        if (this.cliActual.getIdCliente() > 0) {
            EmpresaBO e = EmpresaBO.getInstance();
            ClienteEstudioContable cecExistente = e.obtenerEstudioContable(this.cliActual.getIdCliente());
            if (!Objects.isNull(cecExistente)) {
                cec.setId(cecExistente.getId());
            }
        }
        if (chkEsEstudioContable.isSelected()) {
            jTabbedPane1.setEnabledAt(1, true);
            jTabbedPane1.setEnabledAt(2, true);
            this.cliActual.setEsEstudioContable("S");
            cec.setBorrado("1");
            this.cliActual.setClienteEstudioContables(new HashSet(0));
            this.cliActual.getClienteEstudioContables().add(cec);
            this.cargarFormularioEstudioContable(this.cliActual);
        } else {
            jTabbedPane1.setEnabledAt(1, false);
            jTabbedPane1.setEnabledAt(2, false);
            this.cliActual.setEsEstudioContable("N");
            cec.setBorrado("0");
            this.cliActual.setClienteEstudioContables(new HashSet(0));
            this.cliActual.getClienteEstudioContables().add(cec);
        }
    }//GEN-LAST:event_chkEsEstudioContableActionPerformed

    public void asignarTitular(Cliente titular) {
        ArrayList<ClienteEstudioContable> lista = new ArrayList<>(this.cliActual.getClienteEstudioContables());
        ClienteEstudioContable cec = lista.get(0);
        if (!Objects.isNull(cec)) {
            cec.setClienteTitular(titular);
            txtTitular.setText(titular.getPapePat() + " " + titular.getPapeMat() + " " + titular.getPnombre());
        }
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        if (this.cliActual.getEsEstudioContable().equals("S")) {
            ArrayList<ClienteEstudioContable> lista = new ArrayList<>(this.cliActual.getClienteEstudioContables());
            ClienteEstudioContable cec = lista.get(0);
            if (!Objects.isNull(cec)) {
                f.AbrirFormularioBuscardorContador(this, 1);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarPariente2;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFecha;
    private javax.swing.JButton btnFecha1;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnIngresarEmpresa;
    private javax.swing.JComboBox cbDomicilioDepartamento;
    private javax.swing.JComboBox cbDomicilioDistrito;
    private javax.swing.JComboBox cbDomicilioProvincia;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JComboBox cbTipoPago;
    private javax.swing.JCheckBox chkEsEstudioContable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pEspecialidades;
    private javax.swing.JPanel pEstudioContable;
    private javax.swing.JProgressBar pbEmpresa;
    private javax.swing.JTable tEmpresa;
    private javax.swing.JTable tEspecialidad;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtCondicion;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JFormattedTextField txtFechaEmpadronamiento;
    private javax.swing.JFormattedTextField txtFechaInicio;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNroCuenta;
    private javax.swing.JTextField txtNroLicencia;
    private javax.swing.JTextField txtNroTrabajadores;
    private javax.swing.JTextField txtPaginaWeb;
    private javax.swing.JTextField txtRUC;
    private javax.swing.JTextField txtTelefonoCelular;
    private javax.swing.JTextField txtTelefonoFijo;
    private javax.swing.JTextField txtTitular;
    // End of variables declaration//GEN-END:variables
}
