/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.administracion;

import caja.bo.TipoDocPagoBO;
import caja.bo.soloMayusculas;
import caja.mapeo.entidades.TipoDocPago;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author juan carlos
 */
public class frmTipoDocumentoPago extends javax.swing.JInternalFrame {

    private TipoDocPago tipoDocumentoPago;
            
    /**
     * Creates new form frmFactura
     */
    public frmTipoDocumentoPago() {
        initComponents();
        
        TableColumn columna = tPagos.getColumn("NRO");
        columna.setPreferredWidth(20);
        columna = tPagos.getColumn("ID");
        columna.setPreferredWidth(0);
        columna.setMaxWidth(0);
        columna.setMinWidth(0);
        columna = tPagos.getColumn("NOMBRE");
        columna.setPreferredWidth(150);
        columna = tPagos.getColumn("CODIGO");
        columna.setPreferredWidth(20);
        columna = tPagos.getColumn("DESCRIPCION");
        columna.setPreferredWidth(200);
        
        
        
        
        
        txtCodigo.setEditable(false);
        txtNombre.setEditable(false);
        txtNombre.setDocument(new soloMayusculas());
        txtDescripcion.setEditable(false);
        txtDescripcion.setDocument(new soloMayusculas());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        cbFiltro = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        btnNuevoTipoDoc = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tPagos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        pbTipoDocPago = new javax.swing.JProgressBar();

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Formulario de Pagos");
        setName("Formulario de Pagos"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("ADMINISTRACIÓN DE PAGOS");

        jLabel2.setText("Búsqueda:");

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "POR NOMBRE", "POR CODIGO" }));

        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnNuevoTipoDoc.setText("NUEVO DOCUMENTO PAGO");
        btnNuevoTipoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoTipoDocActionPerformed(evt);
            }
        });

        tPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NRO", "NOMBRE", "CODIGO", "DESCRIPCION"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tPagos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tPagosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tPagos);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de los Pagos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 11))); // NOI18N

        jLabel4.setText("Código:");

        jLabel5.setText("Nombre:");

        jLabel6.setText("Descripción:");

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyPressed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGuardar)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addComponent(btnActualizar))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(jLabel6)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pbTipoDocPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar)
                                .addGap(19, 19, 19)
                                .addComponent(btnNuevoTipoDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnNuevoTipoDoc))
                .addGap(15, 15, 15)
                .addComponent(pbTipoDocPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void buscarTipoDocumetoPago() {

        txtCodigo.setEditable(false);
        txtNombre.setEditable(false);
        txtDescripcion.setEditable(false);
    
        
        int tipoBusqueda = 0;
        if (cbFiltro.getSelectedItem() == "POR NOMBRE") {
            tipoBusqueda = 1;
        } else if (cbFiltro.getSelectedItem() == "POR CODIGO") {
            tipoBusqueda = 2;
        }
        
        TipoDocPagoBO tdp = TipoDocPagoBO.getInstance();
        List<TipoDocPago> l = tdp.BuscarTipoDocumentoPago(txtBusqueda.getText(), tipoBusqueda);
        DefaultTableModel modelo = (DefaultTableModel) tPagos.getModel();
        modelo = (DefaultTableModel) tPagos.getModel();
        modelo.setRowCount(l.size());
        int contador = 0;
        for (TipoDocPago dp : l) {
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tPagos.setValueAt(dp.getIdTipoDocPago(), contador, 0);
            tPagos.setValueAt(contador + 1, contador, 1);
            tPagos.setValueAt(dp.getNombreDocPago(), contador, 2);
            tPagos.setValueAt(dp.getCodigoDocPago(), contador, 3);
            tPagos.setValueAt(dp.getDescripcion(), contador, 4);
            contador++;
        }
        
    }
    
    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarTipoDocumetoPago();
        }
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Thread queryThread = new Thread() {
            public void run() 
            {
                
                pbTipoDocPago.setIndeterminate(true);
                pbTipoDocPago.setStringPainted(true);
                pbTipoDocPago.setString("BUSCANDO TIPO DOCUMENTO PAGO, POR FAVOR ESPERE");
                pbTipoDocPago.setValue(1000);
                pbTipoDocPago.repaint();
                buscarTipoDocumetoPago();
                pbTipoDocPago.setString("BUSQUEDA FINALIZADA");
                pbTipoDocPago.setStringPainted(false);
                pbTipoDocPago.setIndeterminate(false);

            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnNuevoTipoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoTipoDocActionPerformed
        txtCodigo.setEditable(true);
        txtNombre.setEditable(true);
        txtDescripcion.setEditable(true);
        txtCodigo.setFocusable(true);
        txtCodigo.requestFocus();
        
        
        txtCodigo.setText("");
        txtNombre.setText("");
        txtDescripcion.setText("");
    }//GEN-LAST:event_btnNuevoTipoDocActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!txtCodigo.getText().isEmpty() && !txtNombre.getText().isEmpty())
                //&& !txtDescripcion.getText().isEmpty()) 
                
        {
            if (txtCodigo.getText().length() != 2) {
                JOptionPane.showMessageDialog(this,
                        "El Código debe tener 2 digitos", "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            try {
                TipoDocPago tdp = new TipoDocPago();
                tdp.setCodigoDocPago(txtCodigo.getText());
                tdp.setNombreDocPago(txtNombre.getText());
                tdp.setDescripcion(txtDescripcion.getText());
                
                
                TipoDocPagoBO tipoDocPago = TipoDocPagoBO.getInstance();
                tipoDocPago.GuardarTipoDocumentoPago(tdp, txtCodigo.getText());
               

                txtCodigo.setEditable(false);
                txtNombre.setEditable(false);
                txtDescripcion.setEditable(false);
                
                
                txtCodigo.setText("");
                txtNombre.setText("");
                txtDescripcion.setText("");
                
                JOptionPane.showMessageDialog(this, "Se inserto el Tipo de Documento de Pago Correctamente", "OK",
                        JOptionPane.INFORMATION_MESSAGE);

            } 
        catch (Exception e) {
                e.printStackTrace();
            }

        } 
        else {
            JOptionPane.showMessageDialog(this, "Por favor llene todos los Campos", "ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }
    
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tPagosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tPagosMouseClicked
        if (evt.getClickCount() == 2) {
            
            btnGuardar.setEnabled(false);
            
            int fila = tPagos.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tPagos.getModel();
            String codigo = String.valueOf(model.getValueAt(fila, 3));
            
            TipoDocPagoBO tipoDocPago = TipoDocPagoBO.getInstance();
            tipoDocumentoPago = tipoDocPago.ObtenerTipoDocPago(codigo);
            
            
            
            
            txtCodigo.setText(tipoDocumentoPago.getCodigoDocPago());
            txtNombre.setText(tipoDocumentoPago.getNombreDocPago());
            txtDescripcion.setText(tipoDocumentoPago.getDescripcion());
            
            txtCodigo.setEditable(true);
            txtNombre.setEditable(true);
            txtDescripcion.setEditable(true);
            
        }
    }//GEN-LAST:event_tPagosMouseClicked

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if (!txtCodigo.getText().isEmpty() && !txtNombre.getText().isEmpty())
                //&& !txtDescripcion.getText().isEmpty()) 
                
        {
            int fila = tPagos.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tPagos.getModel();
            String codigo = String.valueOf(model.getValueAt(fila, 1));
            
            try
            {
                if(tipoDocumentoPago == null){
                    JOptionPane.showMessageDialog(this, "Debes seleccionar un Tipo de documento de Pago", "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                
                tipoDocumentoPago.setCodigoDocPago(txtCodigo.getText());
                tipoDocumentoPago.setNombreDocPago(txtNombre.getText());
                tipoDocumentoPago.setDescripcion(txtDescripcion.getText());
                
            
                TipoDocPagoBO tipoDocPago = TipoDocPagoBO.getInstance();
                tipoDocPago.ActualizarTipoDocumentoPago(tipoDocumentoPago, txtCodigo.getText());
                
                
                txtCodigo.setEditable(false);
                txtNombre.setEditable(false);
                txtDescripcion.setEditable(false);
                

                txtCodigo.setText("");
                txtNombre.setText("");
                txtDescripcion.setText("");
                
            
                JOptionPane.showMessageDialog(this, "Se actualizó el Tipo de Documento de Pago Correctamente", "OK",
                        JOptionPane.INFORMATION_MESSAGE);
            
            }
            
            catch(Exception e)
            {
                e.printStackTrace();
            }
         

        }
        else{
            JOptionPane.showMessageDialog(this, "No se pudo actualizar el Tipo de Documento de Pago", "ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtCodigo.getText().isEmpty()) {
                txtNombre.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER EL CÓDIGO",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtNombre.getText().isEmpty()) {
                txtDescripcion.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER EL NOMBRE",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtDescripcion.getText().isEmpty()) {
                btnGuardar.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER LA DESCRIPCIÓN",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtDescripcionKeyPressed

        

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevoTipoDoc;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pbTipoDocPago;
    private javax.swing.JTable tPagos;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
