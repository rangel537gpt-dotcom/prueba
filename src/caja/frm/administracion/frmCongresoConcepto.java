/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.administracion;

import caja.bo.CongresoBO;
import caja.bo.DocumentoPagoBO;
import caja.frm.caja.frmCargando;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.ConceptoPagoDetalle;
import caja.mapeo.entidades.Congreso;
import caja.mapeo.entidades.CongresoConcepto;
//import java.text.ParseException;
//import java.text.SimpleDateFormat;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
//import units.DatePicker;

/**
 *
 * @author user
 */
public class frmCongresoConcepto extends javax.swing.JInternalFrame {

    private CongresoConcepto congresoConcepto;
    private List<Congreso> lCongresos;

    /**
     * Creates new form frmPersona
     */
    public frmCongresoConcepto() {
        initComponents();
//        txtFechaEnvio.setText("1900-01-01");
//        txtFechaCongreso.setText("1900-01-01");
//        txtFechaRecepcion.setText("1900-01-01");
        this.congresoConcepto = new CongresoConcepto();

        TableColumn columna = tCongresoCodigo.getColumn("NRO");
        columna.setPreferredWidth(40);
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna = tCongresoCodigo.getColumn("CODIGO");
        columna.setPreferredWidth(100);
        columna.setMinWidth(100);
        columna.setMaxWidth(100);
//        columna = tOficio.getColumn("CUI");
//        columna.setPreferredWidth(70);
//        columna.setMinWidth(70);
//        columna.setMaxWidth(70);
//        columna = tOficio.getColumn("FEC. NAC.");
//        columna.setPreferredWidth(70);
//        columna.setMinWidth(70);
//        columna.setMaxWidth(70);
//        columna = tOficio.getColumn("SEXO");
//        columna.setPreferredWidth(50);
//        columna.setMinWidth(50);
//        columna.setMaxWidth(50);
        columna = tCongresoCodigo.getColumn("CONGRESOOBJ");
        columna.setPreferredWidth(0);
        columna.setMinWidth(0);
        columna.setMaxWidth(0);

        CongresoBO cBO = CongresoBO.getInstance();
        this.lCongresos = cBO.ObtenerTodasCongresos();
        for (Congreso c : lCongresos) {
            cbCongreso.addItem(c);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tCongresoCodigo = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        cbCongreso = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cbCodigo = new javax.swing.JComboBox();
        cbCodigo.getEditor().getEditorComponent().addKeyListener(
            new KeyAdapter(){
                //@Override
                public void keyReleased (KeyEvent e){
                    if (e.getKeyCode() < 37 || e.getKeyCode() > 40 ) {
                        if( e.getKeyCode() !=KeyEvent.VK_ENTER )
                        {
                            BuscarConceptoPagoCodigo();
                        }
                        else
                        {
                            String txt = ((JTextField) cbCodigo.getEditor().getEditorComponent()).getText();
                            if( !txt.isEmpty() ){
                                cbConceptoPago.requestFocus();
                                //ValidarConcepto();
                            }
                        }
                    }
                }} );
                cbConceptoPago = new javax.swing.JComboBox();

                setClosable(true);
                setTitle("ASIGNAR CONCEPTO AL CONGRESO");
                setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N
                setPreferredSize(new java.awt.Dimension(900, 600));

                jLabel1.setText("NOMBRE:");

                tCongresoCodigo.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "NRO", "CONGRESO", "CODIGO", "CONCEPTO", "CONGRESOOBJ"
                    }
                ) {
                    boolean[] canEdit = new boolean [] {
                        false, false, false, false, false
                    };

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }
                });
                tCongresoCodigo.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        tCongresoCodigoMouseClicked(evt);
                    }
                });
                jScrollPane1.setViewportView(tCongresoCodigo);

                btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/nuevoOficio.png"))); // NOI18N
                btnAgregar.setText("AGREGAR");
                btnAgregar.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnAgregarActionPerformed(evt);
                    }
                });

                btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar5.png"))); // NOI18N
                btnBuscar.setText("BUSCAR");
                btnBuscar.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnBuscarActionPerformed(evt);
                    }
                });

                jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("DATOS CONGRESO"));

                jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jLabel2.setText("NOMBRE:");

                btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/Guardar2.png"))); // NOI18N
                btnGuardar.setEnabled(false);
                btnGuardar.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnGuardarActionPerformed(evt);
                    }
                });

                btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/Editar Trabajador 1.png"))); // NOI18N
                btnEditar.setEnabled(false);
                btnEditar.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnEditarActionPerformed(evt);
                    }
                });

                cbCongreso.setEnabled(false);

                jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jLabel3.setText("CONCEPTO:");

                cbCodigo.setEditable(true);
                cbCodigo.setEnabled(false);
                cbCodigo.addItemListener(new java.awt.event.ItemListener() {
                    public void itemStateChanged(java.awt.event.ItemEvent evt) {
                        cbCodigoItemStateChanged(evt);
                    }
                });

                cbConceptoPago.setEditable(true);
                cbConceptoPago.setEnabled(false);
                cbConceptoPago.getEditor().getEditorComponent().addKeyListener(
                    new KeyAdapter(){
                        //@Override
                        public void keyReleased (KeyEvent e){
                            if (e.getKeyCode() < 37 || e.getKeyCode() > 40 ) {
                                BuscarConceptoPago();
                            }
                        }} );
                        cbConceptoPago.addItemListener(new java.awt.event.ItemListener() {
                            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                cbConceptoPagoItemStateChanged(evt);
                            }
                        });

                        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                        jPanel1.setLayout(jPanel1Layout);
                        jPanel1Layout.setHorizontalGroup(
                            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cbCodigo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbConceptoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cbCongreso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(353, 353, 353)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        );
                        jPanel1Layout.setVerticalGroup(
                            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cbCongreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(cbConceptoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnEditar)
                                    .addComponent(btnGuardar))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        );

                        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                        getContentPane().setLayout(layout);
                        layout.setHorizontalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBuscar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 352, Short.MAX_VALUE)
                                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                        );
                        layout.setVerticalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAgregar)
                                    .addComponent(btnBuscar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                        );

                        pack();
                    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
//        String txtCongreso = ((JTextField) cbCongreso.getEditor().getEditorComponent()).getText();
        String nomDetalle = ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).getText();
        if (!nomDetalle.isEmpty()) {

//            Congreso congresoSel = null;
//            for (Congreso c : lCongresos) {
//                if (c.getNombre().equals(txtCongreso)) {
//                    congresoSel = c;
//                    break;
//                }
//            }
//
//            if (congresoSel == null) {
//                JOptionPane.showMessageDialog(this,
//                        "DEBE ELEGIR UN CONGRESO",
//                        "ERROR",
//                        JOptionPane.ERROR_MESSAGE);
//                return;
//            }

            ConceptoPagoDetalle conceptoDetalle = null;
            DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
            List<ConceptoPagoDetalle> lconceptoDetalle = dpBO.ObtenerTodosConceptoPago();
            for (ConceptoPagoDetalle cDetalle : lconceptoDetalle) {
                if (cDetalle.getDescripcion().equals(nomDetalle)) {
                    conceptoDetalle = cDetalle;
                    break;
                }
            }

            if (conceptoDetalle == null) {
                JOptionPane.showMessageDialog(this,
                        "DEBE ELEGIR UN CONCEPTO DE PAGO",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            this.congresoConcepto.setCongreso((Congreso)cbCongreso.getSelectedItem());
            this.congresoConcepto.setConceptoPagoDetalle(conceptoDetalle);
            CongresoBO cBO = CongresoBO.getInstance();
            if (this.congresoConcepto.getId() == 0) {
                boolean seGuardo = cBO.GuardarCongresoConcepto(this.congresoConcepto);
                if (seGuardo) {
                    JOptionPane.showMessageDialog(this,
                            "SE GUARDÓ LOS DATOS",
                            "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this,
                            "NO SE PUDO GUARDAR LOS DATOS",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                boolean seGuardo = cBO.ActualizarCongresoConcepto(this.congresoConcepto);
                if (seGuardo) {
                    JOptionPane.showMessageDialog(this,
                            "SE ACTUALIZÓ LOS DATOS",
                            "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this,
                            "NO SE PUDO ACTUALIZAR LOS DATOS",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            cbCongreso.setEnabled(false);
            cbCodigo.setEnabled(false);
            cbConceptoPago.setEnabled(false);
            btnGuardar.setEnabled(false);
            btnEditar.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this,
                    "Por favor llene todos los Campos",
                    "ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        this.congresoConcepto = new CongresoConcepto();
        cbCongreso.setEnabled(true);
        cbConceptoPago.setEnabled(true);
        cbCodigo.setEnabled(true);
        btnGuardar.setEnabled(true);
        btnEditar.setEnabled(false);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void buscarCongresoConcepto() {
        CongresoBO oBO = CongresoBO.getInstance();
//        List<Oficio> listado = oBO.BuscarOficio(title, SOMEBITS);
        List<CongresoConcepto> listado = oBO.ObtenerTodosCongresoConcepto();
        DefaultTableModel modelo = (DefaultTableModel) tCongresoCodigo.getModel();
        modelo.setRowCount(0);
        int contador = 0;
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        for (CongresoConcepto cc : listado) {
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tCongresoCodigo.setValueAt(contador + 1, contador, 0);
            tCongresoCodigo.setValueAt(cc.getCongreso().getNombre(), contador, 1);
            tCongresoCodigo.setValueAt(cc.getConceptoPagoDetalle().getTipoCodigo() + cc.getConceptoPagoDetalle().getCodigo(), contador, 2);
            tCongresoCodigo.setValueAt(cc.getConceptoPagoDetalle().getDescripcion(), contador, 3);
            tCongresoCodigo.setValueAt(cc, contador, 4);
            contador++;
        }
        cbCodigo.setEnabled(false);
        cbConceptoPago.setEnabled(false);
        cbCongreso.setEnabled(false);
    }

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        frmPrincipal fPrin = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        Thread queryThread = new Thread() {
            public void run() {
                frmCargando fCargando = new frmCargando();
                fPrin.AgregarFormulario(fCargando);
                int x = (fPrin.getWidth() - fCargando.getWidth()) / 2;
                int y = (fPrin.getHeight() - fCargando.getHeight()) / 2;
                fCargando.setLocation(x, y);
                fCargando.setVisible(true);
                fCargando.toFront();
                buscarCongresoConcepto();
                fCargando.dispose();
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tCongresoCodigoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tCongresoCodigoMouseClicked
        try {
            if (evt.getClickCount() == 2) {
                int fila = tCongresoCodigo.getSelectedRow();
                DefaultTableModel model = (DefaultTableModel) tCongresoCodigo.getModel();
                CongresoConcepto cc = (CongresoConcepto) model.getValueAt(fila, 4);
                this.congresoConcepto = cc;

                for (Congreso c : this.lCongresos) {
                    if (c.getId() == cc.getId()) {
                        cbCongreso.setSelectedItem(c);
                        break;
                    }
                }

                cbCodigo.setEnabled(false);
                cbConceptoPago.setEnabled(false);
                cbCongreso.setEnabled(false);
                btnGuardar.setEnabled(false);
                btnEditar.setEnabled(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tCongresoCodigoMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (this.congresoConcepto.getId() != 0) {
            cbCodigo.setEditable(true);
            cbConceptoPago.setEditable(true);
            cbCongreso.setEnabled(true);
            btnGuardar.setEnabled(true);
            btnEditar.setEnabled(false);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void ObtenerDatosSegunCodigo(String codigo) {
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<ConceptoPagoDetalle> lConcepto = dpBO.ObtenerTodosConceptoPago();
        for (ConceptoPagoDetalle c : lConcepto) {
            String codigoConcepto = c.getTipoCodigo() + c.getCodigo();
            if (codigo.equals(codigoConcepto)) {
                ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).setText(c.getDescripcion());
                return;
            }
        }
        ((JTextField) cbCodigo.getEditor().getEditorComponent()).setText("");
        ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).setText("");
    }

    private void BuscarConceptoPago() {
        String txt = ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).getText();
        txt = txt.toUpperCase();
        cbConceptoPago.removeAllItems();
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<ConceptoPagoDetalle> lConceptos = dpBO.ObtenerTodosConceptoPago();
        for (ConceptoPagoDetalle concepto : lConceptos) {
            if (concepto.getDescripcion().contains(txt)) {
                cbConceptoPago.addItem(concepto.getDescripcion());
            }
        }
        cbConceptoPago.setSelectedIndex(-1);
        cbConceptoPago.hidePopup();
        cbConceptoPago.showPopup();
        ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).setText(txt);
    }

    private void BuscarConceptoPagoCodigo() {
        String txt = ((JTextField) cbCodigo.getEditor().getEditorComponent()).getText();
        txt = txt.toUpperCase();
        cbCodigo.removeAllItems();
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<ConceptoPagoDetalle> lConceptos = dpBO.ObtenerTodosConceptoPago();
        for (ConceptoPagoDetalle concepto : lConceptos) {
            String codigo = concepto.getTipoCodigo() + concepto.getCodigo();
            if (codigo.contains(txt)) {
                cbCodigo.addItem(codigo);
            }
        }
        cbCodigo.setSelectedIndex(-1);
        cbCodigo.hidePopup();
        cbCodigo.showPopup();
        ((JTextField) cbCodigo.getEditor().getEditorComponent()).setText(txt);
    }

    private void cbCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCodigoItemStateChanged
        String codigo = ((JTextField) cbCodigo.getEditor().getEditorComponent()).getText();
        this.ObtenerDatosSegunCodigo(codigo);
    }//GEN-LAST:event_cbCodigoItemStateChanged

    private void ObtenerDatosConceptoDetalle(String detPago) {
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<ConceptoPagoDetalle> lConceptoPago = dpBO.ObtenerTodosConceptoPago();
        for (ConceptoPagoDetalle cd : lConceptoPago) {
            if (cd.getDescripcion().equals(detPago)) {
                ((JTextField) cbCodigo.getEditor().getEditorComponent()).setText(cd.getTipoCodigo() + cd.getCodigo());
                return;
            }
        }
        ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).setText("");
    }


    private void cbConceptoPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbConceptoPagoItemStateChanged
        String detPago = ((JTextField) cbConceptoPago.getEditor().getEditorComponent()).getText();
        this.ObtenerDatosConceptoDetalle(detPago);
    }//GEN-LAST:event_cbConceptoPagoItemStateChanged

//    public void agregarAutoridad(Oficio o) {
//        this.oficio = o;
//        txtDniAutoridad.setText(this.oficio.getPersona().getNroDocIdentidad());
//        txtNombreAutoridad.setText(this.oficio.getPersona().getApePat() + " " + this.oficio.getPersona().getApeMat() + " " + this.oficio.getPersona().getNombres());
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox cbCodigo;
    private javax.swing.JComboBox cbConceptoPago;
    private javax.swing.JComboBox cbCongreso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tCongresoCodigo;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
