/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.administracion;

import caja.bo.PersonaBO;
import caja.bo.SeguridadBO;
import caja.bo.soloMayusculas;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.UbigeoDepartamento;
import caja.mapeo.entidades.UbigeoDistrito;
import caja.mapeo.entidades.UbigeoProvincia;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Locale;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import units.DatePicker;

/**
 *
 * @author juan carlos
 */
public class frmPersona extends javax.swing.JInternalFrame {

    private Cliente persona = new Cliente();
    private List<UbigeoDepartamento> lUbigeoDepartamento;
    private List<UbigeoProvincia> lUbigeoProvincias;
    private List<UbigeoDistrito> lUbigeoDistrito;
    private boolean accesoGuardar = true;
    private boolean error = false;

    /**
     * Creates new form frmPersona
     */
    public frmPersona() {
        initComponents();

        TableColumn columna = tPersona.getColumn("NRO");
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna.setPreferredWidth(40);
        columna = tPersona.getColumn("ID");
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setPreferredWidth(0);
        columna = tPersona.getColumn("DNI");
        columna.setMinWidth(80);
        columna.setMaxWidth(80);
        columna.setPreferredWidth(80);
        columna = tPersona.getColumn("APELLIDO PATERNO");
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setPreferredWidth(0);
        columna = tPersona.getColumn("APELLIDO MATERNO");
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setPreferredWidth(0);
        columna = tPersona.getColumn("NOMBRES");
        columna.setPreferredWidth(150);
        columna = tPersona.getColumn("FECHA NACIMIENTO");
        columna.setPreferredWidth(80);
        columna = tPersona.getColumn("SEXO");
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna.setPreferredWidth(40);

        txtDNI.setEditable(false);
        txtApellidoPaterno.setEditable(false);
        txtApellidoPaterno.setDocument(new soloMayusculas());
        txtApellidoMaterno.setEditable(false);
        txtApellidoMaterno.setDocument(new soloMayusculas());
        txtNombres.setEditable(false);
        txtNombres.setDocument(new soloMayusculas());
        txtFechaNac.setEditable(false);
        cbSexo.setEnabled(false);
        cbEliminadoApp.setEnabled(false);
        txtTelefonoDomicilio.setEditable(false);
        txtTelefonoCelular.setEditable(false);
        txtTelefonoCelular1.setEditable(false);
        txtTelefonoTrabajo.setEditable(false);
        txtDireccionDomicilio.setEditable(false);
        txtDireccionDomicilio.setDocument(new soloMayusculas());
        cbDomicilioDepartamento.setEnabled(false);
        cbDomicilioProvincia.setEnabled(false);
        cbDomicilioDistrito.setEnabled(false);
        chkPublicidad.setEnabled(false);
//        txtDireccionTrabajo.setEditable(false);
//        txtDireccionTrabajo.setDocument(new soloMayusculas());
//        cbTrabajoDepartamento.setEnabled(false);
//        cbTrabajoProvincia.setEnabled(false);
//        cbTrabajoDistrito.setEnabled(false);

        btnFecha.setEnabled(false);
        txtFechaNac.setText("1900-01-01");

        PersonaBO personaBO = PersonaBO.getInstance();

        lUbigeoDepartamento = (List<UbigeoDepartamento>) personaBO.ObtenerPersonaUbigeoDepartamento();
        for (UbigeoDepartamento udep : lUbigeoDepartamento) {
            cbDomicilioDepartamento.addItem(udep);
        }

//        lUbigeoDepartamento = (List<UbigeoDepartamento>) personaBO.ObtenerPersonaUbigeoDepartamento();
//        for (UbigeoDepartamento udep : lUbigeoDepartamento) {
//            cbTrabajoDepartamento.addItem(udep);
//        }
        SeguridadBO sBO = SeguridadBO.getInstance();
        if (sBO.getUsuario().getRolUsuario().equals("SA")) {
            accesoGuardar = true;
        } else {
            if (sBO.getUsuario().getRolUsuario().equals("A")) {
                accesoGuardar = true;
            } else {
                accesoGuardar = false;
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        cbFiltro = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        btnIngresarPersona = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tPersona = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApellidoPaterno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellidoMaterno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnFecha = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTelefonoDomicilio = new javax.swing.JTextField();
        txtTelefonoCelular = new javax.swing.JTextField();
        txtTelefonoCelular1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTelefonoTrabajo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cbSexo = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        txtDireccionDomicilio = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbDomicilioDepartamento = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        cbDomicilioProvincia = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        cbDomicilioDistrito = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        txtEMail = new javax.swing.JTextField();
        txtFechaNac = new javax.swing.JFormattedTextField();
        txtPassword = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        cbEliminadoApp = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        chkPublicidad = new javax.swing.JCheckBox();
        pbPersona = new javax.swing.JProgressBar();
        btnGuardar = new javax.swing.JButton();
        btnGuardar1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Formulario Personas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(900, 600));

        jLabel1.setText("BÃšSQUEDA:");

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "POR DNI", "POR NOMBRES" }));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar_mini1.png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnIngresarPersona.setText("NUEVA PERSONA");
        btnIngresarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarPersonaActionPerformed(evt);
            }
        });

        tPersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NRO", "DNI", "APELLIDO PATERNO", "APELLIDO MATERNO", "NOMBRES", "FECHA NACIMIENTO", "SEXO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tPersona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tPersonaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tPersona);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de la Persona"));

        jLabel2.setText("DNI:");

        txtDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDNIKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDNIKeyTyped(evt);
            }
        });

        jLabel3.setText("Apellido Paterno:");

        txtApellidoPaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidoPaternoKeyPressed(evt);
            }
        });

        jLabel4.setText("Apellido Materno:");

        txtApellidoMaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidoMaternoKeyPressed(evt);
            }
        });

        jLabel5.setText("Nombres:");

        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombresKeyPressed(evt);
            }
        });

        jLabel6.setText("Fecha Nacimiento:");

        btnFecha.setText("...");
        btnFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFechaActionPerformed(evt);
            }
        });

        jLabel7.setText("TelÃ©fono Domicilio:");

        jLabel8.setText("TelÃ©fono Celular:");

        jLabel9.setText("TelÃ©fono Celular 1:");

        jLabel10.setText("TelÃ©fono Trabajo:");

        jLabel11.setText("Sexo:");

        cbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MASCULINO", "FEMENINO" }));

        jLabel12.setText("DirecciÃ³n Domicilio:");

        jLabel13.setText("Departamento:");

        cbDomicilioDepartamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDomicilioDepartamentoItemStateChanged(evt);
            }
        });
        cbDomicilioDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDomicilioDepartamentoActionPerformed(evt);
            }
        });

        jLabel14.setText("Provincia:");

        cbDomicilioProvincia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDomicilioProvinciaItemStateChanged(evt);
            }
        });

        jLabel15.setText("Distrito:");

        jLabel20.setText("e - mail:");

        txtFechaNac.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        jLabel21.setText("Pass:");

        cbEliminadoApp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CREADO", "ELIMINADO" }));

        jLabel16.setText("Cuenta App:");

        chkPublicidad.setText("Publicidad");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDireccionDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbEliminadoApp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbDomicilioDepartamento, 0, 158, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbDomicilioProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbDomicilioDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(chkPublicidad, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(153, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(txtNombres))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTelefonoDomicilio)
                                    .addComponent(txtTelefonoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTelefonoTrabajo)
                                    .addComponent(txtTelefonoCelular1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtEMail)
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtPassword)
                                    .addComponent(cbSexo, javax.swing.GroupLayout.Alignment.LEADING, 0, 89, Short.MAX_VALUE)
                                    .addComponent(txtFechaNac, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFecha)
                                .addGap(0, 136, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTelefonoDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(btnFecha)
                            .addComponent(txtFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtTelefonoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtTelefonoCelular1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtTelefonoTrabajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(txtEMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtDireccionDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbDomicilioDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(cbDomicilioProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(cbDomicilioDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbEliminadoApp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkPublicidad))
                    .addComponent(jLabel16))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/Guardar2.png"))); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnGuardar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/personas.png"))); // NOI18N
        btnGuardar1.setText("COLEGIAR");
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGuardar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pbPersona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnIngresarPersona))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnIngresarPersona)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(pbPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarPersona() {
        txtDNI.setEditable(false);
        txtApellidoPaterno.setEditable(false);
        txtApellidoMaterno.setEditable(false);
        txtNombres.setEditable(false);
        txtFechaNac.setEditable(false);
        cbSexo.setEnabled(false);
        cbEliminadoApp.setEnabled(false);
        txtTelefonoDomicilio.setEditable(false);
        txtTelefonoCelular.setEditable(false);
        txtTelefonoCelular1.setEditable(false);
        txtTelefonoTrabajo.setEditable(false);
        txtDireccionDomicilio.setEditable(false);
        cbDomicilioDepartamento.setEnabled(false);
        cbDomicilioProvincia.setEnabled(false);
        cbDomicilioDistrito.setEnabled(false);
        chkPublicidad.setEnabled(false);
//        txtDireccionTrabajo.setEditable(false);
//        cbTrabajoDepartamento.setEnabled(false);
//        cbTrabajoProvincia.setEnabled(false);
//        cbTrabajoDistrito.setEnabled(false);
        btnFecha.setEnabled(false);
        int tipoBusqueda = 0;
        if (cbFiltro.getSelectedItem() == "POR DNI") {
            tipoBusqueda = 1;
        } else if (cbFiltro.getSelectedItem() == "POR APELLIDO PATERNO") {
            tipoBusqueda = 2;
        } else if (cbFiltro.getSelectedItem() == "POR APELLIDO MATERNO") {
            tipoBusqueda = 3;
        } else if (cbFiltro.getSelectedItem() == "POR NOMBRES") {
            tipoBusqueda = 4;
        }
        PersonaBO p = PersonaBO.getInstance();
        List<Cliente> l = p.BuscarPersona(txtBusqueda.getText(), tipoBusqueda);
        DefaultTableModel modelo = (DefaultTableModel) tPersona.getModel();
        modelo = (DefaultTableModel) tPersona.getModel();
        modelo.setRowCount(l.size());
        int contador = 0;
        for (Cliente cli : l) {
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tPersona.setValueAt(cli.getIdCliente(), contador, 0);
            tPersona.setValueAt(contador + 1, contador, 1);
            tPersona.setValueAt(cli.getPnroDocumento(), contador, 2);
            tPersona.setValueAt(cli.getPapePat(), contador, 3);
            tPersona.setValueAt(cli.getPapeMat(), contador, 4);
            tPersona.setValueAt(cli.getPapePat() + " " + cli.getPapeMat() + " " + cli.getPnombre(), contador, 5);
            tPersona.setValueAt(cli.getPfechaNac(), contador, 6);
            tPersona.setValueAt(cli.getPsexo(), contador, 7);
            contador++;
        }
    }


    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarPersona();
        }
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Thread queryThread = new Thread() {
            public void run() {
                pbPersona.setIndeterminate(true);
                pbPersona.setStringPainted(true);
                pbPersona.setString("BUSCANDO PERSONA, POR FAVOR ESPERE");
                pbPersona.setValue(100);
                pbPersona.repaint();
                buscarPersona();
                pbPersona.setString("BUSQUEDA FINALIZADA");
                pbPersona.setStringPainted(false);
                pbPersona.setIndeterminate(false);
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnIngresarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarPersonaActionPerformed
        txtDNI.setEditable(true);
        txtApellidoPaterno.setEditable(true);
        txtApellidoMaterno.setEditable(true);
        txtNombres.setEditable(true);
        txtFechaNac.setEditable(true);
        txtEMail.setEditable(true);
        txtPassword.setEditable(true);
        cbSexo.setEnabled(true);
        cbEliminadoApp.setEnabled(true);
        txtTelefonoDomicilio.setEditable(true);
        txtTelefonoCelular.setEditable(true);
        txtTelefonoCelular1.setEditable(true);
        txtTelefonoTrabajo.setEditable(true);
        txtDireccionDomicilio.setEditable(true);
        cbDomicilioDepartamento.setEnabled(true);
        cbDomicilioProvincia.setEnabled(true);
        cbDomicilioDistrito.setEnabled(true);
        chkPublicidad.setEnabled(true);
//        txtDireccionTrabajo.setEditable(true);
//        cbTrabajoDepartamento.setEnabled(true);
//        cbTrabajoProvincia.setEnabled(true);
//        cbTrabajoDistrito.setEnabled(true);
        btnFecha.setEnabled(true);
        txtDNI.setText("");
        txtApellidoPaterno.setText("");
        txtApellidoMaterno.setText("");
        txtNombres.setText("");
        txtFechaNac.setText("1900-01-01");
        txtEMail.setText("");
        txtPassword.setText("");
        txtTelefonoDomicilio.setText("");
        txtTelefonoCelular.setText("");
        txtTelefonoCelular1.setText("");
        txtTelefonoTrabajo.setText("");
        txtDireccionDomicilio.setText("");
//        txtDireccionTrabajo.setText("");
        for (int i = 0; i < cbDomicilioDepartamento.getItemCount(); i++) {
            UbigeoDepartamento u = (UbigeoDepartamento) cbDomicilioDepartamento.getItemAt(i);
            if (u.getCodigoDepartamento().equals("00")) {
                cbDomicilioDepartamento.setSelectedItem(u);
            }
        }
        for (int i = 0; i < cbDomicilioProvincia.getItemCount(); i++) {
            UbigeoProvincia u = (UbigeoProvincia) cbDomicilioProvincia.getItemAt(i);
            if (u.getCodigoProvincia().equals("00")) {
                cbDomicilioProvincia.setSelectedItem(u);
            }
        }
        for (int i = 0; i < cbDomicilioDistrito.getItemCount(); i++) {
            UbigeoDistrito u = (UbigeoDistrito) cbDomicilioDistrito.getItemAt(i);
            if (u.getCodigoDistrito().equals("00")) {
                cbDomicilioDistrito.setSelectedItem(u);
            }
        }
        this.persona = new Cliente();
        if (this.accesoGuardar) {
            btnGuardar.setEnabled(true);
        } else {
            btnGuardar.setEnabled(false);
        }
    }//GEN-LAST:event_btnIngresarPersonaActionPerformed

    private static boolean esFechaValida(String fecha) {
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
            formatoFecha.setLenient(false);
            formatoFecha.parse(fecha);
        } catch (ParseException e) {
            return false;
        }
        return true;
    }


    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!txtDNI.getText().isEmpty() && !txtApellidoPaterno.getText().isEmpty()
                && !txtApellidoMaterno.getText().isEmpty()
                && !txtNombres.getText().isEmpty()) //                && !txtTelefonoDomicilio.getText().isEmpty() && !txtTelefonoCelular.getText().isEmpty()
        //                && !txtDireccionDomicilio.getText().isEmpty() && !txtTelefonoCelular1.getText().isEmpty()
        //                && !txtFechaNac.getText().isEmpty()
        //                && !txtTelefonoTrabajo.getText().isEmpty() && !txtDireccionTrabajo.getText().isEmpty())
        {

            if (txtDNI.getText().trim().length() != 8) {
                JOptionPane.showMessageDialog(this,
                        "El DNI debe tener 8 digitos", "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            try {
                Cliente c = this.persona;
                c.setPnroDocumento(txtDNI.getText().trim());
                c.setPapePat(txtApellidoPaterno.getText());
                c.setPnombre(txtNombres.getText());
                if (cbSexo.getSelectedItem() == "MASCULINO") {
                    c.setPsexo("M");
                } else {
                    c.setPsexo("F");
                }
                if (cbEliminadoApp.getSelectedItem() == "CREADO") {
                    c.setEliminadoApp("1");
                } else {
                    c.setEliminadoApp("0");
                }
                c.setPapeMat(txtApellidoMaterno.getText());
                c.setPtelefonoDomicilio(txtTelefonoDomicilio.getText());
                c.setPnombre(txtNombres.getText());
                c.setPtelefonoCelular(txtTelefonoCelular.getText());
                c.setPdireccionDomicilio(txtDireccionDomicilio.getText());
                c.setPtelefonoCelular1(txtTelefonoCelular1.getText());
//                c.setPdireccionTrabajo(txtDireccionTrabajo.getText());
                c.setPtelefonoTrabajo(txtTelefonoTrabajo.getText());
                c.setTipoCliente("P");
                SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                c.setPfechaNac(f.parse(txtFechaNac.getText()));
                c.setPemail(txtEMail.getText().trim());
                c.setCpasswd(txtPassword.getText().trim());
                c.setCdepDomicilio(((UbigeoDepartamento) cbDomicilioDepartamento.getSelectedItem()).getIdDepartamento());
                c.setCproDomicilio(((UbigeoProvincia) cbDomicilioProvincia.getSelectedItem()).getIdProvincia());
                c.setCdisDomicilio(((UbigeoDistrito) cbDomicilioDistrito.getSelectedItem()).getIdDistrito());
                c.setPublicidad(chkPublicidad.isSelected() ? "S" : "N");
                PersonaBO persona = PersonaBO.getInstance();
                if (c.getIdCliente() == 0) {
                    if (c.getCpasswd().isEmpty()) {
                        c.setCpasswd(c.getPapePat().replace(" ", "") + c.getPnroDocumento().substring(c.getPnroDocumento().length() - 3, c.getPnroDocumento().length()));
                    }
                    List<Cliente> l = persona.BuscarPersona(c.getPnroDocumento(), 1);
                    if (l.size() > 0) {
                        JOptionPane.showMessageDialog(this, "La persona ya existe", "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    persona.GuardarPersona(c);
                    JOptionPane.showMessageDialog(this, "Se inserto la Persona Correctamente", "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
//                    List<Cliente> l = persona.BuscarPersona(c.getPnroDocumento(), 1);
//                    for (Cliente cl : l) {
//                        if (cl.getIdCliente() != c.getIdCliente()) {
//                            JOptionPane.showMessageDialog(this, "La persona ya existe", "ERROR",
//                                    JOptionPane.ERROR_MESSAGE);
//                            return;
//                        }
//                    }
                    persona.ActualizarPersona(c);
                    JOptionPane.showMessageDialog(this, "Se actualizo la Persona Correctamente", "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                }
                txtDNI.setEditable(false);
                txtApellidoPaterno.setEditable(false);
                txtApellidoMaterno.setEditable(false);
                txtNombres.setEditable(false);
                txtFechaNac.setEditable(false);
                cbSexo.setEnabled(false);
                cbEliminadoApp.setEnabled(false);
                txtTelefonoDomicilio.setEditable(false);
                txtTelefonoCelular.setEditable(false);
                txtTelefonoCelular1.setEditable(false);
                txtTelefonoTrabajo.setEditable(false);
                txtDireccionDomicilio.setEditable(false);
                cbDomicilioDepartamento.setEnabled(false);
                cbDomicilioProvincia.setEnabled(false);
                cbDomicilioDistrito.setEnabled(false);
//                txtDireccionTrabajo.setEditable(false);
//                cbTrabajoDepartamento.setEnabled(false);
//                cbTrabajoProvincia.setEnabled(false);
//                cbTrabajoDistrito.setEnabled(false);
                btnFecha.setEnabled(false);
                txtDNI.setText("");
                txtApellidoPaterno.setText("");
                txtApellidoMaterno.setText("");
                txtNombres.setText("");
                txtFechaNac.setText("");
                txtTelefonoDomicilio.setText("");
                txtTelefonoCelular.setText("");
                txtTelefonoCelular1.setText("");
                txtTelefonoTrabajo.setText("");
                txtDireccionDomicilio.setText("");
//                txtDireccionTrabajo.setText("");
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Por favor llene todos los Campos", "ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDNIKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDNIKeyTyped

    private void tPersonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tPersonaMouseClicked
        if (evt.getClickCount() == 2) {
            int fila = tPersona.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tPersona.getModel();
            String id = String.valueOf(model.getValueAt(fila, 0));
            SeguridadBO sBO = SeguridadBO.getINSTANCE();
            PersonaBO p = PersonaBO.getInstance();
            this.persona = (Cliente) sBO.CargarObjeto("Cliente", Integer.valueOf(id));
            txtDNI.setText(this.persona.getPnroDocumento());
            txtApellidoPaterno.setText(this.persona.getPapePat());
            txtApellidoMaterno.setText(this.persona.getPapeMat());
            txtNombres.setText(this.persona.getPnombre());
            txtTelefonoDomicilio.setText(this.persona.getPtelefonoDomicilio());
            txtTelefonoCelular.setText(this.persona.getPtelefonoCelular());
            txtTelefonoCelular1.setText(this.persona.getPtelefonoCelular1());
            txtTelefonoTrabajo.setText(this.persona.getPtelefonoTrabajo());
            txtDireccionDomicilio.setText(this.persona.getPdireccionDomicilio());
//            txtDireccionTrabajo.setText(this.persona.getPdireccionTrabajo());
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            if (this.persona.getPfechaNac() != null) {
                txtFechaNac.setText(f.format(this.persona.getPfechaNac()));
            } else {
                txtFechaNac.setText("1900-01-01");
            }
            if (this.persona.getPemail() != null) {
                txtEMail.setText(this.persona.getPemail());
            } else {
                txtEMail.setText("");
            }
            if (this.persona.getCpasswd() != null) {
                txtPassword.setText(this.persona.getCpasswd());
            } else {
                txtPassword.setText("");
            }
            if (this.persona.getPsexo() != null) {
                if (this.persona.getPsexo().equals("M")) {
                    cbSexo.setSelectedItem("MASCULINO");
                } else {
                    cbSexo.setSelectedItem("FEMENINO");
                }
            }
            if (this.persona.getEliminadoApp() != null) {
                if (this.persona.getEliminadoApp().equals("1")) {
                    cbEliminadoApp.setSelectedItem("CREADO");
                } else {
                    cbEliminadoApp.setSelectedItem("ELIMINADO");
                }
            } else {
                cbEliminadoApp.setSelectedItem("ELIMINADO");
            }
            chkPublicidad.setSelected(!Objects.isNull(this.persona.getPublicidad()) ? (this.persona.getPublicidad().equals("S") ? true : false) : false);
            txtDNI.setEditable(true);
            txtApellidoPaterno.setEditable(true);
            txtApellidoMaterno.setEditable(true);
            txtNombres.setEditable(true);
            txtFechaNac.setEditable(true);
            cbSexo.setEnabled(true);
            cbEliminadoApp.setEnabled(true);
            txtTelefonoDomicilio.setEditable(true);
            txtTelefonoCelular.setEditable(true);
            txtTelefonoCelular1.setEditable(true);
            txtTelefonoTrabajo.setEditable(true);
            txtDireccionDomicilio.setEditable(true);
            cbDomicilioDepartamento.setEnabled(true);
            cbDomicilioProvincia.setEnabled(true);
            cbDomicilioDistrito.setEnabled(true);
            chkPublicidad.setEnabled(true);
//            txtDireccionTrabajo.setEditable(true);
//            cbTrabajoDepartamento.setEnabled(true);
//            cbTrabajoProvincia.setEnabled(true);
//            cbTrabajoDistrito.setEnabled(true);
            btnFecha.setEnabled(true);
            if (this.persona.getCdepDomicilio() != null) {
                for (int i = 0; i < cbDomicilioDepartamento.getItemCount(); i++) {
                    UbigeoDepartamento u = (UbigeoDepartamento) cbDomicilioDepartamento.getItemAt(i);
                    if (u.getIdDepartamento() == this.persona.getCdepDomicilio()) {
                        cbDomicilioDepartamento.setSelectedItem(u);
                    }
                }
            } else {
                for (int i = 0; i < cbDomicilioDepartamento.getItemCount(); i++) {
                    UbigeoDepartamento u = (UbigeoDepartamento) cbDomicilioDepartamento.getItemAt(i);
                    if (u.getCodigoDepartamento().equals("00")) {
                        cbDomicilioDepartamento.setSelectedItem(u);
                    }
                }
            }
            if (this.persona.getCproDomicilio() != null) {
                for (int i = 0; i < cbDomicilioProvincia.getItemCount(); i++) {
                    UbigeoProvincia u = (UbigeoProvincia) cbDomicilioProvincia.getItemAt(i);
                    if (u.getIdProvincia() == this.persona.getCproDomicilio()) {
                        cbDomicilioProvincia.setSelectedItem(u);
                    }
                }
            } else {
                for (int i = 0; i < cbDomicilioProvincia.getItemCount(); i++) {
                    UbigeoProvincia u = (UbigeoProvincia) cbDomicilioProvincia.getItemAt(i);
                    if (u.getCodigoProvincia().equals("00")) {
                        cbDomicilioProvincia.setSelectedItem(u);
                    }
                }
            }
            if (this.persona.getCdisDomicilio() != null) {
                for (int i = 0; i < cbDomicilioDistrito.getItemCount(); i++) {
                    UbigeoDistrito u = (UbigeoDistrito) cbDomicilioDistrito.getItemAt(i);
                    if (u.getIdDistrito() == this.persona.getCdisDomicilio()) {
                        cbDomicilioDistrito.setSelectedItem(u);
                    }
                }
            } else {
                for (int i = 0; i < cbDomicilioDistrito.getItemCount(); i++) {
                    UbigeoDistrito u = (UbigeoDistrito) cbDomicilioDistrito.getItemAt(i);
                    if (u.getCodigoDistrito().equals("00")) {
                        cbDomicilioDistrito.setSelectedItem(u);
                    }
                }
            }
            if (this.accesoGuardar) {
                btnGuardar.setEnabled(true);
            } else {
                btnGuardar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tPersonaMouseClicked

    private void btnFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechaActionPerformed
        DatePicker dtp = new DatePicker(this);
        txtFechaNac.setText(dtp.setPickedDate());
    }//GEN-LAST:event_btnFechaActionPerformed

    private void cbDomicilioDepartamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDomicilioDepartamentoItemStateChanged
        PersonaBO pBO = PersonaBO.getInstance();
        if (cbDomicilioDepartamento.getSelectedIndex() >= -1) {
            cbDomicilioProvincia.removeAllItems();
            final int idDepartamento = lUbigeoDepartamento.get(cbDomicilioDepartamento.getSelectedIndex())
                    .getIdDepartamento();
            List<UbigeoProvincia> list = pBO.ObtenerPersonaUbigeoProvincia(idDepartamento);
            for (UbigeoProvincia u : list) {
                cbDomicilioProvincia.addItem(u);
            }
        }
    }//GEN-LAST:event_cbDomicilioDepartamentoItemStateChanged

    private void cbDomicilioProvinciaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDomicilioProvinciaItemStateChanged
        PersonaBO pBO = PersonaBO.getInstance();
        int idProvincia = 0;

        if (cbDomicilioProvincia.getSelectedIndex() > -1) {
            cbDomicilioDistrito.removeAllItems();
            lUbigeoProvincias = (List<UbigeoProvincia>) pBO.ObtenerPersonaUbigeoProvincia(lUbigeoDepartamento.
                    get(cbDomicilioDepartamento.getSelectedIndex()).getIdDepartamento());
            //distrito
            idProvincia = lUbigeoProvincias.get(cbDomicilioProvincia.getSelectedIndex()).getIdProvincia();

            List<UbigeoDistrito> list = pBO.ObtenerPersonaUbigeoDistrito(idProvincia);

            for (UbigeoDistrito u : list) {
                cbDomicilioDistrito.addItem(u);

                //cbDepartamentoDomicilio.addItem(udep.getNombreDepartamento());
            }
        }
    }//GEN-LAST:event_cbDomicilioProvinciaItemStateChanged

    private void txtDNIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDNIKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtDNI.getText().isEmpty()) {
                txtApellidoPaterno.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER EL DNI",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtDNIKeyPressed

    private void txtApellidoPaternoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoPaternoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtApellidoPaterno.getText().isEmpty()) {
                txtApellidoMaterno.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER EL APELLIDO PATERNO",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtApellidoPaternoKeyPressed

    private void txtApellidoMaternoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoMaternoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtApellidoMaterno.getText().isEmpty()) {
                txtNombres.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER EL APELLIDO MATERNO",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtApellidoMaternoKeyPressed

    private void txtNombresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (!txtNombres.getText().isEmpty()) {
                btnGuardar.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this,
                        "DEBE PONER EL NOMBRE",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtNombresKeyPressed

    private void cbDomicilioDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDomicilioDepartamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDomicilioDepartamentoActionPerformed

    public void setearDatos(String codigo, String fecha) {
        try {
            SimpleDateFormat formatoDeFecha = new SimpleDateFormat("yyyy-MM-dd");
            this.error = false;
            this.persona.setCcodigoCole(codigo);
            this.persona.setCfechaAfiliacion(!fecha.trim().isEmpty() ? formatoDeFecha.parse(fecha.trim()) : formatoDeFecha.parse("1900-01-01"));
        } catch (Exception e) {
            this.error = true;
        }
    }


    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        if (this.persona.getIdCliente() > 0) {
            int opcion = JOptionPane.showConfirmDialog(null, "Â¿ Desea pasar a colegiado a la persona ?");
            if (opcion == JOptionPane.YES_OPTION) {
                frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
                f.AbrirFormularioPersonaDatosContador(this.persona, this);
                if (this.error) {
                    JOptionPane.showMessageDialog(this, "Ocurrio un error", "ERROR", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                this.persona.setTipoCliente("C");
                this.persona.setEstado("H");
                PersonaBO pBO = PersonaBO.getInstance();
                pBO.ActualizarPersona(this.persona);
                JOptionPane.showMessageDialog(this, "Se paso el estado a colegiado", "OK",
                        JOptionPane.INFORMATION_MESSAGE);
                txtDNI.setEditable(false);
                txtApellidoPaterno.setEditable(false);
                txtApellidoMaterno.setEditable(false);
                txtNombres.setEditable(false);
                txtFechaNac.setEditable(false);
                cbSexo.setEnabled(false);
                cbEliminadoApp.setEnabled(false);
                txtTelefonoDomicilio.setEditable(false);
                txtTelefonoCelular.setEditable(false);
                txtTelefonoCelular1.setEditable(false);
                txtTelefonoTrabajo.setEditable(false);
                txtDireccionDomicilio.setEditable(false);
                cbDomicilioDepartamento.setEnabled(false);
                cbDomicilioProvincia.setEnabled(false);
                cbDomicilioDistrito.setEnabled(false);
                chkPublicidad.setEnabled(false);
                btnFecha.setEnabled(false);
                txtDNI.setText("");
                txtApellidoPaterno.setText("");
                txtApellidoMaterno.setText("");
                txtNombres.setText("");
                txtFechaNac.setText("");
                txtTelefonoDomicilio.setText("");
                txtTelefonoCelular.setText("");
                txtTelefonoCelular1.setText("");
                txtTelefonoTrabajo.setText("");
                txtDireccionDomicilio.setText("");
                this.btnBuscarActionPerformed(null);
            }
        }
    }//GEN-LAST:event_btnGuardar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnFecha;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JToggleButton btnIngresarPersona;
    private javax.swing.JComboBox cbDomicilioDepartamento;
    private javax.swing.JComboBox cbDomicilioDistrito;
    private javax.swing.JComboBox cbDomicilioProvincia;
    private javax.swing.JComboBox cbEliminadoApp;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JComboBox cbSexo;
    private javax.swing.JCheckBox chkPublicidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pbPersona;
    private javax.swing.JTable tPersona;
    private javax.swing.JTextField txtApellidoMaterno;
    private javax.swing.JTextField txtApellidoPaterno;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtDireccionDomicilio;
    private javax.swing.JTextField txtEMail;
    private javax.swing.JFormattedTextField txtFechaNac;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtTelefonoCelular;
    private javax.swing.JTextField txtTelefonoCelular1;
    private javax.swing.JTextField txtTelefonoDomicilio;
    private javax.swing.JTextField txtTelefonoTrabajo;
    // End of variables declaration//GEN-END:variables
}
