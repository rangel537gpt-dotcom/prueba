/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.administracion;

import caja.bo.PersonaBO;
import caja.mapeo.entidades.Cliente;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author user
 */
public class dSeleccionarPersona extends javax.swing.JDialog {

    private Object frm;
    private int tipoCarga;

    /**
     * Creates new form dSeleccionarPersona
     */
    public dSeleccionarPersona(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        TableColumn columna = tPersona.getColumn("OBJ");
        columna.setMaxWidth(0);
        columna.setMinWidth(0);
        columna.setPreferredWidth(0);
        columna = tPersona.getColumn("NRO");
        columna.setPreferredWidth(10);
        columna = tPersona.getColumn("ID");
        columna.setMaxWidth(0);
        columna.setMinWidth(0);
        columna.setPreferredWidth(0);
        columna = tPersona.getColumn("DNI");
        columna.setPreferredWidth(20);
        columna = tPersona.getColumn("APELLIDO PATERNO");
        columna.setPreferredWidth(100);
        columna = tPersona.getColumn("APELLIDO MATERNO");
        columna.setPreferredWidth(100);
        columna = tPersona.getColumn("NOMBRES");
        columna.setPreferredWidth(150);
        columna = tPersona.getColumn("FECHA NACIMIENTO");
        columna.setPreferredWidth(80);
        columna = tPersona.getColumn("SEXO");
        columna.setPreferredWidth(30);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        cbFiltro = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tPersona = new javax.swing.JTable();
        pbPersona = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("BÃšSQUEDA:");

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "POR DNI", "POR APELLIDO PATERNO", "POR APELLIDO MATERNO", "POR NOMBRES" }));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar5.png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tPersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NRO", "DNI", "APELLIDO PATERNO", "APELLIDO MATERNO", "NOMBRES", "FECHA NACIMIENTO", "SEXO", "OBJ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tPersona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tPersonaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tPersona);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pbPersona, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbFiltro)
                        .addComponent(btnBuscar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pbPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void CargarDatos(Object f, int tc) {
        this.frm = f;
        this.tipoCarga = tc;
    }

    private void buscarPersona() {

//        txtDNI.setEditable(false);
//        txtApellidoPaterno.setEditable(false);
//        txtApellidoMaterno.setEditable(false);
//        txtNombres.setEditable(false);
//        txtFechaNac.setEditable(false);
//        cbSexo.setEnabled(false);
//        txtTelefonoDomicilio.setEditable(false);
//        txtTelefonoCelular.setEditable(false);
//        txtTelefonoCelular1.setEditable(false);
//        txtTelefonoTrabajo.setEditable(false);
//        txtDireccionDomicilio.setEditable(false);
//        cbDomicilioDepartamento.setEnabled(false);
//        cbDomicilioProvincia.setEnabled(false);
//        cbDomicilioDistrito.setEnabled(false);
//        txtDireccionTrabajo.setEditable(false);
//        cbTrabajoDepartamento.setEnabled(false);
//        cbTrabajoProvincia.setEnabled(false);
//        cbTrabajoDistrito.setEnabled(false);
//
//        btnFecha.setEnabled(false);
        int tipoBusqueda = 0;
        if (cbFiltro.getSelectedItem() == "POR DNI") {
            tipoBusqueda = 1;
        } else if (cbFiltro.getSelectedItem() == "POR APELLIDO PATERNO") {
            tipoBusqueda = 2;
        } else if (cbFiltro.getSelectedItem() == "POR APELLIDO MATERNO") {
            tipoBusqueda = 3;
        } else if (cbFiltro.getSelectedItem() == "POR NOMBRES") {
            tipoBusqueda = 4;
        }

        PersonaBO p = PersonaBO.getInstance();
        List<Cliente> l = p.BuscarPersona(txtBusqueda.getText(), tipoBusqueda);
        DefaultTableModel modelo = (DefaultTableModel) tPersona.getModel();
        modelo = (DefaultTableModel) tPersona.getModel();
        modelo.setRowCount(l.size());
        int contador = 0;
        for (Cliente cli : l) {
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tPersona.setValueAt(cli.getIdCliente(), contador, 0);
            tPersona.setValueAt(contador + 1, contador, 1);
            tPersona.setValueAt(cli.getPnroDocumento(), contador, 2);
            tPersona.setValueAt(cli.getPapePat(), contador, 3);
            tPersona.setValueAt(cli.getPapeMat(), contador, 4);
            tPersona.setValueAt(cli.getPnombre(), contador, 5);
            tPersona.setValueAt(cli.getPfechaNac(), contador, 6);
            tPersona.setValueAt(cli.getPsexo(), contador, 7);
            tPersona.setValueAt(cli, contador, 8);
            contador++;
        }
    }


    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarPersona();
        }
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Thread queryThread = new Thread() {
            public void run() {

                pbPersona.setIndeterminate(true);
                pbPersona.setStringPainted(true);
                pbPersona.setString("BUSCANDO PERSONA, POR FAVOR ESPERE");
                pbPersona.setValue(10);
                pbPersona.repaint();
                buscarPersona();
                pbPersona.setString("BUSQUEDA FINALIZADA");
                pbPersona.setStringPainted(false);
                pbPersona.setIndeterminate(false);

            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tPersonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tPersonaMouseClicked
        if (evt.getClickCount() == 2) {

//            btnGuardar.setEnabled(false);
            int fila = tPersona.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tPersona.getModel();

            Cliente cliente = (Cliente) model.getValueAt(fila, 8);
            if (this.tipoCarga == 1) {
                ((frmUsuarios)this.frm).AgregarCliente(cliente);
                this.dispose();
            }
//            PersonaBO p = PersonaBO.getInstance();
            //            Cliente cli = c.ObtenerContador(dni);
//            cliActual = p.ObtenerPersona(dni);
//
//            txtDNI.setText(cliActual.getPnroDocumento());
//
//            txtApellidoPaterno.setText(cliActual.getPapePat());
//            txtApellidoMaterno.setText(cliActual.getPapeMat());
//            //            SimpleDateFormat formatoDeFecha = new SimpleDateFormat("yyyy-MM-dd");
//            //            txtFechaNac.setText(formatoDeFecha.format(cliActual.getPfechaNac()));
//
//            txtNombres.setText(cliActual.getPnombre());
//            txtTelefonoDomicilio.setText(cliActual.getPtelefonoDomicilio());
//            txtTelefonoCelular.setText(cliActual.getPtelefonoCelular());
//            txtTelefonoCelular1.setText(cliActual.getPtelefonoCelular1());
//            txtTelefonoTrabajo.setText(cliActual.getPtelefonoTrabajo());
//
//            txtDireccionDomicilio.setText(cliActual.getPdireccionDomicilio());
//            txtDireccionTrabajo.setText(cliActual.getPdireccionTrabajo());
//
//            txtDNI.setEditable(true);
//            txtApellidoPaterno.setEditable(true);
//            txtApellidoMaterno.setEditable(true);
//            txtNombres.setEditable(true);
//            txtFechaNac.setEditable(true);
//            cbSexo.setEnabled(true);
//            txtTelefonoDomicilio.setEditable(true);
//            txtTelefonoCelular.setEditable(true);
//            txtTelefonoCelular1.setEditable(true);
//            txtTelefonoTrabajo.setEditable(true);
//            txtDireccionDomicilio.setEditable(true);
//            cbDomicilioDepartamento.setEnabled(true);
//            cbDomicilioProvincia.setEnabled(true);
//            cbDomicilioDistrito.setEnabled(true);
//            txtDireccionTrabajo.setEditable(true);
//            cbTrabajoDepartamento.setEnabled(true);
//            cbTrabajoProvincia.setEnabled(true);
//            cbTrabajoDistrito.setEnabled(true);
//
//            btnFecha.setEnabled(true);

        }
    }//GEN-LAST:event_tPersonaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dSeleccionarPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dSeleccionarPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dSeleccionarPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dSeleccionarPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dSeleccionarPersona dialog = new dSeleccionarPersona(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pbPersona;
    private javax.swing.JTable tPersona;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
