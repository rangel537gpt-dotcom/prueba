/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.administracion;

//import caja.bo.SeguridadBO;
import caja.bo.SeguridadBO;
import caja.bo.UsuarioBO;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.Usuario;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
//import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author juan carlos
 */
public class frmUsuarios extends javax.swing.JInternalFrame {

    private Usuario usuario;

    /**
     * Creates new form frmUsuarios
     */
    public frmUsuarios() {
        initComponents();

        TableColumn columna = tUsuario.getColumn("NRO");
        columna.setMaxWidth(40);
        columna.setMinWidth(40);
        columna.setPreferredWidth(40);
        columna = tUsuario.getColumn("ID");
        columna.setMaxWidth(0);
        columna.setMinWidth(0);
        columna.setPreferredWidth(0);
        columna = tUsuario.getColumn("LOGIN");
        columna.setPreferredWidth(60);
        columna = tUsuario.getColumn("ROL");
        columna.setPreferredWidth(10);
        columna = tUsuario.getColumn("MAC");
        columna.setPreferredWidth(100);

        cbRol.setEnabled(false);
        txtMac.setEditable(false);
        txtNombreUsuario.setEditable(false);
        txtContrasena.setEditable(false);
        UsuarioBO uBO = UsuarioBO.getInstance();
        List listado = uBO.ObtenerTodosRoles();
        for (Object o : listado) {
            String nombre = (String) o;
            cbRol.addItem(nombre);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        cbFiltro = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        btnNuevoUsuario = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tUsuario = new javax.swing.JTable();
        pbCargando = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMac = new javax.swing.JTextField();
        txtNombreUsuario = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        txtContrasena = new javax.swing.JPasswordField();
        cbRol = new javax.swing.JComboBox<>();
        txtNombrePersona = new javax.swing.JTextField();
        btnSeleccionarPersona = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Usuarios del SIstema");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N

        jLabel2.setText("BÚSQUEDA:");

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "POR USUARIO", "POR ROL", "POR MAC" }));

        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnNuevoUsuario.setText("NUEVO USUARIO");
        btnNuevoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoUsuarioActionPerformed(evt);
            }
        });

        tUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NRO", "LOGIN", "ROL", "MAC"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tUsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tUsuario);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Usuario"));

        jLabel3.setText("Rol del Usuario:");

        jLabel4.setText("Nombre del Usuario:");

        jLabel5.setText("Dirección MAC:");

        jLabel6.setText("Contraseña:");

        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        txtNombrePersona.setEditable(false);
        txtNombrePersona.setToolTipText("");

        btnSeleccionarPersona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/addUser_mini.png"))); // NOI18N
        btnSeleccionarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarPersonaActionPerformed(evt);
            }
        });

        jButton1.setText("ASIGNAR COMPROBANTES");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtNombrePersona)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSeleccionarPersona))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbRol, 0, 153, Short.MAX_VALUE)
                            .addComponent(txtNombreUsuario))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMac, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSeleccionarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtNombrePersona))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(txtMac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar)))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNuevoUsuario))
                    .addComponent(pbCargando, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnNuevoUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pbCargando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarUsuarios() {
        cbRol.setEnabled(false);
        txtMac.setEditable(false);
        txtNombreUsuario.setEditable(false);
        txtContrasena.setEditable(false);
        btnGuardar.setEnabled(false);
        btnEliminar.setEnabled(false);
        int tipoBusqueda = 0;
        if (cbFiltro.getSelectedItem() == "POR USUARIO") {
            tipoBusqueda = 1;
        } else if (cbFiltro.getSelectedItem() == "POR ROL") {
            tipoBusqueda = 2;
        } else if (cbFiltro.getSelectedItem() == "POR MAC") {
            tipoBusqueda = 3;
        }
        UsuarioBO u = UsuarioBO.getInstance();
        List<Usuario> l = u.BuscarUsuario(txtBusqueda.getText(), tipoBusqueda);
        DefaultTableModel modelo = (DefaultTableModel) tUsuario.getModel();
        modelo = (DefaultTableModel) tUsuario.getModel();
        modelo.setRowCount(l.size());
        int contador = 0;
        for (Usuario usuario : l) {
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tUsuario.setValueAt(usuario, contador, 0);
            tUsuario.setValueAt(contador + 1, contador, 1);
            tUsuario.setValueAt(usuario.getLogin(), contador, 2);
            tUsuario.setValueAt(usuario.getRolUsuario(), contador, 3);
            tUsuario.setValueAt(usuario.getMac(), contador, 4);
            contador++;
        }
    }

    public void AgregarCliente(Cliente c) {
        this.usuario.setCliente(c);
        txtNombrePersona.setText(c.getPapePat() + " " + c.getPapeMat() + " " + c.getPnombre());
    }


    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarUsuarios();
        }
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Thread queryThread = new Thread() {
            public void run() {
                pbCargando.setIndeterminate(true);
                pbCargando.setStringPainted(true);
                pbCargando.setString("BUSCANDO USUARIO, POR FAVOR ESPERE");
                pbCargando.setValue(100);
                pbCargando.repaint();
                buscarUsuarios();
                pbCargando.setString("BUSQUEDA FINALIZADA");
                pbCargando.setStringPainted(false);
                pbCargando.setIndeterminate(false);
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnNuevoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoUsuarioActionPerformed
        btnGuardar.setEnabled(true);
        btnEliminar.setEnabled(false);
        cbRol.setEnabled(true);
        txtMac.setEditable(true);
        txtNombreUsuario.setEditable(true);
        txtContrasena.setEditable(true);
        txtMac.setText("");
        txtNombreUsuario.setText("");
        txtContrasena.setText("");
        txtNombrePersona.setText("");
        this.usuario = new Usuario();
    }//GEN-LAST:event_btnNuevoUsuarioActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!txtMac.getText().isEmpty() && !txtNombreUsuario.getText().isEmpty()
                && !txtContrasena.getText().isEmpty()) {
            try {
                this.usuario.setRolUsuario(cbRol.getSelectedItem().toString());
                this.usuario.setMac(txtMac.getText());
                this.usuario.setLogin(txtNombreUsuario.getText());
//                u.setClave(txtContrasena.getText());
                byte[] pass = this.ObtenerContrasena();
                if (pass == null) {
                    return;
                }
                this.usuario.setPassword(pass);
                if (this.usuario.getCliente() == null) {
                    JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UNA PERSONA", "ERROR", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (this.usuario.getIdUsuario() == 0) {
                    UsuarioBO usuario = UsuarioBO.getInstance();
                    usuario.GuardarUsuario(this.usuario, txtMac.getText());
                } else {
                    UsuarioBO usuario = UsuarioBO.getInstance();
                    usuario.ActualizarUsuario(this.usuario, txtMac.getText());
                }
                cbRol.setEnabled(false);
                txtMac.setEditable(false);
                txtNombreUsuario.setEditable(false);
                txtContrasena.setEditable(false);

//                txtRol.setText("");
                txtMac.setText("");
                txtNombreUsuario.setText("");
                txtContrasena.setText("");
                txtNombrePersona.setText("");

                JOptionPane.showMessageDialog(this, "Se inserto el Usuario Correctamente", "OK",
                        JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Por favor llene todos los Campos", "ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tUsuarioMouseClicked
        if (evt.getClickCount() == 2) {
            btnGuardar.setEnabled(false);

            int fila = tUsuario.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tUsuario.getModel();
            this.usuario = (Usuario) model.getValueAt(fila, 0);
            SeguridadBO sBO = SeguridadBO.getINSTANCE();
            Cliente cliente = (Cliente) sBO.CargarObjeto("Cliente", this.usuario.getCliente().getIdCliente());
            this.usuario.setCliente(cliente);
            btnGuardar.setEnabled(true);
            cbRol.setSelectedItem(this.usuario.getRolUsuario());
            txtMac.setText(this.usuario.getMac());
            txtNombreUsuario.setText(this.usuario.getLogin());
            txtContrasena.setText(this.usuario.getClave());
            cbRol.setEnabled(true);
            txtMac.setEditable(true);
            txtNombreUsuario.setEditable(true);
            txtContrasena.setEditable(true);
            txtNombrePersona.setText(this.usuario.getCliente().getPapePat() + " " + this.usuario.getCliente().getPapeMat() + " " + this.usuario.getCliente().getPnombre());
        }
    }//GEN-LAST:event_tUsuarioMouseClicked

    private byte[] ObtenerContrasena() {
        try {
            if (txtContrasena.getPassword().length >= 7) {
                MessageDigest md = null;
                md = MessageDigest.getInstance("SHA-512");
                ArrayList<Byte> list = new ArrayList();
                for (int i = 0; i < txtContrasena.getPassword().length; i++) {
                    byte b = (byte) txtContrasena.getPassword()[i];
                    list.add(b);
                }
                byte[] inputInByte = new byte[list.size()];
                for (int i = 0; i < list.size(); i++) {
                    inputInByte[i] = list.get(i);
                }
                md.update(inputInByte);
                byte byteClave[] = md.digest();
                return byteClave;
//                SeguridadBO sBO = SeguridadBO.getInstance();
//                boolean seCambio = sBO.CambiarContrasena(byteClave);
//                if (seCambio) {
//                    JOptionPane.showMessageDialog(this,
//                            "SE CAMBIÓ LA CONTRASEÑA CORRECTAMENTE",
//                            "OK",
//                            JOptionPane.INFORMATION_MESSAGE);
//                    dispose();
//                } else {
//                    JOptionPane.showMessageDialog(this,
//                            "HUBO PROBLEMAS, NO SE PUDO CAMBIAR CONTRASEÑA",
//                            "OK",
//                            JOptionPane.ERROR_MESSAGE);
//                }
            } else {
                JOptionPane.showMessageDialog(this,
                        "LA CONTRASEÑA TIENE QUE TENER AL MENOS 7 CARACTERES",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return null;
            }
        } catch (NoSuchAlgorithmException e) {
            return null;
        }
    }


    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!txtMac.getText().isEmpty() && !txtNombreUsuario.getText().isEmpty()
                && !txtContrasena.getText().isEmpty()) {
            int fila = tUsuario.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tUsuario.getModel();
            String nro = String.valueOf(model.getValueAt(fila, 1));

            try {
                if (this.usuario == null) {
                    JOptionPane.showMessageDialog(this, "Debes seleccionar un usuario", "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                this.usuario.setRolUsuario(cbRol.getSelectedItem().toString());
                this.usuario.setMac(txtMac.getText());
                this.usuario.setLogin(txtNombreUsuario.getText());
                this.usuario.setClave(txtContrasena.getText());
                UsuarioBO u = UsuarioBO.getInstance();
                u.EliminarUsuario(this.usuario, txtMac.getText());
                cbRol.setEnabled(false);
                txtMac.setEditable(false);
                txtNombreUsuario.setEditable(false);
                txtContrasena.setEditable(false);
//                txtRol.setText("");
                txtMac.setText("");
                txtNombreUsuario.setText("");
                txtContrasena.setText("");

                JOptionPane.showMessageDialog(this, "Se eliminó el Usuario Correctamente", "OK",
                        JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(this, "No se pudo eliminar el Usuario", "ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSeleccionarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarPersonaActionPerformed
        frmPrincipal fPrin = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        fPrin.AbrirFormularioSeleccionarPersona(this, 1);
    }//GEN-LAST:event_btnSeleccionarPersonaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.usuario.getIdUsuario() > 0) {
            frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
            f.abrirFormularioAsignarTipoDocumentoSerieUsuario(this.usuario.getIdUsuario());
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevoUsuario;
    private javax.swing.JButton btnSeleccionarPersona;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JComboBox<String> cbRol;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pbCargando;
    private javax.swing.JTable tUsuario;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JTextField txtMac;
    private javax.swing.JTextField txtNombrePersona;
    private javax.swing.JTextField txtNombreUsuario;
    // End of variables declaration//GEN-END:variables
}
