/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.administracion;

import caja.bo.DocumentoPagoBO;
import caja.bo.UsuarioBO;
import caja.mapeo.entidades.Serie;
import caja.mapeo.entidades.TipoDocPago;
import caja.mapeo.entidades.TipoDocSerie;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author user
 */
public class frmAsignarTipoDocumentoSerieUsuario extends javax.swing.JDialog {

    private int idUsuario;

    /**
     * Creates new form frmAsignarTipoDocumentoSerieUsuario
     */
    public frmAsignarTipoDocumentoSerieUsuario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        List<TipoDocPago> lTipoDocPago = dpBO.ObtenerTodosTipoDocPago();
        for (TipoDocPago td : lTipoDocPago) {
            cbTipoComprobante.addItem(td);
        }

        TableColumn columna = tTipoDocumentoSerie.getColumn("OBJ");
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setPreferredWidth(0);
        columna = tTipoDocumentoSerie.getColumn("NRO");
        columna.setMinWidth(40);
        columna.setMaxWidth(40);
        columna.setPreferredWidth(40);
    }

    public void CargarDatos(int idUsuario) {
        this.idUsuario = idUsuario;
        UsuarioBO uBO = UsuarioBO.getInstance();
        List<Object> l = uBO.ObtenerTodosTipoDocumentoSerie_Asignados(idUsuario);
        DefaultTableModel modelo = (DefaultTableModel) tTipoDocumentoSerie.getModel();
        modelo.setRowCount(l.size());
        int contador = 0;
        for (Object cp : l) {
            Object[] obj = (Object[]) cp;
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tTipoDocumentoSerie.setValueAt(obj[0], contador, 0);
            tTipoDocumentoSerie.setValueAt(contador + 1, contador, 1);
            tTipoDocumentoSerie.setValueAt(obj[1], contador, 2);
            tTipoDocumentoSerie.setValueAt(obj[2], contador, 3);
            contador++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tTipoDocumentoSerie = new javax.swing.JTable();
        cbTipoComprobante = new javax.swing.JComboBox();
        cbSerie = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tTipoDocumentoSerie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OBJ", "NRO", "TIPO DOC", "SERIE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tTipoDocumentoSerie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tTipoDocumentoSerieKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tTipoDocumentoSerie);

        cbTipoComprobante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoComprobanteActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/guardar_mini.png"))); // NOI18N
        jButton1.setText("GUARDAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbTipoComprobante, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbTipoComprobanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoComprobanteActionPerformed
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        TipoDocPago td = (TipoDocPago) cbTipoComprobante.getSelectedItem();
        List<Serie> l = dpBO.ObtenerTodasSeries_SegunTipoDocumento(td.getIdTipoDocPago());
        cbSerie.removeAllItems();
        for (Serie s : l) {
            cbSerie.addItem(s);
        }
    }//GEN-LAST:event_cbTipoComprobanteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        UsuarioBO uBO = UsuarioBO.getInstance();
        TipoDocPago td = (TipoDocPago) cbTipoComprobante.getSelectedItem();
//        Serie s = (Serie) cbSerie.getSelectedItem();
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        TipoDocSerie tds = dpBO.ObtenerTipoDocSerie(td.getIdTipoDocPago(), cbSerie.getSelectedItem().toString());
        DefaultTableModel modelo = (DefaultTableModel) tTipoDocumentoSerie.getModel();
        if (tds != null) {
            int id = uBO.guardarTipoDocumentoSerieUsuario(this.idUsuario, tds.getId());
//            modelo.setNumRows(contador);
            modelo.addRow(new Object[modelo.getRowCount()]);
            int contador = modelo.getRowCount() - 1;
            tTipoDocumentoSerie.setValueAt(id, contador, 0);
            tTipoDocumentoSerie.setValueAt(contador + 1, contador, 1);
            tTipoDocumentoSerie.setValueAt(td.getNombreDocPago(), contador, 2);
            tTipoDocumentoSerie.setValueAt(cbSerie.getSelectedItem().toString(), contador, 3);
            contador++;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tTipoDocumentoSerieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tTipoDocumentoSerieKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            int fila = tTipoDocumentoSerie.getSelectedRow();
            if (fila >= 0) {
                DefaultTableModel model = (DefaultTableModel) tTipoDocumentoSerie.getModel();
                int id = Integer.valueOf(model.getValueAt(fila, 0).toString());
                if (id > 0) {
                    UsuarioBO uBO = UsuarioBO.getInstance();
                    uBO.eliminarTipoDocumentoSerieUsuario(id);
                }
                model.removeRow(fila);
            }
        }
    }//GEN-LAST:event_tTipoDocumentoSerieKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAsignarTipoDocumentoSerieUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAsignarTipoDocumentoSerieUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAsignarTipoDocumentoSerieUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAsignarTipoDocumentoSerieUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmAsignarTipoDocumentoSerieUsuario dialog = new frmAsignarTipoDocumentoSerieUsuario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbSerie;
    private javax.swing.JComboBox cbTipoComprobante;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tTipoDocumentoSerie;
    // End of variables declaration//GEN-END:variables
}
