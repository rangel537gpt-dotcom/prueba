/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.administracion;

import caja.bo.CobradorBO;
import caja.bo.PersonaBO;
import caja.bo.SeguridadBO;
import caja.bo.soloMayusculas;
import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.Cobrador;
import caja.mapeo.entidades.UbigeoDepartamento;
import caja.mapeo.entidades.UbigeoDistrito;
import caja.mapeo.entidades.UbigeoProvincia;
import java.awt.event.KeyEvent;
//import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
//import units.DatePicker;
//import units.DatePicker;

/**
 *
 * @author juan carlos
 */
public class frmCobrador extends javax.swing.JInternalFrame {

//    private Cliente cliActual;
    private Cobrador cobrador = new Cobrador();

    private List<UbigeoDepartamento> lUbigeoDepartamento;
    List<UbigeoProvincia> lUbigeoProvincias;
    List<UbigeoDistrito> lUbigeoDistrito;
    private boolean accesoGuardar = true;

    /**
     * Creates new form frmCobrador
     */
    public frmCobrador() {
        initComponents();
        TableColumn columna = tCobrador.getColumn("NRO");
        columna.setPreferredWidth(15);
        columna = tCobrador.getColumn("ID");
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setPreferredWidth(0);
        columna = tCobrador.getColumn("DNI");
        columna.setPreferredWidth(20);
        columna = tCobrador.getColumn("APELLIDO PATERNO");
        columna.setPreferredWidth(100);
        columna = tCobrador.getColumn("APELLIDO MATERNO");
        columna.setPreferredWidth(100);
        columna = tCobrador.getColumn("NOMBRES");
        columna.setPreferredWidth(150);
        columna = tCobrador.getColumn("FECHA NACIMIENTO");
        columna.setPreferredWidth(70);
        columna = tCobrador.getColumn("SEXO");
        columna.setPreferredWidth(30);
        txtNombres.setEditable(false);
        txtNombres.setDocument(new soloMayusculas());
        CobradorBO cobBO = CobradorBO.getInstance();
        SeguridadBO sBO = SeguridadBO.getInstance();
        if (sBO.getUsuario().getRolUsuario().equals("SA")) {
            accesoGuardar = true;
        } else {
            if (sBO.getUsuario().getRolUsuario().equals("A")) {
                accesoGuardar = true;
            } else {
                accesoGuardar = false;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        cbFiltro = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        btnIngresarCobrador = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tCobrador = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtDni = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbEstado = new javax.swing.JComboBox<>();
        pbCobrador = new javax.swing.JProgressBar();
        btnGuardar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Formulario de Cobradores");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N
        setName(""); // NOI18N

        jLabel1.setText("BÃºsqueda:");

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "POR DNI", "POR NOMBRE", "POR CODIGO" }));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar_mini1.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnIngresarCobrador.setText("Ingresar Cobrador");
        btnIngresarCobrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarCobradorActionPerformed(evt);
            }
        });

        tCobrador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NRO", "DNI", "APELLIDO PATERNO", "APELLIDO MATERNO", "NOMBRES", "FECHA NACIMIENTO", "SEXO", "ESTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tCobrador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tCobradorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tCobrador);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Cobrador"));

        jLabel2.setText("PERSONA:");

        txtNombres.setEditable(false);

        jLabel3.setText("CODIGO:");

        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDniKeyPressed(evt);
            }
        });

        jLabel4.setText("ESTADO:");

        cbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HABILITADO", "INHABILITADO" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDni, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(txtCodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombres, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/Guardar2.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pbCobrador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                        .addComponent(btnIngresarCobrador))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnIngresarCobrador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pbCobrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarCobrador() {
        txtNombres.setEditable(false);
        txtCodigo.setEditable(false);
        txtDni.setEditable(false);
        int tipoBusqueda = 0;
        if (cbFiltro.getSelectedItem() == "POR APELLIDO PATERNO") {
            tipoBusqueda = 1;
        } else if (cbFiltro.getSelectedItem() == "POR APELLIDO MATERNO") {
            tipoBusqueda = 2;
        } else if (cbFiltro.getSelectedItem() == "POR NOMBRE") {
            tipoBusqueda = 3;
        } else if (cbFiltro.getSelectedItem() == "POR DNI") {
            tipoBusqueda = 4;
        }

//        else if (cbFiltro.getSelectedItem() == "POR CODIGO") {
//            tipoBusqueda = 5;
//        }
        CobradorBO c = CobradorBO.getInstance();
        List<Cobrador> l = c.BuscarCobrador(txtBusqueda.getText(), tipoBusqueda);
//        List<Cobrador> cob = c.BuscarCobrador(txtBusqueda.getText(), tipoBusqueda);
        DefaultTableModel model = (DefaultTableModel) tCobrador.getModel();
        model = (DefaultTableModel) tCobrador.getModel();
        model.setRowCount(l.size());
        int cont = 0;
        for (Cobrador p : l) {
//            for(Cobrador co : cob ){
            model.setNumRows(cont);
            model.addRow(new Object[cont]);
            tCobrador.setValueAt(p.getIdCobrador(), cont, 0);
            tCobrador.setValueAt(cont + 1, cont, 1);
//            tCobrador.setValueAt(co.getCodCobrador(), cont, 2);
            tCobrador.setValueAt(p.getCliente().getPnroDocumento(), cont, 2);
            tCobrador.setValueAt(p.getCliente().getPapePat(), cont, 3);
            tCobrador.setValueAt(p.getCliente().getPapeMat(), cont, 4);
            tCobrador.setValueAt(p.getCliente().getPnombre(), cont, 5);
            tCobrador.setValueAt(p.getCliente().getPfechaNac(), cont, 6);
            tCobrador.setValueAt(p.getCliente().getPsexo(), cont, 7);
            if (p.getEstado().equals("H")) {
                tCobrador.setValueAt("HABILITADO", cont, 8);
            } else {
                tCobrador.setValueAt("INHABILITADO", cont, 8);
            }
            cont++;
            //}
        }
    }


    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Thread queryThread = new Thread() {
            public void run() {
                pbCobrador.setIndeterminate(true);
                pbCobrador.setStringPainted(true);
                pbCobrador.setString("BUSCANDO COBRADOR, POR FAVOR ESPERE");
                pbCobrador.setValue(100);
                pbCobrador.repaint();
                buscarCobrador();
                pbCobrador.setString("BUSQUEDA FINALIZADA");
                pbCobrador.setStringPainted(false);
                pbCobrador.setIndeterminate(false);
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnIngresarCobradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarCobradorActionPerformed
        txtNombres.setEditable(false);
        txtCodigo.setEditable(true);
        txtNombres.setText("");
        txtCodigo.setText("");
        txtDni.setText("");
        this.cobrador = new Cobrador();
        if (this.accesoGuardar) {
            btnGuardar.setEnabled(true);
        }
    }//GEN-LAST:event_btnIngresarCobradorActionPerformed

    private static boolean ValidarFecha(String fecha) {
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
            formatoFecha.setLenient(false);
            formatoFecha.parse(fecha);
        } catch (ParseException e) {
            return false;
        }
        return true;
    }


    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!txtNombres.getText().isEmpty() && !txtCodigo.getText().isEmpty()) {
            try {
                if (this.cobrador.getCliente() == null) {
                    JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UNA PERSONA", "ERROR", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (cbEstado.getSelectedItem().toString().equals("HABILITADO")) {
                    this.cobrador.setEstado("H");
                } else {
                    this.cobrador.setEstado("I");
                }
                this.cobrador.setCodCobrador(txtCodigo.getText().trim().toUpperCase());
                CobradorBO cob = CobradorBO.getInstance();
                if (this.cobrador.getIdCobrador() == 0) {
                    cob.GuardarCobrador(this.cobrador);
                    JOptionPane.showMessageDialog(this, "Se inserto Correctamente el Cobrador ", "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    cob.ActualizarCobrador(this.cobrador);
                    JOptionPane.showMessageDialog(this, "Se actualizo Correctamente el Cobrador ", "OK",
                            JOptionPane.INFORMATION_MESSAGE);
                }
                txtNombres.setEditable(false);
                txtNombres.setText("");
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Debe llenar todos los Campos", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tCobradorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tCobradorMouseClicked
        if (evt.getClickCount() == 2) {
            int fila = tCobrador.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tCobrador.getModel();
            String id = String.valueOf(model.getValueAt(fila, 0));
//            CobradorBO cob = CobradorBO.getInstance();
            SeguridadBO sBO = SeguridadBO.getINSTANCE();
            Cobrador co = (Cobrador) sBO.CargarObjeto("Cobrador", Integer.valueOf(id));
            Cliente cliente = (Cliente) sBO.CargarObjeto("Cliente", co.getCliente().getIdCliente());
            co.setCliente(cliente);
            this.cobrador = co;
            txtNombres.setText(this.cobrador.getCliente().getPapePat() + " " + this.cobrador.getCliente().getPapeMat() + " " + this.cobrador.getCliente().getPnombre());
            txtCodigo.setText(this.cobrador.getCodCobrador());
            txtDni.setText(this.cobrador.getCliente().getPnroDocumento());
            if (this.cobrador.getEstado().equals("H")) {
                cbEstado.setSelectedItem("HABILITADO");
            } else {
                cbEstado.setSelectedItem("INHABILITADO");
            }
            txtNombres.setEditable(false);
            txtCodigo.setEditable(true);
            txtDni.setEditable(true);
            if (this.accesoGuardar) {
                btnGuardar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_tCobradorMouseClicked

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarCobrador();
        }
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void txtDniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            PersonaBO pBO = PersonaBO.getInstance();
            Cliente persona = pBO.ObtenerPersona(txtDni.getText());
            if (persona != null) {
                txtNombres.setText(persona.getPapePat() + ' ' + persona.getPapeMat() + ' ' + persona.getPnombre());
                this.cobrador.setCliente(persona);
            } else {
                txtNombres.setText("");
                this.cobrador.setCliente(null);
            }
        }
    }//GEN-LAST:event_txtDniKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnIngresarCobrador;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pbCobrador;
    private javax.swing.JTable tCobrador;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
