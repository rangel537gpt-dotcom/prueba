/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caja.frm.administracion;

import caja.bo.ClienteBO;
import caja.bo.ContadorBO;
import caja.bo.DocumentoPagoBO;
import caja.bo.SeguridadBO;
import caja.bo.soloMayusculas;
import caja.dto.FichaDatosDTO;
import caja.frm.caja.frmCargando;
import caja.frm.frmPrincipal;
import caja.mapeo.entidades.Cliente;
import caja.mapeo.entidades.ClienteAuditorIndependiente;
import caja.mapeo.entidades.ClienteCertificado;
import caja.mapeo.entidades.ClienteComitePerito;
import caja.mapeo.entidades.ClienteDerechoHabiente;
import caja.mapeo.entidades.TipoDocIdentidad;
//import caja.mapeo.entidades.Cobrador;
import caja.mapeo.entidades.UbigeoDepartamento;
import caja.mapeo.entidades.UbigeoDistrito;
import caja.mapeo.entidades.UbigeoLocalidad;
import caja.mapeo.entidades.UbigeoProvincia;
import java.awt.Desktop;
//import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
//import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
//import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.apache.hc.client5.http.fluent.Request;
import org.apache.hc.client5.http.fluent.Response;
import units.DatePicker;

/**
 *
 * @author juan carlos
 */
public class frmContador extends javax.swing.JInternalFrame {

    private Cliente cliActual = new Cliente();
    private boolean accesoGuardar = true;

//    List<Cliente> listaCliente;
    /**
     * Creates new form frmContador
     */
    public frmContador() {
        initComponents();
        TableColumn columna = tContador.getColumn("NRO");
        columna.setPreferredWidth(10);
        columna = tContador.getColumn("ID");
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setPreferredWidth(0);
        columna = tContador.getColumn("CODIGO");
        columna.setPreferredWidth(15);
        columna = tContador.getColumn("DNI");
        columna.setPreferredWidth(20);
        columna = tContador.getColumn("APELLIDO PATERNO");
        columna.setPreferredWidth(100);
        columna = tContador.getColumn("APELLIDO MATERNO");
        columna.setPreferredWidth(100);
        columna = tContador.getColumn("NOMBRES");
        columna.setPreferredWidth(150);
        columna = tContador.getColumn("FECHA NACIMIENTO");
        columna.setPreferredWidth(80);
        columna = tContador.getColumn("SEXO");
        columna.setPreferredWidth(30);

//        SeguridadBO sBO = SeguridadBO.getInstance();
//        if (sBO.getUsuario().getRolUsuario().equals("SA")) {
//            accesoGuardar = true;
//        } else {
//            if (sBO.getUsuario().getRolUsuario().equals("A")) {
//                accesoGuardar = true;
//            } else {
//                accesoGuardar = false;
//            }
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBusqueda = new javax.swing.JTextField();
        cbFiltro = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        btnIngresarContador = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tContador = new javax.swing.JTable();
        pbContador = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("FORMULARIO DEL CONTADOR");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/icono.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(900, 600));

        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "POR CODIGO", "POR DNI", "POR NOMBRES" }));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja/images/buscar_mini1.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnIngresarContador.setText("Ingresar Contador");
        btnIngresarContador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarContadorActionPerformed(evt);
            }
        });

        tContador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NRO", "CODIGO", "DNI", "APELLIDO PATERNO", "APELLIDO MATERNO", "NOMBRES", "FECHA NACIMIENTO", "SEXO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tContador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tContadorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tContador);

        jButton1.setText("Exportar Padron");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Exportar D. Habiente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("BÃºsqueda:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pbContador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIngresarContador, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnIngresarContador)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pbContador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarContador() {
//        txtDNI.setEditable(false);
//        txtCodigo.setEditable(false);
//        txtPassword.setEditable(false);
//        cbCondicion.setEnabled(false);
//        txtApePat.setEditable(false);
//        txtFechaNac.setEditable(false);
//        cbSexo.setEnabled(false);
//        txtApeMat.setEditable(false);
//        txtFechaAfiliacion.setEditable(false);
//        txtTelefonoDomicilio.setEditable(false);
//        txtNombres.setEditable(false);
//        txtCentroTrabajo.setEditable(false);
//        txtMatriculaAuditor.setEditable(false);
//        cbActivo.setEnabled(false);
//        txtTelefonoCelular.setEditable(false);
//        txtDireccionDomicilio.setEditable(false);
//        cbCertificacion.setEnabled(false);
//        txtNumeroCertificado.setEditable(false);
//        txtTelefonoCelular1.setEditable(false);
//        cbDepartamentoDomicilio.setEnabled(false);
//        cbProvinciaDomicilio.setEnabled(false);
//        cbDistritoDomicilio.setEnabled(false);
//        cbLocalidadDomicilio.setEnabled(false);
//        txtTelefonoTrabajo.setEditable(false);
//        txtDireccionTrabajo.setEditable(false);
//        txtTelefonoTrabajo1.setEditable(false);
//        cbDepartamentoTrabajo.setEnabled(false);
//        cbProvinciaTrabajo.setEnabled(false);
//        cbDistritoTrabajo.setEnabled(false);
//        cbLocalidadTrabajo.setEnabled(false);
//        txtEmail.setEditable(false);
//        txtEmailAlternativo.setEditable(false);
//        cbUniversidad.setEnabled(false);
//        cbBuzon.setEnabled(false);
//        cbCobrador.setEnabled(false);
//        cbLugarCobranza.setEnabled(false);
//        txtObservaciones.setEditable(false);
//
//        btnFecha.setEnabled(false);
//        btnFechaA.setEnabled(false);

        int tipoBusqueda = 0;
        if (cbFiltro.getSelectedItem() == "POR APELLIDOS") {
            tipoBusqueda = 1;
        } else if (cbFiltro.getSelectedItem() == "POR CODIGO") {
            tipoBusqueda = 2;
        } else if (cbFiltro.getSelectedItem() == "POR DNI") {
            tipoBusqueda = 3;
        } else if (cbFiltro.getSelectedItem() == "POR NOMBRES") {
            tipoBusqueda = 4;
        } else if (cbFiltro.getSelectedItem() == "POR APELLIDO PATERNO") {
            tipoBusqueda = 5;
        } else if (cbFiltro.getSelectedItem() == "POR APELLIDO MATERNO") {
            tipoBusqueda = 6;
        }

        ContadorBO c = ContadorBO.getInstance();
        List<Cliente> l = c.BuscarContador(txtBusqueda.getText(), tipoBusqueda);
        DefaultTableModel modelo = (DefaultTableModel) tContador.getModel();
        modelo = (DefaultTableModel) tContador.getModel();
        modelo.setRowCount(l.size());
        int contador = 0;
        for (Cliente cli : l) {
            modelo.setNumRows(contador);
            modelo.addRow(new Object[contador]);
            tContador.setValueAt(cli.getIdCliente(), contador, 0);
            tContador.setValueAt(contador + 1, contador, 1);
            tContador.setValueAt(cli.getCcodigoCole(), contador, 2);
            tContador.setValueAt(cli.getPnroDocumento(), contador, 3);
            tContador.setValueAt(cli.getPapePat(), contador, 4);
            tContador.setValueAt(cli.getPapeMat(), contador, 5);
            tContador.setValueAt(cli.getPnombre(), contador, 6);
            tContador.setValueAt(cli.getPfechaNac(), contador, 7);
            tContador.setValueAt(cli.getPsexo(), contador, 8);
            contador++;
        }
    }

    //implementar
    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarContador();
        }
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Thread queryThread = new Thread() {
            public void run() {
                pbContador.setIndeterminate(true);
                pbContador.setStringPainted(true);
                pbContador.setString("BUSCANDO CONTADOR, POR FAVOR ESPERE");
                pbContador.setValue(100);
                pbContador.repaint();
                buscarContador();
                pbContador.setString("BUSQUEDA FINALIZADA");
                pbContador.setStringPainted(false);
                pbContador.setIndeterminate(false);
            }
        };
        queryThread.start();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnIngresarContadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarContadorActionPerformed
        Cliente cliente = new Cliente();
        frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        f.AbrirFormularioContadorDetalle(cliente, null);

//        btnIngresarContador.setEnabled(true);
//        btnGuardar.setEnabled(true);
//        txtDNI.setEditable(true);
//        txtCodigo.setEditable(true);
//        txtPassword.setEditable(true);
//        cbCondicion.setEnabled(true);
//        txtApePat.setEditable(true);
//        txtFechaNac.setEditable(true);
//        cbSexo.setEnabled(true);
//        txtApeMat.setEditable(true);
//        txtFechaAfiliacion.setEditable(true);
//        txtTelefonoDomicilio.setEditable(true);
//        txtNombres.setEditable(true);
//        txtCentroTrabajo.setEditable(true);
//        txtMatriculaAuditor.setEditable(true);
//        cbActivo.setEnabled(true);
//        cbCertificacion.setEnabled(true);
//        txtNumeroCertificado.setEditable(true);
//        txtTelefonoCelular.setEditable(true);
//        txtDireccionDomicilio.setEditable(true);
//        txtTelefonoCelular1.setEditable(true);
//        cbDepartamentoDomicilio.setEnabled(true);
//        cbDepartamentoDomicilio.setSelectedIndex(cbDepartamentoDomicilio.getItemCount() - 1);
//        cbProvinciaDomicilio.setEnabled(true);
//        cbProvinciaDomicilio.setSelectedIndex(0);
//        cbDistritoDomicilio.setEnabled(true);
//        cbDistritoDomicilio.setSelectedIndex(0);
//        cbDepartamentoTrabajo.setEnabled(true);
//        cbDepartamentoTrabajo.setSelectedIndex(cbDepartamentoTrabajo.getItemCount() - 1);
//        cbProvinciaTrabajo.setEnabled(true);
//        cbProvinciaTrabajo.setSelectedIndex(0);
//        cbDistritoTrabajo.setEnabled(true);
//        cbDistritoTrabajo.setSelectedIndex(0);
//        txtTelefonoTrabajo.setEditable(true);
//        txtDireccionTrabajo.setEditable(true);
//        txtTelefonoTrabajo1.setEditable(true);
//        txtEmail.setEditable(true);
//        txtEmailAlternativo.setEditable(true);
//        cbUniversidad.setEnabled(true);
//        cbBuzon.setEnabled(true);
//        cbCobrador.setEnabled(true);
//        cbLugarCobranza.setEnabled(true);
//        txtObservaciones.setEditable(true);
//        txtDNI.setFocusable(true);
//        txtDNI.requestFocus();
//        btnFecha.setEnabled(true);
//        btnFechaA.setEnabled(true);
//        txtDNI.setText("");
//        txtCodigo.setText("");
//        txtPassword.setText("");
//        txtApePat.setText("");
//        txtFechaNac.setText("1900-01-01");
//        txtApeMat.setText("");
//        txtFechaAfiliacion.setText("1900-01-01");
//        txtTelefonoDomicilio.setText("");
//        txtNombres.setText("");
//        txtCentroTrabajo.setText("");
//        txtMatriculaAuditor.setText("");
//        txtTelefonoCelular.setText("");
//        txtDireccionDomicilio.setText("");
//        txtNumeroCertificado.setText("");
//        txtTelefonoCelular1.setText("");
//        txtTelefonoTrabajo.setText("");
//        txtDireccionTrabajo.setText("");
//        txtTelefonoTrabajo1.setText("");
//        txtEmail.setText("");
//        txtEmailAlternativo.setText("");
//        txtObservaciones.setText("");
//        this.cliActual = new Cliente();
//        if (this.accesoGuardar) {
//            btnGuardar.setEnabled(true);
//        } else {
//            btnGuardar.setEnabled(false);
//        }
    }//GEN-LAST:event_btnIngresarContadorActionPerformed

    private static boolean esFechaValida(String fecha) {
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
            formatoFecha.setLenient(false);
            formatoFecha.parse(fecha);
        } catch (ParseException e) {
            return false;
        }
        return true;
    }


    private void tContadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tContadorMouseClicked
        if (evt.getClickCount() == 2) {
//            btnGuardar.setEnabled(false);

            int fila = tContador.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tContador.getModel();

            String idCliente = String.valueOf(model.getValueAt(fila, 0));
//            btnGuardar.setEnabled(true);

            SeguridadBO sBO = SeguridadBO.getINSTANCE();
            Cliente cli = (Cliente) sBO.CargarObjeto("Cliente", Integer.valueOf(idCliente));

            frmPrincipal f = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
            f.AbrirFormularioContadorDetalle(cli, null);

//            cliActual = cli;
//
//            if (cliActual.getCcodigoCole() == null) {
//                txtCodigo.setText("");
//            }
//
//            if (cliActual.getPnroDocumento() == null) {
//                txtDNI.setText("");
//            }
//
//            //cb de CondiciÃ³n
//            String condicion = cliActual.getEstado();
//            if (condicion.equals("H")) {
//                cbCondicion.setSelectedItem("HABIL");
//            } else if (condicion.equals("O")) {
//                cbCondicion.setSelectedItem("HONORARIO");
//            } else if (condicion.equals("V")) {
//                cbCondicion.setSelectedItem("VITALICIO");
//            } else if (condicion.equals("I")) {
//                cbCondicion.setSelectedItem("INHABILITADO");
//            } else if (condicion.equals("F")) {
//                cbCondicion.setSelectedItem("FALLECIDO");
//            } else if (condicion.equals("L")) {
//                cbCondicion.setSelectedItem("LICENCIA");
//            } else {
//                cbCondicion.setSelectedItem(("RETIRADO"));
//            }
//
//            //cb de sexo
//            String sexo = cliActual.getPsexo(); //capturando el valor del campo sexo en la BD
//            if (sexo.equals("M")) //sexo == "M"
//            {
//                cbSexo.setSelectedItem("MASCULINO"); //equals("MASCULINO");//getSelectedItem() == "MASCULINO";
//            } else {
//                cbSexo.setSelectedItem("FEMENINO");
//            }
//
//            //cb de Si es Activo o No
//            String esActivo = cliActual.getCestaActivo();
//
//            if (cliActual.getCestaActivo() == null) {
//                cbActivo.setSelectedItem("--");
//            } else if (esActivo.equals("S")) {
//                cbActivo.setSelectedItem("SI");
//            } else {
//                cbActivo.setSelectedItem("NO");
//            }
//
//            //cb de SI es o NO Certificado
//            String esCertificado = cliActual.getCesCertificado();
//
//            if (cliActual.getCesCertificado() == null) {
//                cbCertificacion.setSelectedItem("--");
//            } else if (esCertificado.equals("S")) {
//                cbCertificacion.setSelectedItem("SI");
//            } else {
//                cbCertificacion.setSelectedItem("NO");
//            }
//
//            //cb de Universidades
//            String universidad = cliActual.getCuniversidad();
//
//            if (cliActual.getCuniversidad() == null) {
//                cbUniversidad.setSelectedItem("-----");
//            } else if (universidad.equals("01")) {
//                cbUniversidad.setSelectedItem("01 SAN AGUSTIN");
//            } else if (universidad.equals("02")) {
//                cbUniversidad.setSelectedItem("02 CATOLICA");
//            } else if (universidad.equals("03")) {
//                cbUniversidad.setSelectedItem("03 SAN PABLO");
//            } else if (universidad.equals("04")) {
//                cbUniversidad.setSelectedItem("04 ALAS PERUANAS");
//            } else {
//                cbUniversidad.setSelectedItem("99 OTRAS");
//            }
//
//            //cb de Cobradores
//            String cobradores = cliActual.getCobcodigoCobrador();
//
//            if (cliActual.getCobcodigoCobrador() == null) {
//                cbCobrador.setSelectedItem("----------");
//            } else if (cobradores.equals("01")) {
//                cbCobrador.setSelectedItem("CAJA 01");
//            } else if (cobradores.equals("03")) {
//                cbCobrador.setSelectedItem("CERVANTES TAMAYO HERNAN 03");
//            } else if (cobradores.equals("05")) {
//                cbCobrador.setSelectedItem("MASIEL ERIKA CARPIO CARPIO 05");
//            } else if (cobradores.equals("06")) {
//                cbCobrador.setSelectedItem("GUSTAVO COPARA CUSI 06");
//            } else if (cobradores.equals("07")) {
//                cbCobrador.setSelectedItem("GINO QUIROZ APAZA 07");
//            } else {
//                cbCobrador.setSelectedItem("HERNAN BELLIDO QUISPE 08");
//            }
//
////            cb Lugar de cobranza
//            String lugarCobranza = cliActual.getClugarCobranza();
//
//            if (cliActual.getClugarCobranza() == null) {
//                cbLugarCobranza.setSelectedItem("-----");
//            } else if (lugarCobranza.equals("D")) {
//                cbLugarCobranza.setSelectedItem("DOMICILIO");
//            } else if (lugarCobranza.equals("T")) {
//                cbLugarCobranza.setSelectedItem("TRABAJO");
//            } else {
//                cbLugarCobranza.setSelectedItem("NINGUNO");
//            }
//
//            //cb de BuzÃ³n
//            String buzon = cliActual.getCbuzon();
//
//            if (cliActual.getCbuzon() == null) {
//                cbBuzon.setSelectedItem("-----");
//            } else if (buzon.equals("D")) {
//                cbBuzon.setSelectedItem("DOMICILIO");
//            } else if (buzon.equals("T")) {
//                cbBuzon.setSelectedItem("TRABAJO");
//            } else {
//                cbBuzon.setSelectedItem("NINGUNO");
//            }
//            //cb de ubigeo departamento domicilio   -- otra opciÃ³n un for del ubigeo departamento y capturar el nombre
//            if (cliActual.getCdepDomicilio() == null) {
//                cbDepartamentoDomicilio.setSelectedIndex(cbDepartamentoDomicilio.getItemCount() - 1);  //removeAll();
//            } else {
//                for (int i = 0; i < cbDepartamentoDomicilio.getItemCount(); i++) {
//                    UbigeoDepartamento dep = (UbigeoDepartamento) cbDepartamentoDomicilio.getItemAt(i);
//                    if (dep.getIdDepartamento() == cliActual.getCdepDomicilio()) {
//                        cbDepartamentoDomicilio.setSelectedItem(dep);
//                    }
//                }
//            }
//
//            //cb de ubigeo departamento trabajo
//            if (cliActual.getCdepTrabajo() == null) {
////                cbDepartamentoTrabajo.removeAll();
//                cbDepartamentoTrabajo.setSelectedIndex(cbDepartamentoTrabajo.getItemCount() - 1);
//            } else {
//                for (int i = 0; i < cbDepartamentoTrabajo.getItemCount(); i++) {
//                    UbigeoDepartamento dep = (UbigeoDepartamento) cbDepartamentoTrabajo.getItemAt(i);
//                    if (dep.getIdDepartamento() == cliActual.getCdepTrabajo()) {
//                        cbDepartamentoTrabajo.setSelectedItem(dep);
//                    }
//                }
//            }
//
//            //cb de ubigeo provincia domicilio mediante un for para hallar la posiciÃ³n del idProvincia, antes los null
//            if (cliActual.getCproDomicilio() == null) {
////                cbProvinciaDomicilio.removeAll();
//                cbProvinciaDomicilio.setSelectedIndex(0);
//            } else {
//                for (int i = 0; i < cbProvinciaDomicilio.getItemCount(); i++) {
//                    UbigeoProvincia pro = (UbigeoProvincia) cbProvinciaDomicilio.getItemAt(i);
//                    if (pro.getIdProvincia() == cliActual.getCproDomicilio()) {
//                        cbProvinciaDomicilio.setSelectedItem(pro);
//                    }
//                }
//            }
//            if (cliActual.getCproTrabajo() == null) {
//                cbProvinciaTrabajo.setSelectedIndex(0);    //removeAll();
//            } else {
//                for (int i = 0; i < cbProvinciaTrabajo.getItemCount(); i++) {
//                    UbigeoProvincia pro = (UbigeoProvincia) cbProvinciaTrabajo.getItemAt(i);
//                    if (pro.getIdProvincia() == cliActual.getCproTrabajo()) {
//                        cbProvinciaTrabajo.setSelectedItem(pro);
//                    }
//                }
//            }
//            if (cliActual.getCdisDomicilio() == null) {
//                cbDistritoDomicilio.setSelectedIndex(0);                //removeAll();
//            } else {
//                for (int i = 0; i < cbDistritoDomicilio.getItemCount(); i++) {
//                    UbigeoDistrito dis = (UbigeoDistrito) cbDistritoDomicilio.getItemAt(i);
//                    if (dis.getIdDistrito() == cliActual.getCdisDomicilio()) {
//                        cbDistritoDomicilio.setSelectedItem(dis);
//                    }
//                }
//            }
//            if (cliActual.getCdisTrabajo() == null) {
//                cbDistritoTrabajo.setSelectedIndex(0);          //removeAll();
//            } else {
//                for (int i = 0; i < cbDistritoTrabajo.getItemCount(); i++) {
//                    UbigeoDistrito dis = (UbigeoDistrito) cbDistritoTrabajo.getItemAt(i);
//                    if (dis.getIdDistrito() == cliActual.getCdisTrabajo()) {
//                        cbDistritoTrabajo.setSelectedItem(dis);
//                    }
//                }
//            }
//            if (cliActual.getClocaDomicilio() == null) {
////                cbLocalidadDomicilio.setSelectedIndex(0);          //removeAll();
//            } else {
//                for (int i = 0; i < cbLocalidadDomicilio.getItemCount(); i++) {
//                    UbigeoLocalidad loc = (UbigeoLocalidad) cbLocalidadDomicilio.getItemAt(i);
//                    if (loc.getIdLocalidad() == cliActual.getClocaDomicilio()) {
//                        cbLocalidadDomicilio.setSelectedItem(loc);
//                    }
//                }
//            }
//            if (cliActual.getClocaTrabajo() == null) {
////                cbLocalidadTrabajo.setSelectedIndex(0);          //removeAll();
//            } else {
//                for (int i = 0; i < cbLocalidadTrabajo.getItemCount(); i++) {
//                    UbigeoLocalidad loc = (UbigeoLocalidad) cbLocalidadTrabajo.getItemAt(i);
//                    if (loc.getIdLocalidad() == cliActual.getClocaTrabajo()) {
//                        cbLocalidadTrabajo.setSelectedItem(loc);
//                    }
//                }
//            }
//            ClienteBO cBO = ClienteBO.getInstance();
//            List<ClienteCertificado> l = cBO.ObtenerClienteCertificado_SegunCliente(cliActual.getIdCliente());
//            DefaultTableModel modelo = (DefaultTableModel) tCertificados.getModel();
//            modelo.setRowCount(0);
//            int contador = 0;
//            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//            for (ClienteCertificado cc : l) {
//                modelo.setNumRows(contador);
//                modelo.addRow(new Object[contador]);
//                tCertificados.setValueAt(cc, contador, 0);
//                tCertificados.setValueAt(contador + 1, contador, 1);
//                tCertificados.setValueAt(format.format(cc.getDesde()), contador, 2);
//                tCertificados.setValueAt(format.format(cc.getHasta()), contador, 3);
//                tCertificados.setValueAt(cc.getTipo(), contador, 4);
//                contador++;
//            }
//            List<ClienteDerechoHabiente> ldh = cBO.ObtenerClienteDerechoHabiente_SegunCliente(cliActual.getIdCliente());
//            modelo = (DefaultTableModel) tDerechoHabiente.getModel();
//            modelo.setRowCount(0);
//            contador = 0;
//            for (ClienteDerechoHabiente cc : ldh) {
//                modelo.setNumRows(contador);
//                modelo.addRow(new Object[contador]);
//                tDerechoHabiente.setValueAt(cc, contador, 0);
//                tDerechoHabiente.setValueAt(contador + 1, contador, 1);
//                tDerechoHabiente.setValueAt(cc.getDni(), contador, 2);
//                tDerechoHabiente.setValueAt(cc.getApePat() + " " + cc.getApeMat() + " " + cc.getNombre(), contador, 3);
//                tDerechoHabiente.setValueAt(cc.getParentesco(), contador, 4);
//                tDerechoHabiente.setValueAt(cc.getFechaNacimiento() != null ? format.format(cc.getFechaNacimiento()) : "1900-01-01", contador, 5);
//                tDerechoHabiente.setValueAt(cc.getCelular(), contador, 6);
//                tDerechoHabiente.setValueAt(cc.getEmail(), contador, 7);
//                contador++;
//            }
//            List<ClienteAuditorIndependiente> lai = cBO.ObtenerClienteAuditorIndependiente_SegunCliente(cliActual.getIdCliente());
//            modelo = (DefaultTableModel) tAuditorIndependiente.getModel();
//            modelo.setRowCount(0);
//            contador = 0;
//            for (ClienteAuditorIndependiente cc : lai) {
//                modelo.setNumRows(contador);
//                modelo.addRow(new Object[contador]);
//                tAuditorIndependiente.setValueAt(cc, contador, 0);
//                tAuditorIndependiente.setValueAt(contador + 1, contador, 1);
//                tAuditorIndependiente.setValueAt(cc.getFechaAfiliacion() != null ? format.format(cc.getFechaAfiliacion()) : "1900-01-01", contador, 2);
//                tAuditorIndependiente.setValueAt(cc.getFechaVigenciaDesde() != null ? format.format(cc.getFechaVigenciaDesde()) : "1900-01-01", contador, 3);
//                tAuditorIndependiente.setValueAt(cc.getFechaVigenciaHasta() != null ? format.format(cc.getFechaVigenciaHasta()) : "1900-01-01", contador, 4);
//                String sector = "-";
//                if (!Objects.isNull(cc.getSector())) {
//                    if (cc.getSector().equals("P")) {
//                        sector = "Privado";
//                    } else {
//                        if (cc.getSector().equals("G")) {
//                            sector = "Gubernamental";
//                        }
//                    }
//                }
//                tAuditorIndependiente.setValueAt(sector, contador, 5);
//                contador++;
//            }
//            List<ClienteComitePerito> lcp = cBO.ObtenerClienteComitePerito_SegunCliente(cliActual.getIdCliente());
//            modelo = (DefaultTableModel) tComitePerito.getModel();
//            modelo.setRowCount(0);
//            contador = 0;
//            for (ClienteComitePerito cc : lcp) {
//                modelo.setNumRows(contador);
//                modelo.addRow(new Object[contador]);
//                tComitePerito.setValueAt(cc, contador, 0);
//                tComitePerito.setValueAt(contador + 1, contador, 1);
//                tComitePerito.setValueAt(cc.getDesde() != null ? format.format(cc.getDesde()) : "1900-01-01", contador, 2);
//                tComitePerito.setValueAt(cc.getHasta() != null ? format.format(cc.getHasta()) : "1900-01-01", contador, 3);
//                String tipo = "-";
//                if (!Objects.isNull(cc.getTipo())) {
//                    if (cc.getTipo().equals("J")) {
//                        tipo = "REPEJ";
//                    } else {
//                        if (cc.getTipo().equals("F")) {
//                            tipo = "REPEF";
//                        }
//                    }
//                }
//                tComitePerito.setValueAt(tipo, contador, 4);
//                contador++;
//            }
//            txtDNI.setText(cliActual.getPnroDocumento());
//            txtCodigo.setText(cliActual.getCcodigoCole());
//            txtPassword.setText(cliActual.getCpasswd());
//            txtApePat.setText(cliActual.getPapePat());
//            txtApeMat.setText(cliActual.getPapeMat());
//            SimpleDateFormat formatoDeFecha = new SimpleDateFormat("yyyy-MM-dd");
//            if (cliActual.getPfechaNac() != null) {
//                txtFechaNac.setText(formatoDeFecha.format(cliActual.getPfechaNac()));
//            }
//            if (cliActual.getCfechaAfiliacion() != null) {
//                txtFechaAfiliacion.setText(formatoDeFecha.format(cliActual.getCfechaAfiliacion()));
//            }
//            txtNombres.setText(cliActual.getPnombre());
//            txtCentroTrabajo.setText(cliActual.getCcentroTrabajo());
//            txtMatriculaAuditor.setText(cliActual.getCmatAuditor());
//            txtNumeroCertificado.setText(cliActual.getCnroCertificacion());
//            txtTelefonoDomicilio.setText(cliActual.getPtelefonoDomicilio());
//            txtTelefonoCelular.setText(cliActual.getPtelefonoCelular());
//            txtTelefonoCelular1.setText(cliActual.getPtelefonoCelular1());
//            txtTelefonoTrabajo.setText(cliActual.getPtelefonoTrabajo());
//            txtTelefonoTrabajo1.setText(cliActual.getPtelefonoTrabajo1());
//            txtDireccionDomicilio.setText(cliActual.getPdireccionDomicilio());
//            txtDireccionTrabajo.setText(cliActual.getPdireccionTrabajo());
//            txtEmail.setText(cliActual.getCemail());
//            txtEmailAlternativo.setText(cliActual.getCemailAlternativo());
//            //txtCobrador.setText(cliActual.getc);
//            txtObservaciones.setText(cliActual.getCobservacion());
//            if (cliActual.getEstadoCivil() != null) {
//                cbEstadoCivil.setSelectedItem(cliActual.getEstadoCivil());
//            } else {
//                cbEstadoCivil.setSelectedItem("-");
//            }
//            txtDNI.setEditable(true);
//            txtCodigo.setEditable(true);
//            txtPassword.setEditable(true);
//            cbCondicion.setEnabled(true);
//            txtApePat.setEditable(true);
//            txtFechaNac.setEditable(true);
//            cbSexo.setEnabled(true);
//            txtApeMat.setEditable(true);
//            txtFechaAfiliacion.setEditable(true);
//            txtNombres.setEditable(true);
//            txtCentroTrabajo.setEditable(true);
//            txtMatriculaAuditor.setEditable(true);
//            cbActivo.setEnabled(true);
//            cbCertificacion.setEnabled(true);
//            txtNumeroCertificado.setEditable(true);
//            txtTelefonoDomicilio.setEditable(true);
//            txtTelefonoCelular.setEditable(true);
//            txtDireccionDomicilio.setEditable(true);
//            txtTelefonoCelular1.setEditable(true);
//            cbDepartamentoDomicilio.setEnabled(true);
//            cbProvinciaDomicilio.setEnabled(true);
//            cbDistritoDomicilio.setEnabled(true);
//            txtTelefonoTrabajo.setEditable(true);
//            txtDireccionTrabajo.setEditable(true);
//            txtTelefonoTrabajo1.setEditable(true);
//            cbDepartamentoTrabajo.setEnabled(true);
//            cbProvinciaTrabajo.setEnabled(true);
//            cbDistritoTrabajo.setEnabled(true);
//            txtEmail.setEditable(true);
//            txtEmailAlternativo.setEditable(true);
//            cbUniversidad.setEnabled(true);
//            cbBuzon.setEnabled(true);
//            cbCobrador.setEnabled(true);
//            cbLugarCobranza.setEnabled(true);
//            txtObservaciones.setEditable(true);
//            btnFecha.setEnabled(true);
//            btnFechaA.setEnabled(true);
//            if (this.accesoGuardar) {
//                btnGuardar.setEnabled(true);
//            } else {
//                btnGuardar.setEnabled(false);
//            }
        }
    }//GEN-LAST:event_tContadorMouseClicked

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    public String RellenarEspaciosDerecha(String p, int cant) {
        int cantidad = p.length();
        while (cantidad < cant) {
            p = p + " ";
            cantidad++;
        }
        return p;
    }

    private void GenerarArchivo() {
        try {
            File carpeta = new File("archivos");
            carpeta.mkdirs();
            carpeta = new File("archivos/PADRON");
            carpeta.mkdirs();
            BufferedWriter bw = null;
            PrintWriter wr = null;
            File f;
            Date fechaSistema = new Date();
            SimpleDateFormat formato = new SimpleDateFormat("yyyyMMdd");
//            SimpleDateFormat fechaEnvio = new SimpleDateFormat("yyyyMMdd");
            String nombreArchivo = "archivos/PADRON/PADRON" + formato.format(fechaSistema) + ".txt";
            f = new File(nombreArchivo);
            FileWriter w = new FileWriter(f);
            bw = new BufferedWriter(w);
            wr = new PrintWriter(bw);
            ClienteBO cBO = ClienteBO.getInstance();
            List<Cliente> listado = cBO.ObtenerTodosContadores();
//                Calendar calendario = Calendar.getInstance();
            SimpleDateFormat format = new SimpleDateFormat("MM/dd/yyyy");
            for (Cliente c : listado) {
                String rucImformante = "20174327026";
                String tipoDocumento = "01";
                String nroDocIdentidad = this.RellenarEspaciosDerecha(c.getPnroDocumento(), 15);
                String apePat = "";
                if (c.getPapePat() != null) {
                    apePat = this.RellenarEspaciosDerecha(c.getPapePat(), 50);
                } else {
                    apePat = this.RellenarEspaciosDerecha("", 50);
                }
                String apeMat = "";
                if (c.getPapeMat() != null) {
                    apeMat = this.RellenarEspaciosDerecha(c.getPapeMat(), 50);
                } else {
                    apeMat = this.RellenarEspaciosDerecha("", 50);
                }
                String nombre = "";
                if (c.getPnombre() != null) {
                    nombre = this.RellenarEspaciosDerecha(c.getPnombre(), 80);
                } else {
                    nombre = this.RellenarEspaciosDerecha("", 80);
                }
                String estado = c.getEstado();
                if (c.getEstado().equals("H")) {
                    estado = "HABIL";
                } else {
                    if (c.getEstado().equals("I")) {
                        estado = "INHABIL";
                    } else {
                        if (c.getEstado().equals("V")) {
                            estado = "HABIL";
                        } else {
                            if (c.getEstado().equals("O")) {
                                estado = "HABIL";
                            } else {
                                if (c.getEstado().equals("L")) {
                                    estado = "LICENCIA";
                                } else {
                                    if (c.getEstado().equals("F")) {
                                        estado = "FALLECIDO";
                                    } else {
                                        if (c.getEstado().equals("R")) {
                                            estado = "RETIRADO";
                                        } else {
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                estado = this.RellenarEspaciosDerecha(estado, 15);
                String nroColegiado = this.RellenarEspaciosDerecha(c.getCcodigoCole(), 50);
                String fechaColegiado = "";
                if (c.getCfechaAfiliacion() != null) {
                    fechaColegiado = format.format(c.getCfechaAfiliacion());
                }
                String detalle = rucImformante + tipoDocumento + nroDocIdentidad + apePat + apeMat + nombre + estado + nroColegiado + fechaColegiado;
                wr.write(detalle + "\r\n");
//                if (c.getPnroDocumento().equals("45008182")) {
//                    boolean a = true;
//                }
//                System.out.println(detalle);
            }
            wr.close();
            bw.close();
            try {
                File objetofile = new File(nombreArchivo);
                Desktop.getDesktop().open(objetofile);
            } catch (IOException ex) {
                System.out.println(ex);
            }
        } catch (IOException e) {
        };
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        frmPrincipal fPrin = (frmPrincipal) this.getParent().getParent().getParent().getParent().getParent();
        Thread queryThread = new Thread() {
            public void run() {
                frmCargando fCargando = new frmCargando();
                fPrin.AgregarFormulario(fCargando);
                int x = (fPrin.getWidth() - fCargando.getWidth()) / 2;
                int y = (fPrin.getHeight() - fCargando.getHeight()) / 2;
                fCargando.setLocation(x, y);
                fCargando.setVisible(true);
                fCargando.toFront();
                GenerarArchivo();
                fCargando.dispose();
            }
        };
        queryThread.start();
    }//GEN-LAST:event_jButton1ActionPerformed

//    public void agregarDerechoHabiente(ClienteDerechoHabiente cc) {
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//        DefaultTableModel modelo = (DefaultTableModel) tDerechoHabiente.getModel();
//        int contador = tDerechoHabiente.getRowCount();
//        modelo.setNumRows(contador);
//        modelo.addRow(new Object[contador]);
//        tDerechoHabiente.setValueAt(cc, contador, 0);
//        tDerechoHabiente.setValueAt(contador + 1, contador, 1);
//        tDerechoHabiente.setValueAt(cc.getDni(), contador, 2);
//        tDerechoHabiente.setValueAt(cc.getApePat() + " " + cc.getApeMat() + " " + cc.getNombre(), contador, 3);
//        tDerechoHabiente.setValueAt(cc.getParentesco(), contador, 4);
//        tDerechoHabiente.setValueAt(format.format(cc.getFechaNacimiento()), contador, 5);
//        tDerechoHabiente.setValueAt(cc.getCelular(), contador, 6);
//        tDerechoHabiente.setValueAt(cc.getEmail(), contador, 7);
//    }
//
//    public void actualizarDerechoHabiente(int fila, ClienteDerechoHabiente cc) {
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//        tDerechoHabiente.setValueAt(cc.getDni(), fila, 2);
//        tDerechoHabiente.setValueAt(cc.getApePat() + " " + cc.getApeMat() + " " + cc.getNombre(), fila, 3);
//        tDerechoHabiente.setValueAt(cc.getParentesco(), fila, 4);
//        tDerechoHabiente.setValueAt(format.format(cc.getFechaNacimiento()), fila, 5);
//        tDerechoHabiente.setValueAt(cc.getCelular(), fila, 6);
//        tDerechoHabiente.setValueAt(cc.getEmail(), fila, 7);
//    }
//
//    public void agregarAuditorIndependiente(ClienteAuditorIndependiente cc) {
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//        DefaultTableModel modelo = (DefaultTableModel) tAuditorIndependiente.getModel();
//        int contador = tAuditorIndependiente.getRowCount();
//        modelo.setNumRows(contador);
//        modelo.addRow(new Object[contador]);
//        tAuditorIndependiente.setValueAt(cc, contador, 0);
//        tAuditorIndependiente.setValueAt(contador + 1, contador, 1);
//        tAuditorIndependiente.setValueAt(format.format(cc.getFechaAfiliacion()), contador, 2);
//        tAuditorIndependiente.setValueAt(format.format(cc.getFechaVigenciaDesde()), contador, 3);
//        tAuditorIndependiente.setValueAt(format.format(cc.getFechaVigenciaHasta()), contador, 4);
//        String sector = "-";
//        if (!Objects.isNull(cc.getSector())) {
//            if (cc.getSector().equals("P")) {
//                sector = "Privado";
//            } else {
//                if (cc.getSector().equals("G")) {
//                    sector = "Gubernamental";
//                }
//            }
//        }
//        tAuditorIndependiente.setValueAt(sector, contador, 5);
//    }
//
//    public void actualizarAuditorIndependiente(int fila, ClienteAuditorIndependiente cc) {
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//        tAuditorIndependiente.setValueAt(format.format(cc.getFechaAfiliacion()), fila, 2);
//        tAuditorIndependiente.setValueAt(format.format(cc.getFechaVigenciaDesde()), fila, 3);
//        tAuditorIndependiente.setValueAt(format.format(cc.getFechaVigenciaHasta()), fila, 4);
//        String sector = "-";
//        if (!Objects.isNull(cc.getSector())) {
//            if (cc.getSector().equals("P")) {
//                sector = "Privado";
//            } else {
//                if (cc.getSector().equals("G")) {
//                    sector = "Gubernamental";
//                }
//            }
//        }
//        tAuditorIndependiente.setValueAt(sector, fila, 5);
//    }
//
//    public void agregarComitePerito(ClienteComitePerito cc) {
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//        DefaultTableModel modelo = (DefaultTableModel) tComitePerito.getModel();
//        int contador = tComitePerito.getRowCount();
//        modelo.setNumRows(contador);
//        modelo.addRow(new Object[contador]);
//        tComitePerito.setValueAt(cc, contador, 0);
//        tComitePerito.setValueAt(contador + 1, contador, 1);
////        tComitePerito.setValueAt(format.format(cc.getFechaAfiliacion()), contador, 2);
//        tComitePerito.setValueAt(format.format(cc.getDesde()), contador, 2);
//        tComitePerito.setValueAt(!Objects.isNull(cc.getHasta()) ? format.format(cc.getHasta()) : "", contador, 3);
//        String tipo = "-";
//        if (!Objects.isNull(cc.getTipo())) {
//            if (cc.getTipo().equals("J")) {
//                tipo = "REPEJ";
//            } else {
//                if (cc.getTipo().equals("F")) {
//                    tipo = "REPEF";
//                }
//            }
//        }
//        tComitePerito.setValueAt(tipo, contador, 4);
//    }
//
//    public void actualizarComitePerito(int fila, ClienteComitePerito cc) {
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
////        tComitePerito.setValueAt(format.format(cc.getFechaAfiliacion()), fila, 2);
//        tComitePerito.setValueAt(format.format(cc.getDesde()), fila, 2);
//        tComitePerito.setValueAt(!Objects.isNull(cc.getHasta()) ? format.format(cc.getHasta()) : "", fila, 3);
//        String tipo = "-";
//        if (!Objects.isNull(cc.getTipo())) {
//            if (cc.getTipo().equals("J")) {
//                tipo = "REPEJ";
//            } else {
//                if (cc.getTipo().equals("F")) {
//                    tipo = "REPEF";
//                }
//            }
//        }
//        tComitePerito.setValueAt(tipo, fila, 4);
//    }


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DocumentoPagoBO dpBO = DocumentoPagoBO.getInstance();
        dpBO.exportarDerechoHabientes();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnIngresarContador;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pbContador;
    private javax.swing.JTable tContador;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
